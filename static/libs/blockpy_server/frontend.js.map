{"version":3,"sources":["webpack://frontend/./node_modules/knockout-switch-case/knockout-switch-case.js","webpack://frontend/./node_modules/linkify-it/index.js","webpack://frontend/./node_modules/linkify-it/lib/re.js","webpack://frontend/./node_modules/markdown-it/index.js","webpack://frontend/./node_modules/markdown-it/lib/common/entities.js","webpack://frontend/./node_modules/markdown-it/lib/common/html_blocks.js","webpack://frontend/./node_modules/markdown-it/lib/common/html_re.js","webpack://frontend/./node_modules/markdown-it/lib/common/utils.js","webpack://frontend/./node_modules/markdown-it/lib/helpers/index.js","webpack://frontend/./node_modules/markdown-it/lib/helpers/parse_link_destination.js","webpack://frontend/./node_modules/markdown-it/lib/helpers/parse_link_label.js","webpack://frontend/./node_modules/markdown-it/lib/helpers/parse_link_title.js","webpack://frontend/./node_modules/markdown-it/lib/index.js","webpack://frontend/./node_modules/markdown-it/lib/parser_block.js","webpack://frontend/./node_modules/markdown-it/lib/parser_core.js","webpack://frontend/./node_modules/markdown-it/lib/parser_inline.js","webpack://frontend/./node_modules/markdown-it/lib/presets/commonmark.js","webpack://frontend/./node_modules/markdown-it/lib/presets/default.js","webpack://frontend/./node_modules/markdown-it/lib/presets/zero.js","webpack://frontend/./node_modules/markdown-it/lib/renderer.js","webpack://frontend/./node_modules/markdown-it/lib/ruler.js","webpack://frontend/./node_modules/markdown-it/lib/rules_block/blockquote.js","webpack://frontend/./node_modules/markdown-it/lib/rules_block/code.js","webpack://frontend/./node_modules/markdown-it/lib/rules_block/fence.js","webpack://frontend/./node_modules/markdown-it/lib/rules_block/heading.js","webpack://frontend/./node_modules/markdown-it/lib/rules_block/hr.js","webpack://frontend/./node_modules/markdown-it/lib/rules_block/html_block.js","webpack://frontend/./node_modules/markdown-it/lib/rules_block/lheading.js","webpack://frontend/./node_modules/markdown-it/lib/rules_block/list.js","webpack://frontend/./node_modules/markdown-it/lib/rules_block/paragraph.js","webpack://frontend/./node_modules/markdown-it/lib/rules_block/reference.js","webpack://frontend/./node_modules/markdown-it/lib/rules_block/state_block.js","webpack://frontend/./node_modules/markdown-it/lib/rules_block/table.js","webpack://frontend/./node_modules/markdown-it/lib/rules_core/block.js","webpack://frontend/./node_modules/markdown-it/lib/rules_core/inline.js","webpack://frontend/./node_modules/markdown-it/lib/rules_core/linkify.js","webpack://frontend/./node_modules/markdown-it/lib/rules_core/normalize.js","webpack://frontend/./node_modules/markdown-it/lib/rules_core/replacements.js","webpack://frontend/./node_modules/markdown-it/lib/rules_core/smartquotes.js","webpack://frontend/./node_modules/markdown-it/lib/rules_core/state_core.js","webpack://frontend/./node_modules/markdown-it/lib/rules_inline/autolink.js","webpack://frontend/./node_modules/markdown-it/lib/rules_inline/backticks.js","webpack://frontend/./node_modules/markdown-it/lib/rules_inline/balance_pairs.js","webpack://frontend/./node_modules/markdown-it/lib/rules_inline/emphasis.js","webpack://frontend/./node_modules/markdown-it/lib/rules_inline/entity.js","webpack://frontend/./node_modules/markdown-it/lib/rules_inline/escape.js","webpack://frontend/./node_modules/markdown-it/lib/rules_inline/html_inline.js","webpack://frontend/./node_modules/markdown-it/lib/rules_inline/image.js","webpack://frontend/./node_modules/markdown-it/lib/rules_inline/link.js","webpack://frontend/./node_modules/markdown-it/lib/rules_inline/newline.js","webpack://frontend/./node_modules/markdown-it/lib/rules_inline/state_inline.js","webpack://frontend/./node_modules/markdown-it/lib/rules_inline/strikethrough.js","webpack://frontend/./node_modules/markdown-it/lib/rules_inline/text.js","webpack://frontend/./node_modules/markdown-it/lib/rules_inline/text_collapse.js","webpack://frontend/./node_modules/markdown-it/lib/token.js","webpack://frontend/./node_modules/mdurl/decode.js","webpack://frontend/./node_modules/mdurl/encode.js","webpack://frontend/./node_modules/mdurl/format.js","webpack://frontend/./node_modules/mdurl/index.js","webpack://frontend/./node_modules/mdurl/parse.js","webpack://frontend/./node_modules/punycode/punycode.es6.js","webpack://frontend/external \"CodeMirror\"","webpack://frontend/external \"hljs\"","webpack://frontend/./components/plugins.ts","webpack://frontend/./components/ajax.ts","webpack://frontend/./components/dates.ts","webpack://frontend/./models/model.ts","webpack://frontend/./models/assignment_group.ts","webpack://frontend/./components/group_list.ts","webpack://frontend/./models/user.ts","webpack://frontend/./models/course.ts","webpack://frontend/./models/submission.ts","webpack://frontend/./models/assignment.ts","webpack://frontend/./models/review.ts","webpack://frontend/./components/server.ts","webpack://frontend/./models/log.ts","webpack://frontend/./components/model_selector.ts","webpack://frontend/./components/editor.ts","webpack://frontend/./components/watcher.ts","webpack://frontend/./components/quizzer.ts","webpack://frontend/./components/course_list.ts","webpack://frontend/./components/assignment_manager.ts","webpack://frontend/./components/reader.ts","webpack://frontend/./node_modules/uc.micro/categories/Cc/regex.js","webpack://frontend/./node_modules/uc.micro/categories/Cf/regex.js","webpack://frontend/./node_modules/uc.micro/categories/P/regex.js","webpack://frontend/./node_modules/uc.micro/categories/Z/regex.js","webpack://frontend/./node_modules/uc.micro/index.js","webpack://frontend/./node_modules/uc.micro/properties/Any/regex.js","webpack://frontend/external \"ko\"","webpack://frontend/webpack/bootstrap","webpack://frontend/webpack/startup","webpack://frontend/webpack/runtime/define property getters","webpack://frontend/webpack/runtime/hasOwnProperty shorthand","webpack://frontend/webpack/runtime/make namespace object"],"names":["ko","undefined","virtualElements","Error","ko_virtualElements","ko_bindingFlags","bindingFlags","ko_bindingRewriteValidators","bindingRewriteValidators","jsonExpressionRewriting","ko_unwrap","utils","unwrapObservable","ko_bindingHandlers","bindingHandlers","defaultvalue","checkCase","value","bindingContext","switchValue","$switchValueAccessor","Array","arrayIndexOf","checkNotCase","defaultMakeValueAccessor","ifValue","makeCaseHandler","binding","isNot","makeValueAccessor","checkFunction","flags","init","element","valueAccessor","allBindings","viewModel","$switchSkipNextArray","$switchIndex","push","observable","$caseValue","computed","result","skipNext","noDefault","index","isLast","length","$else","$switchDefault","disposeWhenNodeIsRemoved","update","getNamespacedHandler","bindingName","namespace","bindingKey","allowedBindings","makeSubkeyHandler","baseKey","subKey","makeBaseHandler","name","contentBind","canUseVirtual","noValue","switchBindings","$default","contexts","$value","arrayForEach","context","node","nextInQueue","firstChild","nextSibling","nodeType","newContext","extend","applyBindings","controlsDescendantBindings","preprocess","assign","obj","sources","prototype","slice","call","arguments","forEach","source","Object","keys","key","_class","toString","isFunction","escapeRE","str","replace","defaultOptions","fuzzyLink","fuzzyEmail","fuzzyIP","defaultSchemas","validate","text","pos","self","tail","re","http","RegExp","src_auth","src_host_port_strict","src_path","test","match","no_http","src_domain","src_domain_root","src_port","src_host_terminator","mailto","src_email_name","src_host_strict","tlds_default","split","compile","__opts__","tlds","__tlds__","untpl","tpl","src_tlds","onCompile","__tlds_replaced__","src_xn","join","email_fuzzy","tpl_email_fuzzy","link_fuzzy","tpl_link_fuzzy","link_no_ip_fuzzy","tpl_link_no_ip_fuzzy","host_fuzzy_test","tpl_host_fuzzy_test","aliases","schemaError","val","__compiled__","__schemas__","compiled","link","createValidator","normalize","isString","alias","slist","filter","map","schema_test","src_ZPCc","schema_search","pretest","__index__","__text_cache__","resetScanCache","Match","shift","start","end","__last_index__","this","schema","__schema__","toLowerCase","lastIndex","raw","url","createMatch","LinkifyIt","schemas","options","reduce","acc","k","hasOwnProperty","add","definition","set","m","ml","me","len","next","tld_pos","exec","testSchemaAt","search","indexOf","list","keepOld","isArray","concat","sort","el","idx","arr","reverse","module","exports","opts","src_Any","src_Cc","src_Z","src_P","src_ZCc","src_pseudo_letter","src_ip4","src_host","tpl_host_fuzzy","tpl_host_no_ip_fuzzy","tpl_host_fuzzy_strict","tpl_host_port_fuzzy_strict","tpl_host_port_no_ip_fuzzy_strict","open_tag","close_tag","HTML_TAG_RE","HTML_OPEN_CLOSE_TAG_RE","_hasOwnProperty","has","object","isValidEntityCode","c","fromCodePoint","surrogate1","surrogate2","String","fromCharCode","UNESCAPE_MD_RE","UNESCAPE_ALL_RE","DIGITAL_ENTITY_TEST_RE","entities","HTML_ESCAPE_TEST_RE","HTML_ESCAPE_REPLACE_RE","HTML_REPLACEMENTS","replaceUnsafeChar","ch","REGEXP_ESCAPE_RE","UNICODE_PUNCT_RE","lib","mdurl","ucmicro","TypeError","unescapeMd","unescapeAll","escaped","entity","code","charCodeAt","parseInt","replaceEntityPattern","escapeHtml","arrayReplaceAt","src","newElements","isSpace","isWhiteSpace","isMdAsciiPunct","isPunctChar","normalizeReference","trim","toUpperCase","parseLinkLabel","parseLinkDestination","parseLinkTitle","max","level","ok","lines","state","disableNested","found","marker","prevPos","labelEnd","posMax","oldPos","md","inline","skipToken","helpers","Renderer","ParserCore","ParserBlock","ParserInline","punycode","config","default","zero","commonmark","BAD_PROTO_RE","GOOD_DATA_RE","validateLink","RECODE_HOSTNAME_FOR","normalizeLink","parsed","parse","hostname","protocol","toASCII","er","encode","format","normalizeLinkText","toUnicode","decode","defaultChars","MarkdownIt","presetName","block","core","renderer","linkify","configure","presets","components","rules","ruler","enableOnly","rules2","ruler2","enable","ignoreInvalid","chain","missed","disable","use","plugin","args","apply","env","State","process","tokens","render","parseInline","inlineMode","renderInline","Ruler","_rules","i","alt","tokenize","startLine","endLine","getRules","line","hasEmptyLines","maxNesting","skipEmptyLines","sCount","blkIndent","tight","isEmpty","outTokens","lineMax","Core","l","_rules2","cache","pending","pushPending","html","xhtmlOut","breaks","langPrefix","typographer","quotes","highlight","default_rules","code_inline","slf","token","renderAttrs","content","code_block","fence","highlighted","tmpAttrs","tmpToken","info","langName","langAttrs","attrIndex","attrs","image","renderInlineAsText","children","renderToken","hardbreak","softbreak","html_block","html_inline","nextToken","needLf","hidden","nesting","tag","type","__rules__","__cache__","__find__","__compile__","chains","rule","enabled","altName","fn","at","opt","before","beforeName","ruleName","splice","after","afterName","chainName","silent","adjustTab","initial","lastLineEmpty","nextLine","offset","oldBMarks","oldBSCount","oldIndent","oldParentType","oldSCount","oldTShift","spaceAfterMarker","terminate","terminatorRules","isOutdented","oldLineMax","bMarks","tShift","eMarks","bsCount","parentType","markup","last","getLines","params","mem","haveEndMarker","skipChars","skipSpaces","tmp","skipSpacesBack","skipCharsBack","cnt","block_names","HTML_SEQUENCES","lineText","skipBulletListMarker","skipOrderedListMarker","contentStart","indent","indentAfterMarker","isOrdered","itemLines","listLines","listTokIdx","markerCharCode","markerValue","oldListIndent","oldTight","posAfterMarker","prevEmptyEnd","isTerminatingParagraph","listIndent","Number","substr","Math","min","markTightParagraphs","_endLine","destEndPos","destEndLineNo","href","label","res","title","references","Token","StateBlock","s","indent_found","ddIndent","from","begin","keepLastLF","lineIndent","first","queue","lineStart","getLine","escapedSplit","isEscaped","lastPos","current","substring","columns","columnCount","aligns","t","tableLines","tbodyLines","firstCh","secondCh","pop","tok","isLinkClose","j","currentToken","nodes","ln","htmlLinkLevel","fullUrl","urlText","links","blockTokens","NEWLINES_RE","NULL_RE","RARE_RE","SCOPED_ABBR_TEST_RE","SCOPED_ABBR_RE","SCOPED_ABBR","r","p","tm","replaceFn","replace_scoped","inlineTokens","inside_autolink","replace_rare","blkIdx","QUOTE_TEST_RE","QUOTE_RE","replaceAt","process_inlines","thisLevel","item","lastChar","nextChar","isLastPunctChar","isNextPunctChar","isLastWhiteSpace","isNextWhiteSpace","canOpen","canClose","isSingle","stack","openQuote","closeQuote","OUTER","single","StateCore","EMAIL_RE","AUTOLINK_RE","matchStart","matchEnd","openerLength","closerLength","backticksScanned","backticks","processDelimiters","delimiters","closerIdx","openerIdx","closer","opener","minOpenerIdx","newMinOpenerIdx","isOddMatch","lastJump","openersBottom","close","jump","open","curr","tokens_meta","postProcess","startDelim","endDelim","isStrong","scanned","scanDelims","can_open","can_close","DIGITAL_RE","NAMED_RE","ESCAPED","lc","isLetter","labelStart","ref","parseReference","pmax","StateInline","pendingLevel","_prev_delimiters","token_meta","canSplitWord","count","left_flanking","right_flanking","loneMarkers","isTerminatorChar","meta","attrPush","attrData","attrSet","attrGet","attrJoin","decodeCache","string","exclude","getDecodeCache","seq","b1","b2","b3","b4","chr","componentChars","encodeCache","keepEscaped","nextCode","getEncodeCache","encodeURIComponent","slashes","auth","port","pathname","hash","Url","protocolPattern","portPattern","simplePathPattern","unwise","autoEscape","nonHostChars","hostEndingChars","hostnamePartPattern","hostnamePartStart","hostlessProtocol","slashedProtocol","slashesDenoteHost","lowerProto","hec","rest","simplePath","proto","atSign","hostEnd","lastIndexOf","host","parseHost","ipv6Hostname","hostparts","part","newpart","validParts","notHost","bit","unshift","qm","u","maxInt","base","regexPunycode","regexNonASCII","regexSeparators","errors","floor","stringFromCharCode","error","RangeError","mapDomain","parts","encoded","array","ucs2decode","output","counter","extra","ucs2encode","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","baseMinusTMin","input","inputLength","n","bias","basic","oldi","w","codePoint","baseMinusT","out","currentValue","basicLength","handledCPCount","handledCPCountPlusOne","q","qMinusT","CodeMirror","hljs","editor","on","cm","readOnly","getValue","wrapper","getWrapperElement","parentNode","removeChild","cur","getCursor","setValue","setCursor","refresh","languages","innerHTML","lang","language","__","pushObservableArray","values","underlyingArray","valueWillMutate","valueHasMutated","querySelectorAll","TwoWayReadonlyMap","Map","lefts","rights","member","get","ajax_get","data","$","window","allBindingAccessors","selectedOptions","multiSelect","afterSelect","afterDeselect","remove","console","log","option","id","optionsText","monthNames","weekDays","isSameDay","second","getDate","getMonth","getFullYear","prettyPrintDateTime","timeString","now","Date","past","toLocaleTimeString","date","getDay","prettyPrintDate","formatDuration","earlier","later","timeEarlier","timeLater","abs","getTime","sign","years","days","hours","minutes","seconds","daysDisplay","hoursDisplay","minutesDisplay","secondsDisplay","Model","FIELDS","dateModified","date_modified","dateCreated","date_created","prettyDateCreated","prettyDateModified","left","right","dateCreatedSorter","ModelStore","server","courseId","initialIds","initialData","delayedData","timer","instance","newInstance","getInstance","isLoading","delayedInstance","makeEmptyInstance","delayLoadInstance","clearTimeout","queueFinishDelay","finishDelayedLoads","setTimeout","bind","ids","payload","getPayload","getUrl","Promise","resolve","reject","then","success","created","GET_FIELD","modelJson","cleanData","models","fromJson","removeDelayedInstances","includes","AssignmentGroup","super","koFromJson","AssignmentGroupStore","assignment_group_ids","getDelayedIds","course_id","position","forked_id","forked_version","owner_id","version","template","GroupList","groups","ready","load","g","Role","User","firstName","lastName","primaryRole","roles","role","charAt","cleanRole","displayMode","UserDisplayMode","LAST_FIRST","EMAIL","email","BLOCKPY_ID","FIRST_LAST","removeAll","toJson","ServiceType","CourseVisibility","SubmissionStatus","GradingStatus","UserStore","sortMode","localStorage","getItem","subscribe","setItem","displayOptions","localeCompare","sortMethod","user_ids","first_name","last_name","Assignment","group","editUrl","AssignmentStore","assignment_ids","instructions","reviewed","public","ip_ranges","points","settings","on_run","on_change","on_eval","starting_code","extra_instructor_files","extra_starting_files","assignments","assignment","assignmentGroupStore","Course","CourseStore","endpoint","external_id","service","term","visibility","Review","ReviewStore","submission_ids","assignment_version","author_id","comment","generic","location","score","submission_id","submission_version","tag_id","Submission","userId","assignmentId","expected","gradingStatus","submissionStatus","SubmissionStore","assignment_group_id","assignment_id","correct","extra_files","grading_status","NOT_READY","submission_status","INITIALIZED","user_id","Server","userStore","userIds","users","courseStore","courseIds","courses","assignmentStore","assignmentIds","assignmentGroupIds","assignmentGroups","reviewStore","reviewIds","reviews","submissionStore","submissionIds","submissions","pureComputed","a","getTimezoneOffset","Log","subjectId","eventType","clientTimestamp","REMAP_EVENT_TYPES","ModelSet","getIds","SelectMode","ModelSetSelector","showAllThreshold","nameAttr","store","available","getAllAvailable","sets","loadDefault","loadGroups","selectMode","ALL","singleSet","singleOption","loadFromLocalStorage","currentSet","modelSet","editorVisible","bulkEditor","showAll","SET","SINGLE","changes","some","change","status","newOptions","startAdding","prettyResult","getLocalStorageKey","getDefaultGroupSetName","JSON","newSet","getNewGroupSetName","model","a1","a2","superSet","areArraysEqualSets","getItemGroups","confirm","deleted","saveToLocalStorage","modelSetJson","stringify","MODEL_SET_SELECTOR_HTML","setName","ModelSelectorItemGroup","launchEditor","submission","form","document","createElement","setAttribute","formData","user","IN_PROGRESS","hiddenField","appendChild","body","submit","WatchMode","FeedbackMode","WatchGroupingMode","QuizQuestionTypes","SubmissionState","makeNextState","when","watchMode","SUMMARY","lastEdit","lastRan","lastOpened","other","friendly","feedback","system","completed","mode","fullscreen","copyState","message","category","SubmissionHistory","states","currentStateIndex","feedbackMode","FEEDBACK","isVcrActive","getWatchModeClass","FULL","currentState","getCurrentStateIndex","isSummary","isFull","logs","latestState","nextState","with_submission","latestLogId","addLogs","history","event","selector","getSelector","empty","optGroup","entry","formattedDate","attr","append","displayed","loadHistorySelector","SYSTEM","BOTH","HIDE","target","closest","find","currentId","isEditEvent","Watcher","userSet","assignmentSet","grouping","NONE","cauToSubmission","hasFailed","logJsons","sortedLogs","submissionId","getAsSubmissionKey","submissionJsons","getStored","setGroupingMode","clearData","addSubmissions","fail","assignmentCount","userCount","USER","ASSIGNMENT","course","getDefaultValue","question","answer","multiple_answers_question","matching_question","statements","v","multiple_dropdowns_question","mdqResult","entries","answers","fill_in_multiple_blanks_question","fimbResult","getBracketed","SQUARE_BRACKETS","startsWith","endsWith","subscribeToStudent","student","matchKeyInBrackets","Quiz","questions","questionMap","loadAssignment","currentAnswer","studentAnswers","questionId","optionsStr","currentAssignmentId","assignmentGroupId","quiz","newId","loadQuiz","subscribable","onChange","BlockPyServer","createServerData","_postBlocking","response","e","textStatus","errorThrown","saveFile","submissionAsJson","onRun","filename","contents","timestamp","timezone","passcode","display","onError","_postLatestRetry","statusCode","loadReading","Any","Cc","Cf","P","Z","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","d","o","defineProperty","enumerable","prop","Symbol","toStringTag"],"mappings":"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","file":"frontend.js","sourcesContent":["/**\r\n * @license SWITCH/CASE binding for Knockout http://knockoutjs.com/\r\n * (c) Michael Best\r\n * License: MIT (http://www.opensource.org/licenses/mit-license.php)\r\n * Version 2.1.0\r\n */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        // AMD. Register as an anonymous module.\r\n        define(['knockout'], factory);\r\n    } else {\r\n        // Browser globals\r\n        factory(root.ko);\r\n    }\r\n}(this, function(ko) {\r\n\r\nvar undefined;\r\n\r\nif (!ko.virtualElements)\r\n    throw Error('Switch-case requires at least Knockout 2.1');\r\n\r\nvar ko_virtualElements = ko.virtualElements;\r\nvar ko_bindingFlags = ko.bindingFlags || {};\r\nvar ko_bindingRewriteValidators = ko.bindingRewriteValidators || ko.jsonExpressionRewriting.bindingRewriteValidators;\r\nvar ko_unwrap = ko.utils.unwrapObservable;\r\nvar ko_bindingHandlers = ko.bindingHandlers;\r\n\r\nvar defaultvalue = {};\r\nko_bindingHandlers['switch'] = {\r\n    flags: ko_bindingFlags.contentBind | ko_bindingFlags.canUseVirtual | ko_bindingFlags.noValue,\r\n    init: function(element, valueAccessor, allBindings, viewModel, bindingContext) {\r\n        var switchSkipNextArray = [],\r\n            switchBindings = {\r\n                // these properties are internal\r\n                $switchSkipNextArray: switchSkipNextArray,\r\n                $switchValueAccessor: valueAccessor,\r\n                $switchDefault: ko.observable(true),\r\n                // these properties are public\r\n                $default: defaultvalue,\r\n                $else: defaultvalue\r\n            },\r\n            contexts = [];\r\n\r\n        // Update $value in each context when it changes\r\n        ko.computed(function() {\r\n            var value = ko_unwrap(valueAccessor());\r\n            switchBindings.$value = value;\r\n            ko.utils.arrayForEach(contexts, function(context) {\r\n                context.$value = value;\r\n            });\r\n        }, null, {disposeWhenNodeIsRemoved: element});\r\n\r\n        // Each child element gets a new binding context so it can set its own $switchIndex property.\r\n        // The other properties will be shared since they're objects.\r\n        var node, nextInQueue = ko_virtualElements.firstChild(element);\r\n        while (node = nextInQueue) {\r\n            nextInQueue = ko_virtualElements.nextSibling(node);\r\n            switch (node.nodeType) {\r\n            case 1: case 8:\r\n                var newContext = bindingContext.extend(switchBindings);\r\n                // Set initial value of context.$switchIndex to undefined\r\n                newContext.$switchIndex = undefined;\r\n                ko.applyBindings(newContext, node);\r\n                // Add the context to the list to be updated if this section contained a case binding\r\n                if (newContext.$switchIndex !== undefined) {\r\n                    contexts.push(newContext);\r\n                }\r\n                break;\r\n            }\r\n        }\r\n\r\n        return { controlsDescendantBindings: true };\r\n    },\r\n    preprocess: function(value) {\r\n        return value || 'true';\r\n    }\r\n};\r\nko_bindingRewriteValidators['switch'] = false; // Can't rewrite control flow bindings\r\nko_virtualElements.allowedBindings['switch'] = true;\r\n\r\nfunction checkCase(value, bindingContext) {\r\n    // Check value and determine result:\r\n    //  If the control value is boolean, the result is the matching truthiness of the value\r\n    //  If value is boolean, the result is the value (allows expressions instead of just simple matching)\r\n    //  If value is an array, the result is true if the control value matches (strict) an item in the array\r\n    //  Otherwise, the result is true if value matches the control value (loose)\r\n    var switchValue = ko_unwrap(bindingContext.$switchValueAccessor());\r\n    return (typeof switchValue == 'boolean')\r\n        ? (value ? switchValue : !switchValue)\r\n        : (typeof value == 'boolean')\r\n            ? value\r\n            : (value instanceof Array)\r\n                ? (ko.utils.arrayIndexOf(value, switchValue) !== -1)\r\n                : (value == switchValue);\r\n}\r\n\r\nfunction checkNotCase(value, bindingContext) {\r\n    return !checkCase(value, bindingContext);\r\n}\r\n\r\nfunction defaultMakeValueAccessor(ifValue) {\r\n    return function() { return ifValue };\r\n}\r\n\r\nfunction makeCaseHandler(binding, isNot, makeValueAccessor) {\r\n    var checkFunction = isNot ? checkNotCase : checkCase;\r\n    binding || (binding = 'if');\r\n    makeValueAccessor || (makeValueAccessor = defaultMakeValueAccessor);\r\n\r\n    return {\r\n        // Inherit flags from the binding we're wrapping\r\n        flags: ko_bindingHandlers[binding].flags,\r\n\r\n        init: function(element, valueAccessor, allBindings, viewModel, bindingContext) {\r\n            if (!bindingContext.$switchSkipNextArray)\r\n                throw Error(\"case binding must only be used with a switch binding\");\r\n            if (bindingContext.$switchIndex !== undefined)\r\n                throw Error(\"case binding cannot be nested\");\r\n            // Initialize $switchIndex and push a new observable to $switchSkipNextArray\r\n            bindingContext.$switchIndex = bindingContext.$switchSkipNextArray.push(ko.observable(false)) - 1;\r\n\r\n            bindingContext.$caseValue = ko.observable();\r\n\r\n            ko.computed(function() {\r\n                var index = bindingContext.$switchIndex,\r\n                    isLast = (index === bindingContext.$switchSkipNextArray.length - 1),\r\n                    result, skipNext, noDefault;\r\n\r\n                if (index && bindingContext.$switchSkipNextArray[index-1]()) {\r\n                    // An earlier case binding matched: skip this one (and subsequent ones)\r\n                    result = false;\r\n                    skipNext = true;\r\n                } else {\r\n                    var value = ko_unwrap(valueAccessor());\r\n                    if (value === bindingContext.$else) {\r\n                        // If value is the special object $else, the result depends on the other case values.\r\n                        // If we're the last *case* item, the value must be true. $switchDefault will get\r\n                        // updated to *true* below, but that won't necessarily update us because it would\r\n                        // require a recursive update.\r\n                        result = bindingContext.$switchDefault() || isLast;\r\n                        skipNext = false;\r\n                    } else {\r\n                        // If result is true, we will skip the subsequent cases (and any default cases)\r\n                        noDefault = skipNext = result = checkFunction(value, bindingContext);\r\n                    }\r\n                }\r\n\r\n                // Set the observable used by the wrapped binding function\r\n                bindingContext.$caseValue(result);\r\n\r\n                // Update the observable \"skip next\" value; if the value is changed, this will update the\r\n                // subsequent case item.\r\n                bindingContext.$switchSkipNextArray[index](skipNext);\r\n\r\n                // Update $switchDefault to false if a non-default case item has matched.\r\n                // Update it to true if we're the last item and none of items have matched.\r\n                // (Initially, every item will be the last, but it doesn't matter.)\r\n                if (noDefault)\r\n                    bindingContext.$switchDefault(false);\r\n                else if (!skipNext && isLast)\r\n                    bindingContext.$switchDefault(true);\r\n            },\r\n            null, { disposeWhenNodeIsRemoved: element });\r\n\r\n            // Call init with the observable result value\r\n            if (ko_bindingHandlers[binding].init) {\r\n                return ko_bindingHandlers[binding].init(element,\r\n                    makeValueAccessor(bindingContext.$caseValue), allBindings, viewModel, bindingContext);\r\n            }\r\n        },\r\n\r\n        update: function(element, valueAccessor, allBindings, viewModel, bindingContext) {\r\n            // Call update with the observable result value\r\n            if (ko_bindingHandlers[binding].update) {\r\n                return ko_bindingHandlers[binding].update(element,\r\n                    makeValueAccessor(bindingContext.$caseValue), allBindings, viewModel, bindingContext);\r\n            }\r\n        }\r\n    };\r\n}\r\n// Support dynamically creating new case binding when using Punches plugin\r\nfunction getNamespacedHandler(bindingName, namespace, bindingKey) {\r\n    if (ko_virtualElements.allowedBindings[bindingName])\r\n        ko_virtualElements.allowedBindings[bindingKey] = true;\r\n    return makeCaseHandler(bindingName, namespace === 'casenot');\r\n}\r\n// Support dynamically creating new case binding when using key.subkey plugin\r\nfunction makeSubkeyHandler(baseKey, subKey, bindingKey) {\r\n    return getNamespacedHandler(subKey, baseKey, bindingKey);\r\n}\r\n\r\nfunction makeBaseHandler(name, isNot) {\r\n    ko_bindingHandlers[name] = makeCaseHandler('if', isNot);\r\n    ko_bindingRewriteValidators[name] = false; // Can't rewrite control flow bindings\r\n    ko_virtualElements.allowedBindings[name] = true;\r\n    ko_bindingHandlers[name].makeSubkeyHandler = makeSubkeyHandler;\r\n    ko_bindingHandlers[name].getNamespacedHandler = getNamespacedHandler;\r\n}\r\n\r\nmakeBaseHandler('case');\r\nmakeBaseHandler('casenot', true /*isNot*/);\r\n\r\nko_bindingHandlers['case.visible'] = makeCaseHandler('visible');\r\nko_bindingHandlers['casenot.visible'] = makeCaseHandler('visible', true /*isNot*/);\r\n\r\nko_bindingHandlers['switch'].makeCaseHandler = makeCaseHandler;\r\n\r\n}));\r\n","'use strict';\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Helpers\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\nfunction isString(obj) { return _class(obj) === '[object String]'; }\nfunction isObject(obj) { return _class(obj) === '[object Object]'; }\nfunction isRegExp(obj) { return _class(obj) === '[object RegExp]'; }\nfunction isFunction(obj) { return _class(obj) === '[object Function]'; }\n\n\nfunction escapeRE(str) { return str.replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&'); }\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar defaultOptions = {\n  fuzzyLink: true,\n  fuzzyEmail: true,\n  fuzzyIP: false\n};\n\n\nfunction isOptionsObj(obj) {\n  return Object.keys(obj || {}).reduce(function (acc, k) {\n    return acc || defaultOptions.hasOwnProperty(k);\n  }, false);\n}\n\n\nvar defaultSchemas = {\n  'http:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.http) {\n        // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.http =  new RegExp(\n          '^\\\\/\\\\/' + self.re.src_auth + self.re.src_host_port_strict + self.re.src_path, 'i'\n        );\n      }\n      if (self.re.http.test(tail)) {\n        return tail.match(self.re.http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'https:':  'http:',\n  'ftp:':    'http:',\n  '//':      {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.no_http) {\n      // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.no_http =  new RegExp(\n          '^' +\n          self.re.src_auth +\n          // Don't allow single-level domains, because of false positives like '//test'\n          // with code comments\n          '(?:localhost|(?:(?:' + self.re.src_domain + ')\\\\.)+' + self.re.src_domain_root + ')' +\n          self.re.src_port +\n          self.re.src_host_terminator +\n          self.re.src_path,\n\n          'i'\n        );\n      }\n\n      if (self.re.no_http.test(tail)) {\n        // should not be `://` & `///`, that protects from errors in protocol name\n        if (pos >= 3 && text[pos - 3] === ':') { return 0; }\n        if (pos >= 3 && text[pos - 3] === '/') { return 0; }\n        return tail.match(self.re.no_http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'mailto:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.mailto) {\n        self.re.mailto =  new RegExp(\n          '^' + self.re.src_email_name + '@' + self.re.src_host_strict, 'i'\n        );\n      }\n      if (self.re.mailto.test(tail)) {\n        return tail.match(self.re.mailto)[0].length;\n      }\n      return 0;\n    }\n  }\n};\n\n/*eslint-disable max-len*/\n\n// RE pattern for 2-character tlds (autogenerated by ./support/tlds_2char_gen.js)\nvar tlds_2ch_src_re = 'a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]';\n\n// DON'T try to make PRs with changes. Extend TLDs with LinkifyIt.tlds() instead\nvar tlds_default = 'biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф'.split('|');\n\n/*eslint-enable max-len*/\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction resetScanCache(self) {\n  self.__index__ = -1;\n  self.__text_cache__   = '';\n}\n\nfunction createValidator(re) {\n  return function (text, pos) {\n    var tail = text.slice(pos);\n\n    if (re.test(tail)) {\n      return tail.match(re)[0].length;\n    }\n    return 0;\n  };\n}\n\nfunction createNormalizer() {\n  return function (match, self) {\n    self.normalize(match);\n  };\n}\n\n// Schemas compiler. Build regexps.\n//\nfunction compile(self) {\n\n  // Load & clone RE patterns.\n  var re = self.re = require('./lib/re')(self.__opts__);\n\n  // Define dynamic patterns\n  var tlds = self.__tlds__.slice();\n\n  self.onCompile();\n\n  if (!self.__tlds_replaced__) {\n    tlds.push(tlds_2ch_src_re);\n  }\n  tlds.push(re.src_xn);\n\n  re.src_tlds = tlds.join('|');\n\n  function untpl(tpl) { return tpl.replace('%TLDS%', re.src_tlds); }\n\n  re.email_fuzzy      = RegExp(untpl(re.tpl_email_fuzzy), 'i');\n  re.link_fuzzy       = RegExp(untpl(re.tpl_link_fuzzy), 'i');\n  re.link_no_ip_fuzzy = RegExp(untpl(re.tpl_link_no_ip_fuzzy), 'i');\n  re.host_fuzzy_test  = RegExp(untpl(re.tpl_host_fuzzy_test), 'i');\n\n  //\n  // Compile each schema\n  //\n\n  var aliases = [];\n\n  self.__compiled__ = {}; // Reset compiled data\n\n  function schemaError(name, val) {\n    throw new Error('(LinkifyIt) Invalid schema \"' + name + '\": ' + val);\n  }\n\n  Object.keys(self.__schemas__).forEach(function (name) {\n    var val = self.__schemas__[name];\n\n    // skip disabled methods\n    if (val === null) { return; }\n\n    var compiled = { validate: null, link: null };\n\n    self.__compiled__[name] = compiled;\n\n    if (isObject(val)) {\n      if (isRegExp(val.validate)) {\n        compiled.validate = createValidator(val.validate);\n      } else if (isFunction(val.validate)) {\n        compiled.validate = val.validate;\n      } else {\n        schemaError(name, val);\n      }\n\n      if (isFunction(val.normalize)) {\n        compiled.normalize = val.normalize;\n      } else if (!val.normalize) {\n        compiled.normalize = createNormalizer();\n      } else {\n        schemaError(name, val);\n      }\n\n      return;\n    }\n\n    if (isString(val)) {\n      aliases.push(name);\n      return;\n    }\n\n    schemaError(name, val);\n  });\n\n  //\n  // Compile postponed aliases\n  //\n\n  aliases.forEach(function (alias) {\n    if (!self.__compiled__[self.__schemas__[alias]]) {\n      // Silently fail on missed schemas to avoid errons on disable.\n      // schemaError(alias, self.__schemas__[alias]);\n      return;\n    }\n\n    self.__compiled__[alias].validate =\n      self.__compiled__[self.__schemas__[alias]].validate;\n    self.__compiled__[alias].normalize =\n      self.__compiled__[self.__schemas__[alias]].normalize;\n  });\n\n  //\n  // Fake record for guessed links\n  //\n  self.__compiled__[''] = { validate: null, normalize: createNormalizer() };\n\n  //\n  // Build schema condition\n  //\n  var slist = Object.keys(self.__compiled__)\n                      .filter(function (name) {\n                        // Filter disabled & fake schemas\n                        return name.length > 0 && self.__compiled__[name];\n                      })\n                      .map(escapeRE)\n                      .join('|');\n  // (?!_) cause 1.5x slowdown\n  self.re.schema_test   = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'i');\n  self.re.schema_search = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'ig');\n\n  self.re.pretest = RegExp(\n    '(' + self.re.schema_test.source + ')|(' + self.re.host_fuzzy_test.source + ')|@',\n    'i'\n  );\n\n  //\n  // Cleanup\n  //\n\n  resetScanCache(self);\n}\n\n/**\n * class Match\n *\n * Match result. Single element of array, returned by [[LinkifyIt#match]]\n **/\nfunction Match(self, shift) {\n  var start = self.__index__,\n      end   = self.__last_index__,\n      text  = self.__text_cache__.slice(start, end);\n\n  /**\n   * Match#schema -> String\n   *\n   * Prefix (protocol) for matched string.\n   **/\n  this.schema    = self.__schema__.toLowerCase();\n  /**\n   * Match#index -> Number\n   *\n   * First position of matched string.\n   **/\n  this.index     = start + shift;\n  /**\n   * Match#lastIndex -> Number\n   *\n   * Next position after matched string.\n   **/\n  this.lastIndex = end + shift;\n  /**\n   * Match#raw -> String\n   *\n   * Matched string.\n   **/\n  this.raw       = text;\n  /**\n   * Match#text -> String\n   *\n   * Notmalized text of matched string.\n   **/\n  this.text      = text;\n  /**\n   * Match#url -> String\n   *\n   * Normalized url of matched string.\n   **/\n  this.url       = text;\n}\n\nfunction createMatch(self, shift) {\n  var match = new Match(self, shift);\n\n  self.__compiled__[match.schema].normalize(match, self);\n\n  return match;\n}\n\n\n/**\n * class LinkifyIt\n **/\n\n/**\n * new LinkifyIt(schemas, options)\n * - schemas (Object): Optional. Additional schemas to validate (prefix/validator)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Creates new linkifier instance with optional additional schemas.\n * Can be called without `new` keyword for convenience.\n *\n * By default understands:\n *\n * - `http(s)://...` , `ftp://...`, `mailto:...` & `//...` links\n * - \"fuzzy\" links and emails (example.com, foo@bar.com).\n *\n * `schemas` is an object, where each key/value describes protocol/rule:\n *\n * - __key__ - link prefix (usually, protocol name with `:` at the end, `skype:`\n *   for example). `linkify-it` makes shure that prefix is not preceeded with\n *   alphanumeric char and symbols. Only whitespaces and punctuation allowed.\n * - __value__ - rule to check tail after link prefix\n *   - _String_ - just alias to existing rule\n *   - _Object_\n *     - _validate_ - validator function (should return matched length on success),\n *       or `RegExp`.\n *     - _normalize_ - optional function to normalize text & url of matched result\n *       (for example, for @twitter mentions).\n *\n * `options`:\n *\n * - __fuzzyLink__ - recognige URL-s without `http(s):` prefix. Default `true`.\n * - __fuzzyIP__ - allow IPs in fuzzy links above. Can conflict with some texts\n *   like version numbers. Default `false`.\n * - __fuzzyEmail__ - recognize emails without `mailto:` prefix.\n *\n **/\nfunction LinkifyIt(schemas, options) {\n  if (!(this instanceof LinkifyIt)) {\n    return new LinkifyIt(schemas, options);\n  }\n\n  if (!options) {\n    if (isOptionsObj(schemas)) {\n      options = schemas;\n      schemas = {};\n    }\n  }\n\n  this.__opts__           = assign({}, defaultOptions, options);\n\n  // Cache last tested result. Used to skip repeating steps on next `match` call.\n  this.__index__          = -1;\n  this.__last_index__     = -1; // Next scan position\n  this.__schema__         = '';\n  this.__text_cache__     = '';\n\n  this.__schemas__        = assign({}, defaultSchemas, schemas);\n  this.__compiled__       = {};\n\n  this.__tlds__           = tlds_default;\n  this.__tlds_replaced__  = false;\n\n  this.re = {};\n\n  compile(this);\n}\n\n\n/** chainable\n * LinkifyIt#add(schema, definition)\n * - schema (String): rule name (fixed pattern prefix)\n * - definition (String|RegExp|Object): schema definition\n *\n * Add new rule definition. See constructor description for details.\n **/\nLinkifyIt.prototype.add = function add(schema, definition) {\n  this.__schemas__[schema] = definition;\n  compile(this);\n  return this;\n};\n\n\n/** chainable\n * LinkifyIt#set(options)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Set recognition options for links without schema.\n **/\nLinkifyIt.prototype.set = function set(options) {\n  this.__opts__ = assign(this.__opts__, options);\n  return this;\n};\n\n\n/**\n * LinkifyIt#test(text) -> Boolean\n *\n * Searches linkifiable pattern and returns `true` on success or `false` on fail.\n **/\nLinkifyIt.prototype.test = function test(text) {\n  // Reset scan cache\n  this.__text_cache__ = text;\n  this.__index__      = -1;\n\n  if (!text.length) { return false; }\n\n  var m, ml, me, len, shift, next, re, tld_pos, at_pos;\n\n  // try to scan for link with schema - that's the most simple rule\n  if (this.re.schema_test.test(text)) {\n    re = this.re.schema_search;\n    re.lastIndex = 0;\n    while ((m = re.exec(text)) !== null) {\n      len = this.testSchemaAt(text, m[2], re.lastIndex);\n      if (len) {\n        this.__schema__     = m[2];\n        this.__index__      = m.index + m[1].length;\n        this.__last_index__ = m.index + m[0].length + len;\n        break;\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyLink && this.__compiled__['http:']) {\n    // guess schemaless links\n    tld_pos = text.search(this.re.host_fuzzy_test);\n    if (tld_pos >= 0) {\n      // if tld is located after found link - no need to check fuzzy pattern\n      if (this.__index__ < 0 || tld_pos < this.__index__) {\n        if ((ml = text.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) !== null) {\n\n          shift = ml.index + ml[1].length;\n\n          if (this.__index__ < 0 || shift < this.__index__) {\n            this.__schema__     = '';\n            this.__index__      = shift;\n            this.__last_index__ = ml.index + ml[0].length;\n          }\n        }\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyEmail && this.__compiled__['mailto:']) {\n    // guess schemaless emails\n    at_pos = text.indexOf('@');\n    if (at_pos >= 0) {\n      // We can't skip this check, because this cases are possible:\n      // 192.168.1.1@gmail.com, my.in@example.com\n      if ((me = text.match(this.re.email_fuzzy)) !== null) {\n\n        shift = me.index + me[1].length;\n        next  = me.index + me[0].length;\n\n        if (this.__index__ < 0 || shift < this.__index__ ||\n            (shift === this.__index__ && next > this.__last_index__)) {\n          this.__schema__     = 'mailto:';\n          this.__index__      = shift;\n          this.__last_index__ = next;\n        }\n      }\n    }\n  }\n\n  return this.__index__ >= 0;\n};\n\n\n/**\n * LinkifyIt#pretest(text) -> Boolean\n *\n * Very quick check, that can give false positives. Returns true if link MAY BE\n * can exists. Can be used for speed optimization, when you need to check that\n * link NOT exists.\n **/\nLinkifyIt.prototype.pretest = function pretest(text) {\n  return this.re.pretest.test(text);\n};\n\n\n/**\n * LinkifyIt#testSchemaAt(text, name, position) -> Number\n * - text (String): text to scan\n * - name (String): rule (schema) name\n * - position (Number): text offset to check from\n *\n * Similar to [[LinkifyIt#test]] but checks only specific protocol tail exactly\n * at given position. Returns length of found pattern (0 on fail).\n **/\nLinkifyIt.prototype.testSchemaAt = function testSchemaAt(text, schema, pos) {\n  // If not supported schema check requested - terminate\n  if (!this.__compiled__[schema.toLowerCase()]) {\n    return 0;\n  }\n  return this.__compiled__[schema.toLowerCase()].validate(text, pos, this);\n};\n\n\n/**\n * LinkifyIt#match(text) -> Array|null\n *\n * Returns array of found link descriptions or `null` on fail. We strongly\n * recommend to use [[LinkifyIt#test]] first, for best speed.\n *\n * ##### Result match description\n *\n * - __schema__ - link schema, can be empty for fuzzy links, or `//` for\n *   protocol-neutral  links.\n * - __index__ - offset of matched text\n * - __lastIndex__ - index of next char after mathch end\n * - __raw__ - matched text\n * - __text__ - normalized text\n * - __url__ - link, generated from matched text\n **/\nLinkifyIt.prototype.match = function match(text) {\n  var shift = 0, result = [];\n\n  // Try to take previous element from cache, if .test() called before\n  if (this.__index__ >= 0 && this.__text_cache__ === text) {\n    result.push(createMatch(this, shift));\n    shift = this.__last_index__;\n  }\n\n  // Cut head if cache was used\n  var tail = shift ? text.slice(shift) : text;\n\n  // Scan string until end reached\n  while (this.test(tail)) {\n    result.push(createMatch(this, shift));\n\n    tail = tail.slice(this.__last_index__);\n    shift += this.__last_index__;\n  }\n\n  if (result.length) {\n    return result;\n  }\n\n  return null;\n};\n\n\n/** chainable\n * LinkifyIt#tlds(list [, keepOld]) -> this\n * - list (Array): list of tlds\n * - keepOld (Boolean): merge with current list if `true` (`false` by default)\n *\n * Load (or merge) new tlds list. Those are user for fuzzy links (without prefix)\n * to avoid false positives. By default this algorythm used:\n *\n * - hostname with any 2-letter root zones are ok.\n * - biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф\n *   are ok.\n * - encoded (`xn--...`) root zones are ok.\n *\n * If list is replaced, then exact match for 2-chars root zones will be checked.\n **/\nLinkifyIt.prototype.tlds = function tlds(list, keepOld) {\n  list = Array.isArray(list) ? list : [ list ];\n\n  if (!keepOld) {\n    this.__tlds__ = list.slice();\n    this.__tlds_replaced__ = true;\n    compile(this);\n    return this;\n  }\n\n  this.__tlds__ = this.__tlds__.concat(list)\n                                  .sort()\n                                  .filter(function (el, idx, arr) {\n                                    return el !== arr[idx - 1];\n                                  })\n                                  .reverse();\n\n  compile(this);\n  return this;\n};\n\n/**\n * LinkifyIt#normalize(match)\n *\n * Default normalizer (if schema does not define it's own).\n **/\nLinkifyIt.prototype.normalize = function normalize(match) {\n\n  // Do minimal possible changes by default. Need to collect feedback prior\n  // to move forward https://github.com/markdown-it/linkify-it/issues/1\n\n  if (!match.schema) { match.url = 'http://' + match.url; }\n\n  if (match.schema === 'mailto:' && !/^mailto:/i.test(match.url)) {\n    match.url = 'mailto:' + match.url;\n  }\n};\n\n\n/**\n * LinkifyIt#onCompile()\n *\n * Override to modify basic RegExp-s.\n **/\nLinkifyIt.prototype.onCompile = function onCompile() {\n};\n\n\nmodule.exports = LinkifyIt;\n","'use strict';\n\n\nmodule.exports = function (opts) {\n  var re = {};\n\n  // Use direct extract instead of `regenerate` to reduse browserified size\n  re.src_Any = require('uc.micro/properties/Any/regex').source;\n  re.src_Cc  = require('uc.micro/categories/Cc/regex').source;\n  re.src_Z   = require('uc.micro/categories/Z/regex').source;\n  re.src_P   = require('uc.micro/categories/P/regex').source;\n\n  // \\p{\\Z\\P\\Cc\\CF} (white spaces + control + format + punctuation)\n  re.src_ZPCc = [ re.src_Z, re.src_P, re.src_Cc ].join('|');\n\n  // \\p{\\Z\\Cc} (white spaces + control)\n  re.src_ZCc = [ re.src_Z, re.src_Cc ].join('|');\n\n  // Experimental. List of chars, completely prohibited in links\n  // because can separate it from other part of text\n  var text_separators = '[><\\uff5c]';\n\n  // All possible word characters (everything without punctuation, spaces & controls)\n  // Defined via punctuation & spaces to save space\n  // Should be something like \\p{\\L\\N\\S\\M} (\\w but without `_`)\n  re.src_pseudo_letter       = '(?:(?!' + text_separators + '|' + re.src_ZPCc + ')' + re.src_Any + ')';\n  // The same as abothe but without [0-9]\n  // var src_pseudo_letter_non_d = '(?:(?![0-9]|' + src_ZPCc + ')' + src_Any + ')';\n\n  ////////////////////////////////////////////////////////////////////////////////\n\n  re.src_ip4 =\n\n    '(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)';\n\n  // Prohibit any of \"@/[]()\" in user/pass to avoid wrong domain fetch.\n  re.src_auth    = '(?:(?:(?!' + re.src_ZCc + '|[@/\\\\[\\\\]()]).)+@)?';\n\n  re.src_port =\n\n    '(?::(?:6(?:[0-4]\\\\d{3}|5(?:[0-4]\\\\d{2}|5(?:[0-2]\\\\d|3[0-5])))|[1-5]?\\\\d{1,4}))?';\n\n  re.src_host_terminator =\n\n    '(?=$|' + text_separators + '|' + re.src_ZPCc + ')(?!-|_|:\\\\d|\\\\.-|\\\\.(?!$|' + re.src_ZPCc + '))';\n\n  re.src_path =\n\n    '(?:' +\n      '[/?#]' +\n        '(?:' +\n          '(?!' + re.src_ZCc + '|' + text_separators + '|[()[\\\\]{}.,\"\\'?!\\\\-]).|' +\n          '\\\\[(?:(?!' + re.src_ZCc + '|\\\\]).)*\\\\]|' +\n          '\\\\((?:(?!' + re.src_ZCc + '|[)]).)*\\\\)|' +\n          '\\\\{(?:(?!' + re.src_ZCc + '|[}]).)*\\\\}|' +\n          '\\\\\"(?:(?!' + re.src_ZCc + '|[\"]).)+\\\\\"|' +\n          \"\\\\'(?:(?!\" + re.src_ZCc + \"|[']).)+\\\\'|\" +\n          \"\\\\'(?=\" + re.src_pseudo_letter + '|[-]).|' +  // allow `I'm_king` if no pair found\n          '\\\\.{2,}[a-zA-Z0-9%/&]|' + // google has many dots in \"google search\" links (#66, #81).\n                                     // github has ... in commit range links,\n                                     // Restrict to\n                                     // - english\n                                     // - percent-encoded\n                                     // - parts of file path\n                                     // - params separator\n                                     // until more examples found.\n          '\\\\.(?!' + re.src_ZCc + '|[.]).|' +\n          (opts && opts['---'] ?\n            '\\\\-(?!--(?:[^-]|$))(?:-*)|' // `---` => long dash, terminate\n            :\n            '\\\\-+|'\n          ) +\n          '\\\\,(?!' + re.src_ZCc + ').|' +       // allow `,,,` in paths\n          '\\\\!+(?!' + re.src_ZCc + '|[!]).|' +  // allow `!!!` in paths, but not at the end\n          '\\\\?(?!' + re.src_ZCc + '|[?]).' +\n        ')+' +\n      '|\\\\/' +\n    ')?';\n\n  // Allow anything in markdown spec, forbid quote (\") at the first position\n  // because emails enclosed in quotes are far more common\n  re.src_email_name =\n\n    '[\\\\-;:&=\\\\+\\\\$,\\\\.a-zA-Z0-9_][\\\\-;:&=\\\\+\\\\$,\\\\\"\\\\.a-zA-Z0-9_]*';\n\n  re.src_xn =\n\n    'xn--[a-z0-9\\\\-]{1,59}';\n\n  // More to read about domain names\n  // http://serverfault.com/questions/638260/\n\n  re.src_domain_root =\n\n    // Allow letters & digits (http://test1)\n    '(?:' +\n      re.src_xn +\n      '|' +\n      re.src_pseudo_letter + '{1,63}' +\n    ')';\n\n  re.src_domain =\n\n    '(?:' +\n      re.src_xn +\n      '|' +\n      '(?:' + re.src_pseudo_letter + ')' +\n      '|' +\n      '(?:' + re.src_pseudo_letter + '(?:-|' + re.src_pseudo_letter + '){0,61}' + re.src_pseudo_letter + ')' +\n    ')';\n\n  re.src_host =\n\n    '(?:' +\n    // Don't need IP check, because digits are already allowed in normal domain names\n    //   src_ip4 +\n    // '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)*' + re.src_domain/*_root*/ + ')' +\n    ')';\n\n  re.tpl_host_fuzzy =\n\n    '(?:' +\n      re.src_ip4 +\n    '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))' +\n    ')';\n\n  re.tpl_host_no_ip_fuzzy =\n\n    '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))';\n\n  re.src_host_strict =\n\n    re.src_host + re.src_host_terminator;\n\n  re.tpl_host_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_host_terminator;\n\n  re.src_host_port_strict =\n\n    re.src_host + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_no_ip_fuzzy_strict =\n\n    re.tpl_host_no_ip_fuzzy + re.src_port + re.src_host_terminator;\n\n\n  ////////////////////////////////////////////////////////////////////////////////\n  // Main rules\n\n  // Rude test fuzzy links by host, for quick deny\n  re.tpl_host_fuzzy_test =\n\n    'localhost|www\\\\.|\\\\.\\\\d{1,3}\\\\.|(?:\\\\.(?:%TLDS%)(?:' + re.src_ZPCc + '|>|$))';\n\n  re.tpl_email_fuzzy =\n\n      '(^|' + text_separators + '|\"|\\\\(|' + re.src_ZCc + ')' +\n      '(' + re.src_email_name + '@' + re.tpl_host_fuzzy_strict + ')';\n\n  re.tpl_link_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_fuzzy_strict + re.src_path + ')';\n\n  re.tpl_link_no_ip_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_no_ip_fuzzy_strict + re.src_path + ')';\n\n  return re;\n};\n","'use strict';\n\n\nmodule.exports = require('./lib/');\n","// HTML5 entities map: { name -> utf16string }\n//\n'use strict';\n\n/*eslint quotes:0*/\nmodule.exports = require('entities/lib/maps/entities.json');\n","// List of valid html blocks names, accorting to commonmark spec\n// http://jgm.github.io/CommonMark/spec.html#html-blocks\n\n'use strict';\n\n\nmodule.exports = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'source',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n];\n","// Regexps to match html elements\n\n'use strict';\n\nvar attr_name     = '[a-zA-Z_:][a-zA-Z0-9:._-]*';\n\nvar unquoted      = '[^\"\\'=<>`\\\\x00-\\\\x20]+';\nvar single_quoted = \"'[^']*'\";\nvar double_quoted = '\"[^\"]*\"';\n\nvar attr_value  = '(?:' + unquoted + '|' + single_quoted + '|' + double_quoted + ')';\n\nvar attribute   = '(?:\\\\s+' + attr_name + '(?:\\\\s*=\\\\s*' + attr_value + ')?)';\n\nvar open_tag    = '<[A-Za-z][A-Za-z0-9\\\\-]*' + attribute + '*\\\\s*\\\\/?>';\n\nvar close_tag   = '<\\\\/[A-Za-z][A-Za-z0-9\\\\-]*\\\\s*>';\nvar comment     = '<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->';\nvar processing  = '<[?][\\\\s\\\\S]*?[?]>';\nvar declaration = '<![A-Z]+\\\\s+[^>]*>';\nvar cdata       = '<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>';\n\nvar HTML_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + '|' + comment +\n                        '|' + processing + '|' + declaration + '|' + cdata + ')');\nvar HTML_OPEN_CLOSE_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + ')');\n\nmodule.exports.HTML_TAG_RE = HTML_TAG_RE;\nmodule.exports.HTML_OPEN_CLOSE_TAG_RE = HTML_OPEN_CLOSE_TAG_RE;\n","// Utilities\n//\n'use strict';\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction isString(obj) { return _class(obj) === '[object String]'; }\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction has(object, key) {\n  return _hasOwnProperty.call(object, key);\n}\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be object');\n    }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\n// Remove element from array and put another array at those position.\n// Useful for some operations with tokens\nfunction arrayReplaceAt(src, pos, newElements) {\n  return [].concat(src.slice(0, pos), newElements, src.slice(pos + 1));\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isValidEntityCode(c) {\n  /*eslint no-bitwise:0*/\n  // broken sequence\n  if (c >= 0xD800 && c <= 0xDFFF) { return false; }\n  // never used\n  if (c >= 0xFDD0 && c <= 0xFDEF) { return false; }\n  if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) { return false; }\n  // control codes\n  if (c >= 0x00 && c <= 0x08) { return false; }\n  if (c === 0x0B) { return false; }\n  if (c >= 0x0E && c <= 0x1F) { return false; }\n  if (c >= 0x7F && c <= 0x9F) { return false; }\n  // out of range\n  if (c > 0x10FFFF) { return false; }\n  return true;\n}\n\nfunction fromCodePoint(c) {\n  /*eslint no-bitwise:0*/\n  if (c > 0xffff) {\n    c -= 0x10000;\n    var surrogate1 = 0xd800 + (c >> 10),\n        surrogate2 = 0xdc00 + (c & 0x3ff);\n\n    return String.fromCharCode(surrogate1, surrogate2);\n  }\n  return String.fromCharCode(c);\n}\n\n\nvar UNESCAPE_MD_RE  = /\\\\([!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~])/g;\nvar ENTITY_RE       = /&([a-z#][a-z0-9]{1,31});/gi;\nvar UNESCAPE_ALL_RE = new RegExp(UNESCAPE_MD_RE.source + '|' + ENTITY_RE.source, 'gi');\n\nvar DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))/i;\n\nvar entities = require('./entities');\n\nfunction replaceEntityPattern(match, name) {\n  var code = 0;\n\n  if (has(entities, name)) {\n    return entities[name];\n  }\n\n  if (name.charCodeAt(0) === 0x23/* # */ && DIGITAL_ENTITY_TEST_RE.test(name)) {\n    code = name[1].toLowerCase() === 'x' ?\n      parseInt(name.slice(2), 16) : parseInt(name.slice(1), 10);\n\n    if (isValidEntityCode(code)) {\n      return fromCodePoint(code);\n    }\n  }\n\n  return match;\n}\n\n/*function replaceEntities(str) {\n  if (str.indexOf('&') < 0) { return str; }\n\n  return str.replace(ENTITY_RE, replaceEntityPattern);\n}*/\n\nfunction unescapeMd(str) {\n  if (str.indexOf('\\\\') < 0) { return str; }\n  return str.replace(UNESCAPE_MD_RE, '$1');\n}\n\nfunction unescapeAll(str) {\n  if (str.indexOf('\\\\') < 0 && str.indexOf('&') < 0) { return str; }\n\n  return str.replace(UNESCAPE_ALL_RE, function (match, escaped, entity) {\n    if (escaped) { return escaped; }\n    return replaceEntityPattern(match, entity);\n  });\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar HTML_ESCAPE_TEST_RE = /[&<>\"]/;\nvar HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g;\nvar HTML_REPLACEMENTS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;'\n};\n\nfunction replaceUnsafeChar(ch) {\n  return HTML_REPLACEMENTS[ch];\n}\n\nfunction escapeHtml(str) {\n  if (HTML_ESCAPE_TEST_RE.test(str)) {\n    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar);\n  }\n  return str;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar REGEXP_ESCAPE_RE = /[.?*+^$[\\]\\\\(){}|-]/g;\n\nfunction escapeRE(str) {\n  return str.replace(REGEXP_ESCAPE_RE, '\\\\$&');\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isSpace(code) {\n  switch (code) {\n    case 0x09:\n    case 0x20:\n      return true;\n  }\n  return false;\n}\n\n// Zs (unicode class) || [\\t\\f\\v\\r\\n]\nfunction isWhiteSpace(code) {\n  if (code >= 0x2000 && code <= 0x200A) { return true; }\n  switch (code) {\n    case 0x09: // \\t\n    case 0x0A: // \\n\n    case 0x0B: // \\v\n    case 0x0C: // \\f\n    case 0x0D: // \\r\n    case 0x20:\n    case 0xA0:\n    case 0x1680:\n    case 0x202F:\n    case 0x205F:\n    case 0x3000:\n      return true;\n  }\n  return false;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/*eslint-disable max-len*/\nvar UNICODE_PUNCT_RE = require('uc.micro/categories/P/regex');\n\n// Currently without astral characters support.\nfunction isPunctChar(ch) {\n  return UNICODE_PUNCT_RE.test(ch);\n}\n\n\n// Markdown ASCII punctuation characters.\n//\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\n//\n// Don't confuse with unicode punctuation !!! It lacks some chars in ascii range.\n//\nfunction isMdAsciiPunct(ch) {\n  switch (ch) {\n    case 0x21/* ! */:\n    case 0x22/* \" */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x27/* ' */:\n    case 0x28/* ( */:\n    case 0x29/* ) */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2C/* , */:\n    case 0x2D/* - */:\n    case 0x2E/* . */:\n    case 0x2F/* / */:\n    case 0x3A/* : */:\n    case 0x3B/* ; */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x3F/* ? */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7C/* | */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\n// Hepler to unify [reference labels].\n//\nfunction normalizeReference(str) {\n  // Trim and collapse whitespace\n  //\n  str = str.trim().replace(/\\s+/g, ' ');\n\n  // In node v10 'ẞ'.toLowerCase() === 'Ṿ', which is presumed to be a bug\n  // fixed in v12 (couldn't find any details).\n  //\n  // So treat this one as a special case\n  // (remove this when node v10 is no longer supported).\n  //\n  if ('ẞ'.toLowerCase() === 'Ṿ') {\n    str = str.replace(/ẞ/g, 'ß');\n  }\n\n  // .toLowerCase().toUpperCase() should get rid of all differences\n  // between letter variants.\n  //\n  // Simple .toLowerCase() doesn't normalize 125 code points correctly,\n  // and .toUpperCase doesn't normalize 6 of them (list of exceptions:\n  // İ, ϴ, ẞ, Ω, K, Å - those are already uppercased, but have differently\n  // uppercased versions).\n  //\n  // Here's an example showing how it happens. Lets take greek letter omega:\n  // uppercase U+0398 (Θ), U+03f4 (ϴ) and lowercase U+03b8 (θ), U+03d1 (ϑ)\n  //\n  // Unicode entries:\n  // 0398;GREEK CAPITAL LETTER THETA;Lu;0;L;;;;;N;;;;03B8;\n  // 03B8;GREEK SMALL LETTER THETA;Ll;0;L;;;;;N;;;0398;;0398\n  // 03D1;GREEK THETA SYMBOL;Ll;0;L;<compat> 03B8;;;;N;GREEK SMALL LETTER SCRIPT THETA;;0398;;0398\n  // 03F4;GREEK CAPITAL THETA SYMBOL;Lu;0;L;<compat> 0398;;;;N;;;;03B8;\n  //\n  // Case-insensitive comparison should treat all of them as equivalent.\n  //\n  // But .toLowerCase() doesn't change ϑ (it's already lowercase),\n  // and .toUpperCase() doesn't change ϴ (already uppercase).\n  //\n  // Applying first lower then upper case normalizes any character:\n  // '\\u0398\\u03f4\\u03b8\\u03d1'.toLowerCase().toUpperCase() === '\\u0398\\u0398\\u0398\\u0398'\n  //\n  // Note: this is equivalent to unicode case folding; unicode normalization\n  // is a different step that is not required here.\n  //\n  // Final result should be uppercased, because it's later stored in an object\n  // (this avoid a conflict with Object.prototype members,\n  // most notably, `__proto__`)\n  //\n  return str.toLowerCase().toUpperCase();\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n// Re-export libraries commonly used in both markdown-it and its plugins,\n// so plugins won't have to depend on them explicitly, which reduces their\n// bundled size (e.g. a browser build).\n//\nexports.lib                 = {};\nexports.lib.mdurl           = require('mdurl');\nexports.lib.ucmicro         = require('uc.micro');\n\nexports.assign              = assign;\nexports.isString            = isString;\nexports.has                 = has;\nexports.unescapeMd          = unescapeMd;\nexports.unescapeAll         = unescapeAll;\nexports.isValidEntityCode   = isValidEntityCode;\nexports.fromCodePoint       = fromCodePoint;\n// exports.replaceEntities     = replaceEntities;\nexports.escapeHtml          = escapeHtml;\nexports.arrayReplaceAt      = arrayReplaceAt;\nexports.isSpace             = isSpace;\nexports.isWhiteSpace        = isWhiteSpace;\nexports.isMdAsciiPunct      = isMdAsciiPunct;\nexports.isPunctChar         = isPunctChar;\nexports.escapeRE            = escapeRE;\nexports.normalizeReference  = normalizeReference;\n","// Just a shortcut for bulk export\n'use strict';\n\n\nexports.parseLinkLabel       = require('./parse_link_label');\nexports.parseLinkDestination = require('./parse_link_destination');\nexports.parseLinkTitle       = require('./parse_link_title');\n","// Parse link destination\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkDestination(str, pos, max) {\n  var code, level,\n      lines = 0,\n      start = pos,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (str.charCodeAt(pos) === 0x3C /* < */) {\n    pos++;\n    while (pos < max) {\n      code = str.charCodeAt(pos);\n      if (code === 0x0A /* \\n */) { return result; }\n      if (code === 0x3C /* < */) { return result; }\n      if (code === 0x3E /* > */) {\n        result.pos = pos + 1;\n        result.str = unescapeAll(str.slice(start + 1, pos));\n        result.ok = true;\n        return result;\n      }\n      if (code === 0x5C /* \\ */ && pos + 1 < max) {\n        pos += 2;\n        continue;\n      }\n\n      pos++;\n    }\n\n    // no closing '>'\n    return result;\n  }\n\n  // this should be ... } else { ... branch\n\n  level = 0;\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n\n    if (code === 0x20) { break; }\n\n    // ascii control characters\n    if (code < 0x20 || code === 0x7F) { break; }\n\n    if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      if (str.charCodeAt(pos + 1) === 0x20) { break; }\n      pos += 2;\n      continue;\n    }\n\n    if (code === 0x28 /* ( */) {\n      level++;\n      if (level > 32) { return result; }\n    }\n\n    if (code === 0x29 /* ) */) {\n      if (level === 0) { break; }\n      level--;\n    }\n\n    pos++;\n  }\n\n  if (start === pos) { return result; }\n  if (level !== 0) { return result; }\n\n  result.str = unescapeAll(str.slice(start, pos));\n  result.lines = lines;\n  result.pos = pos;\n  result.ok = true;\n  return result;\n};\n","// Parse link label\n//\n// this function assumes that first character (\"[\") already matches;\n// returns the end of the label\n//\n'use strict';\n\nmodule.exports = function parseLinkLabel(state, start, disableNested) {\n  var level, found, marker, prevPos,\n      labelEnd = -1,\n      max = state.posMax,\n      oldPos = state.pos;\n\n  state.pos = start + 1;\n  level = 1;\n\n  while (state.pos < max) {\n    marker = state.src.charCodeAt(state.pos);\n    if (marker === 0x5D /* ] */) {\n      level--;\n      if (level === 0) {\n        found = true;\n        break;\n      }\n    }\n\n    prevPos = state.pos;\n    state.md.inline.skipToken(state);\n    if (marker === 0x5B /* [ */) {\n      if (prevPos === state.pos - 1) {\n        // increase level if we find text `[`, which is not a part of any token\n        level++;\n      } else if (disableNested) {\n        state.pos = oldPos;\n        return -1;\n      }\n    }\n  }\n\n  if (found) {\n    labelEnd = state.pos;\n  }\n\n  // restore old state\n  state.pos = oldPos;\n\n  return labelEnd;\n};\n","// Parse link title\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkTitle(str, pos, max) {\n  var code,\n      marker,\n      lines = 0,\n      start = pos,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (pos >= max) { return result; }\n\n  marker = str.charCodeAt(pos);\n\n  if (marker !== 0x22 /* \" */ && marker !== 0x27 /* ' */ && marker !== 0x28 /* ( */) { return result; }\n\n  pos++;\n\n  // if opening marker is \"(\", switch it to closing marker \")\"\n  if (marker === 0x28) { marker = 0x29; }\n\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n    if (code === marker) {\n      result.pos = pos + 1;\n      result.lines = lines;\n      result.str = unescapeAll(str.slice(start + 1, pos));\n      result.ok = true;\n      return result;\n    } else if (code === 0x28 /* ( */ && marker === 0x29 /* ) */) {\n      return result;\n    } else if (code === 0x0A) {\n      lines++;\n    } else if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      pos++;\n      if (str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n\n    pos++;\n  }\n\n  return result;\n};\n","// Main parser class\n\n'use strict';\n\n\nvar utils        = require('./common/utils');\nvar helpers      = require('./helpers');\nvar Renderer     = require('./renderer');\nvar ParserCore   = require('./parser_core');\nvar ParserBlock  = require('./parser_block');\nvar ParserInline = require('./parser_inline');\nvar LinkifyIt    = require('linkify-it');\nvar mdurl        = require('mdurl');\nvar punycode     = require('punycode');\n\n\nvar config = {\n  default: require('./presets/default'),\n  zero: require('./presets/zero'),\n  commonmark: require('./presets/commonmark')\n};\n\n////////////////////////////////////////////////////////////////////////////////\n//\n// This validator can prohibit more than really needed to prevent XSS. It's a\n// tradeoff to keep code simple and to be secure by default.\n//\n// If you need different setup - override validator method as you wish. Or\n// replace it with dummy function and use external sanitizer.\n//\n\nvar BAD_PROTO_RE = /^(vbscript|javascript|file|data):/;\nvar GOOD_DATA_RE = /^data:image\\/(gif|png|jpeg|webp);/;\n\nfunction validateLink(url) {\n  // url should be normalized at this point, and existing entities are decoded\n  var str = url.trim().toLowerCase();\n\n  return BAD_PROTO_RE.test(str) ? (GOOD_DATA_RE.test(str) ? true : false) : true;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar RECODE_HOSTNAME_FOR = [ 'http:', 'https:', 'mailto:' ];\n\nfunction normalizeLink(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toASCII(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  return mdurl.encode(mdurl.format(parsed));\n}\n\nfunction normalizeLinkText(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toUnicode(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  // add '%' to exclude list because of https://github.com/markdown-it/markdown-it/issues/720\n  return mdurl.decode(mdurl.format(parsed), mdurl.decode.defaultChars + '%');\n}\n\n\n/**\n * class MarkdownIt\n *\n * Main parser/renderer class.\n *\n * ##### Usage\n *\n * ```javascript\n * // node.js, \"classic\" way:\n * var MarkdownIt = require('markdown-it'),\n *     md = new MarkdownIt();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // node.js, the same, but with sugar:\n * var md = require('markdown-it')();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // browser without AMD, added to \"window\" on script load\n * // Note, there are no dash.\n * var md = window.markdownit();\n * var result = md.render('# markdown-it rulezz!');\n * ```\n *\n * Single line rendering, without paragraph wrap:\n *\n * ```javascript\n * var md = require('markdown-it')();\n * var result = md.renderInline('__markdown-it__ rulezz!');\n * ```\n **/\n\n/**\n * new MarkdownIt([presetName, options])\n * - presetName (String): optional, `commonmark` / `zero`\n * - options (Object)\n *\n * Creates parser instanse with given config. Can be called without `new`.\n *\n * ##### presetName\n *\n * MarkdownIt provides named presets as a convenience to quickly\n * enable/disable active syntax rules and options for common use cases.\n *\n * - [\"commonmark\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/commonmark.js) -\n *   configures parser to strict [CommonMark](http://commonmark.org/) mode.\n * - [default](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/default.js) -\n *   similar to GFM, used when no preset name given. Enables all available rules,\n *   but still without html, typographer & autolinker.\n * - [\"zero\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/zero.js) -\n *   all rules disabled. Useful to quickly setup your config via `.enable()`.\n *   For example, when you need only `bold` and `italic` markup and nothing else.\n *\n * ##### options:\n *\n * - __html__ - `false`. Set `true` to enable HTML tags in source. Be careful!\n *   That's not safe! You may need external sanitizer to protect output from XSS.\n *   It's better to extend features via plugins, instead of enabling HTML.\n * - __xhtmlOut__ - `false`. Set `true` to add '/' when closing single tags\n *   (`<br />`). This is needed only for full CommonMark compatibility. In real\n *   world you will need HTML output.\n * - __breaks__ - `false`. Set `true` to convert `\\n` in paragraphs into `<br>`.\n * - __langPrefix__ - `language-`. CSS language class prefix for fenced blocks.\n *   Can be useful for external highlighters.\n * - __linkify__ - `false`. Set `true` to autoconvert URL-like text to links.\n * - __typographer__  - `false`. Set `true` to enable [some language-neutral\n *   replacement](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/replacements.js) +\n *   quotes beautification (smartquotes).\n * - __quotes__ - `“”‘’`, String or Array. Double + single quotes replacement\n *   pairs, when typographer enabled and smartquotes on. For example, you can\n *   use `'«»„“'` for Russian, `'„“‚‘'` for German, and\n *   `['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›']` for French (including nbsp).\n * - __highlight__ - `null`. Highlighter function for fenced code blocks.\n *   Highlighter `function (str, lang)` should return escaped HTML. It can also\n *   return empty string if the source was not changed and should be escaped\n *   externaly. If result starts with <pre... internal wrapper is skipped.\n *\n * ##### Example\n *\n * ```javascript\n * // commonmark mode\n * var md = require('markdown-it')('commonmark');\n *\n * // default mode\n * var md = require('markdown-it')();\n *\n * // enable everything\n * var md = require('markdown-it')({\n *   html: true,\n *   linkify: true,\n *   typographer: true\n * });\n * ```\n *\n * ##### Syntax highlighting\n *\n * ```js\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return hljs.highlight(lang, str, true).value;\n *       } catch (__) {}\n *     }\n *\n *     return ''; // use external default escaping\n *   }\n * });\n * ```\n *\n * Or with full wrapper override (if you need assign class to `<pre>`):\n *\n * ```javascript\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * // Actual default values\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return '<pre class=\"hljs\"><code>' +\n *                hljs.highlight(lang, str, true).value +\n *                '</code></pre>';\n *       } catch (__) {}\n *     }\n *\n *     return '<pre class=\"hljs\"><code>' + md.utils.escapeHtml(str) + '</code></pre>';\n *   }\n * });\n * ```\n *\n **/\nfunction MarkdownIt(presetName, options) {\n  if (!(this instanceof MarkdownIt)) {\n    return new MarkdownIt(presetName, options);\n  }\n\n  if (!options) {\n    if (!utils.isString(presetName)) {\n      options = presetName || {};\n      presetName = 'default';\n    }\n  }\n\n  /**\n   * MarkdownIt#inline -> ParserInline\n   *\n   * Instance of [[ParserInline]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.inline = new ParserInline();\n\n  /**\n   * MarkdownIt#block -> ParserBlock\n   *\n   * Instance of [[ParserBlock]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.block = new ParserBlock();\n\n  /**\n   * MarkdownIt#core -> Core\n   *\n   * Instance of [[Core]] chain executor. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.core = new ParserCore();\n\n  /**\n   * MarkdownIt#renderer -> Renderer\n   *\n   * Instance of [[Renderer]]. Use it to modify output look. Or to add rendering\n   * rules for new token types, generated by plugins.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * function myToken(tokens, idx, options, env, self) {\n   *   //...\n   *   return result;\n   * };\n   *\n   * md.renderer.rules['my_token'] = myToken\n   * ```\n   *\n   * See [[Renderer]] docs and [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js).\n   **/\n  this.renderer = new Renderer();\n\n  /**\n   * MarkdownIt#linkify -> LinkifyIt\n   *\n   * [linkify-it](https://github.com/markdown-it/linkify-it) instance.\n   * Used by [linkify](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/linkify.js)\n   * rule.\n   **/\n  this.linkify = new LinkifyIt();\n\n  /**\n   * MarkdownIt#validateLink(url) -> Boolean\n   *\n   * Link validation function. CommonMark allows too much in links. By default\n   * we disable `javascript:`, `vbscript:`, `file:` schemas, and almost all `data:...` schemas\n   * except some embedded image types.\n   *\n   * You can change this behaviour:\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   * // enable everything\n   * md.validateLink = function () { return true; }\n   * ```\n   **/\n  this.validateLink = validateLink;\n\n  /**\n   * MarkdownIt#normalizeLink(url) -> String\n   *\n   * Function used to encode link url to a machine-readable format,\n   * which includes url-encoding, punycode, etc.\n   **/\n  this.normalizeLink = normalizeLink;\n\n  /**\n   * MarkdownIt#normalizeLinkText(url) -> String\n   *\n   * Function used to decode link url to a human-readable format`\n   **/\n  this.normalizeLinkText = normalizeLinkText;\n\n\n  // Expose utils & helpers for easy acces from plugins\n\n  /**\n   * MarkdownIt#utils -> utils\n   *\n   * Assorted utility functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/common/utils.js).\n   **/\n  this.utils = utils;\n\n  /**\n   * MarkdownIt#helpers -> helpers\n   *\n   * Link components parser functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/helpers).\n   **/\n  this.helpers = utils.assign({}, helpers);\n\n\n  this.options = {};\n  this.configure(presetName);\n\n  if (options) { this.set(options); }\n}\n\n\n/** chainable\n * MarkdownIt.set(options)\n *\n * Set parser options (in the same format as in constructor). Probably, you\n * will never need it, but you can change options after constructor call.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .set({ html: true, breaks: true })\n *             .set({ typographer, true });\n * ```\n *\n * __Note:__ To achieve the best possible performance, don't modify a\n * `markdown-it` instance options on the fly. If you need multiple configurations\n * it's best to create multiple instances and initialize each with separate\n * config.\n **/\nMarkdownIt.prototype.set = function (options) {\n  utils.assign(this.options, options);\n  return this;\n};\n\n\n/** chainable, internal\n * MarkdownIt.configure(presets)\n *\n * Batch load of all options and compenent settings. This is internal method,\n * and you probably will not need it. But if you will - see available presets\n * and data structure [here](https://github.com/markdown-it/markdown-it/tree/master/lib/presets)\n *\n * We strongly recommend to use presets instead of direct config loads. That\n * will give better compatibility with next versions.\n **/\nMarkdownIt.prototype.configure = function (presets) {\n  var self = this, presetName;\n\n  if (utils.isString(presets)) {\n    presetName = presets;\n    presets = config[presetName];\n    if (!presets) { throw new Error('Wrong `markdown-it` preset \"' + presetName + '\", check name'); }\n  }\n\n  if (!presets) { throw new Error('Wrong `markdown-it` preset, can\\'t be empty'); }\n\n  if (presets.options) { self.set(presets.options); }\n\n  if (presets.components) {\n    Object.keys(presets.components).forEach(function (name) {\n      if (presets.components[name].rules) {\n        self[name].ruler.enableOnly(presets.components[name].rules);\n      }\n      if (presets.components[name].rules2) {\n        self[name].ruler2.enableOnly(presets.components[name].rules2);\n      }\n    });\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.enable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to enable\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable list or rules. It will automatically find appropriate components,\n * containing rules with given names. If rule not found, and `ignoreInvalid`\n * not set - throws exception.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .enable(['sub', 'sup'])\n *             .disable('smartquotes');\n * ```\n **/\nMarkdownIt.prototype.enable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.enable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.enable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to enable unknown rule(s): ' + missed);\n  }\n\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.disable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * The same as [[MarkdownIt.enable]], but turn specified rules off.\n **/\nMarkdownIt.prototype.disable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.disable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.disable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to disable unknown rule(s): ' + missed);\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.use(plugin, params)\n *\n * Load specified plugin with given params into current parser instance.\n * It's just a sugar to call `plugin(md, params)` with curring.\n *\n * ##### Example\n *\n * ```javascript\n * var iterator = require('markdown-it-for-inline');\n * var md = require('markdown-it')()\n *             .use(iterator, 'foo_replace', 'text', function (tokens, idx) {\n *               tokens[idx].content = tokens[idx].content.replace(/foo/g, 'bar');\n *             });\n * ```\n **/\nMarkdownIt.prototype.use = function (plugin /*, params, ... */) {\n  var args = [ this ].concat(Array.prototype.slice.call(arguments, 1));\n  plugin.apply(plugin, args);\n  return this;\n};\n\n\n/** internal\n * MarkdownIt.parse(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Parse input string and return list of block tokens (special token type\n * \"inline\" will contain list of inline tokens). You should not call this\n * method directly, until you write custom renderer (for example, to produce\n * AST).\n *\n * `env` is used to pass data between \"distributed\" rules and return additional\n * metadata like reference info, needed for the renderer. It also can be used to\n * inject data in specific cases. Usually, you will be ok to pass `{}`,\n * and then pass updated object to renderer.\n **/\nMarkdownIt.prototype.parse = function (src, env) {\n  if (typeof src !== 'string') {\n    throw new Error('Input data should be a String');\n  }\n\n  var state = new this.core.State(src, this, env);\n\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.render(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Render markdown string into html. It does all magic for you :).\n *\n * `env` can be used to inject additional metadata (`{}` by default).\n * But you will not need it with high probability. See also comment\n * in [[MarkdownIt.parse]].\n **/\nMarkdownIt.prototype.render = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parse(src, env), this.options, env);\n};\n\n\n/** internal\n * MarkdownIt.parseInline(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * The same as [[MarkdownIt.parse]] but skip all block rules. It returns the\n * block tokens list with the single `inline` element, containing parsed inline\n * tokens in `children` property. Also updates `env` object.\n **/\nMarkdownIt.prototype.parseInline = function (src, env) {\n  var state = new this.core.State(src, this, env);\n\n  state.inlineMode = true;\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.renderInline(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Similar to [[MarkdownIt.render]] but for single paragraph content. Result\n * will NOT be wrapped into `<p>` tags.\n **/\nMarkdownIt.prototype.renderInline = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parseInline(src, env), this.options, env);\n};\n\n\nmodule.exports = MarkdownIt;\n","/** internal\n * class ParserBlock\n *\n * Block-level tokenizer.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\nvar _rules = [\n  // First 2 params - rule name & source. Secondary array - list of rules,\n  // which can be terminated by this one.\n  [ 'table',      require('./rules_block/table'),      [ 'paragraph', 'reference' ] ],\n  [ 'code',       require('./rules_block/code') ],\n  [ 'fence',      require('./rules_block/fence'),      [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'blockquote', require('./rules_block/blockquote'), [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'hr',         require('./rules_block/hr'),         [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'list',       require('./rules_block/list'),       [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'reference',  require('./rules_block/reference') ],\n  [ 'html_block', require('./rules_block/html_block'), [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'heading',    require('./rules_block/heading'),    [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'lheading',   require('./rules_block/lheading') ],\n  [ 'paragraph',  require('./rules_block/paragraph') ]\n];\n\n\n/**\n * new ParserBlock()\n **/\nfunction ParserBlock() {\n  /**\n   * ParserBlock#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of block rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1], { alt: (_rules[i][2] || []).slice() });\n  }\n}\n\n\n// Generate tokens for input range\n//\nParserBlock.prototype.tokenize = function (state, startLine, endLine) {\n  var ok, i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      line = startLine,\n      hasEmptyLines = false,\n      maxNesting = state.md.options.maxNesting;\n\n  while (line < endLine) {\n    state.line = line = state.skipEmptyLines(line);\n    if (line >= endLine) { break; }\n\n    // Termination condition for nested calls.\n    // Nested calls currently used for blockquotes & lists\n    if (state.sCount[line] < state.blkIndent) { break; }\n\n    // If nesting level exceeded - skip tail to the end. That's not ordinary\n    // situation and we should not care about content.\n    if (state.level >= maxNesting) {\n      state.line = endLine;\n      break;\n    }\n\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.line`\n    // - update `state.tokens`\n    // - return true\n\n    for (i = 0; i < len; i++) {\n      ok = rules[i](state, line, endLine, false);\n      if (ok) { break; }\n    }\n\n    // set state.tight if we had an empty line before current tag\n    // i.e. latest empty line should not count\n    state.tight = !hasEmptyLines;\n\n    // paragraph might \"eat\" one newline after it in nested lists\n    if (state.isEmpty(state.line - 1)) {\n      hasEmptyLines = true;\n    }\n\n    line = state.line;\n\n    if (line < endLine && state.isEmpty(line)) {\n      hasEmptyLines = true;\n      line++;\n      state.line = line;\n    }\n  }\n};\n\n\n/**\n * ParserBlock.parse(str, md, env, outTokens)\n *\n * Process input string and push block tokens into `outTokens`\n **/\nParserBlock.prototype.parse = function (src, md, env, outTokens) {\n  var state;\n\n  if (!src) { return; }\n\n  state = new this.State(src, md, env, outTokens);\n\n  this.tokenize(state, state.line, state.lineMax);\n};\n\n\nParserBlock.prototype.State = require('./rules_block/state_block');\n\n\nmodule.exports = ParserBlock;\n","/** internal\n * class Core\n *\n * Top-level rules executor. Glues block/inline parsers and does intermediate\n * transformations.\n **/\n'use strict';\n\n\nvar Ruler  = require('./ruler');\n\n\nvar _rules = [\n  [ 'normalize',      require('./rules_core/normalize')      ],\n  [ 'block',          require('./rules_core/block')          ],\n  [ 'inline',         require('./rules_core/inline')         ],\n  [ 'linkify',        require('./rules_core/linkify')        ],\n  [ 'replacements',   require('./rules_core/replacements')   ],\n  [ 'smartquotes',    require('./rules_core/smartquotes')    ]\n];\n\n\n/**\n * new Core()\n **/\nfunction Core() {\n  /**\n   * Core#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of core rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n}\n\n\n/**\n * Core.process(state)\n *\n * Executes core chain rules.\n **/\nCore.prototype.process = function (state) {\n  var i, l, rules;\n\n  rules = this.ruler.getRules('');\n\n  for (i = 0, l = rules.length; i < l; i++) {\n    rules[i](state);\n  }\n};\n\nCore.prototype.State = require('./rules_core/state_core');\n\n\nmodule.exports = Core;\n","/** internal\n * class ParserInline\n *\n * Tokenizes paragraph content.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Parser rules\n\nvar _rules = [\n  [ 'text',            require('./rules_inline/text') ],\n  [ 'newline',         require('./rules_inline/newline') ],\n  [ 'escape',          require('./rules_inline/escape') ],\n  [ 'backticks',       require('./rules_inline/backticks') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').tokenize ],\n  [ 'emphasis',        require('./rules_inline/emphasis').tokenize ],\n  [ 'link',            require('./rules_inline/link') ],\n  [ 'image',           require('./rules_inline/image') ],\n  [ 'autolink',        require('./rules_inline/autolink') ],\n  [ 'html_inline',     require('./rules_inline/html_inline') ],\n  [ 'entity',          require('./rules_inline/entity') ]\n];\n\nvar _rules2 = [\n  [ 'balance_pairs',   require('./rules_inline/balance_pairs') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').postProcess ],\n  [ 'emphasis',        require('./rules_inline/emphasis').postProcess ],\n  [ 'text_collapse',   require('./rules_inline/text_collapse') ]\n];\n\n\n/**\n * new ParserInline()\n **/\nfunction ParserInline() {\n  var i;\n\n  /**\n   * ParserInline#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of inline rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n\n  /**\n   * ParserInline#ruler2 -> Ruler\n   *\n   * [[Ruler]] instance. Second ruler used for post-processing\n   * (e.g. in emphasis-like rules).\n   **/\n  this.ruler2 = new Ruler();\n\n  for (i = 0; i < _rules2.length; i++) {\n    this.ruler2.push(_rules2[i][0], _rules2[i][1]);\n  }\n}\n\n\n// Skip single token by running all rules in validation mode;\n// returns `true` if any rule reported success\n//\nParserInline.prototype.skipToken = function (state) {\n  var ok, i, pos = state.pos,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      maxNesting = state.md.options.maxNesting,\n      cache = state.cache;\n\n\n  if (typeof cache[pos] !== 'undefined') {\n    state.pos = cache[pos];\n    return;\n  }\n\n  if (state.level < maxNesting) {\n    for (i = 0; i < len; i++) {\n      // Increment state.level and decrement it later to limit recursion.\n      // It's harmless to do here, because no tokens are created. But ideally,\n      // we'd need a separate private state variable for this purpose.\n      //\n      state.level++;\n      ok = rules[i](state, true);\n      state.level--;\n\n      if (ok) { break; }\n    }\n  } else {\n    // Too much nesting, just skip until the end of the paragraph.\n    //\n    // NOTE: this will cause links to behave incorrectly in the following case,\n    //       when an amount of `[` is exactly equal to `maxNesting + 1`:\n    //\n    //       [[[[[[[[[[[[[[[[[[[[[foo]()\n    //\n    // TODO: remove this workaround when CM standard will allow nested links\n    //       (we can replace it by preventing links from being parsed in\n    //       validation mode)\n    //\n    state.pos = state.posMax;\n  }\n\n  if (!ok) { state.pos++; }\n  cache[pos] = state.pos;\n};\n\n\n// Generate tokens for input range\n//\nParserInline.prototype.tokenize = function (state) {\n  var ok, i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      end = state.posMax,\n      maxNesting = state.md.options.maxNesting;\n\n  while (state.pos < end) {\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.pos`\n    // - update `state.tokens`\n    // - return true\n\n    if (state.level < maxNesting) {\n      for (i = 0; i < len; i++) {\n        ok = rules[i](state, false);\n        if (ok) { break; }\n      }\n    }\n\n    if (ok) {\n      if (state.pos >= end) { break; }\n      continue;\n    }\n\n    state.pending += state.src[state.pos++];\n  }\n\n  if (state.pending) {\n    state.pushPending();\n  }\n};\n\n\n/**\n * ParserInline.parse(str, md, env, outTokens)\n *\n * Process input string and push inline tokens into `outTokens`\n **/\nParserInline.prototype.parse = function (str, md, env, outTokens) {\n  var i, rules, len;\n  var state = new this.State(str, md, env, outTokens);\n\n  this.tokenize(state);\n\n  rules = this.ruler2.getRules('');\n  len = rules.length;\n\n  for (i = 0; i < len; i++) {\n    rules[i](state);\n  }\n};\n\n\nParserInline.prototype.State = require('./rules_inline/state_inline');\n\n\nmodule.exports = ParserInline;\n","// Commonmark default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         true,         // Enable HTML tags in source\n    xhtmlOut:     true,         // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline'\n      ]\n    },\n\n    block: {\n      rules: [\n        'blockquote',\n        'code',\n        'fence',\n        'heading',\n        'hr',\n        'html_block',\n        'lheading',\n        'list',\n        'reference',\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'autolink',\n        'backticks',\n        'emphasis',\n        'entity',\n        'escape',\n        'html_inline',\n        'image',\n        'link',\n        'newline',\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'emphasis',\n        'text_collapse'\n      ]\n    }\n  }\n};\n","// markdown-it default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   100            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {},\n    block: {},\n    inline: {}\n  }\n};\n","// \"Zero\" preset, with nothing enabled. Useful for manual configuring of simple\n// modes. For example, to parse bold/italic only.\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline'\n      ]\n    },\n\n    block: {\n      rules: [\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'text_collapse'\n      ]\n    }\n  }\n};\n","/**\n * class Renderer\n *\n * Generates HTML from parsed token stream. Each instance has independent\n * copy of rules. Those can be rewritten with ease. Also, you can add new\n * rules if you create plugin and adds new token types.\n **/\n'use strict';\n\n\nvar assign          = require('./common/utils').assign;\nvar unescapeAll     = require('./common/utils').unescapeAll;\nvar escapeHtml      = require('./common/utils').escapeHtml;\n\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar default_rules = {};\n\n\ndefault_rules.code_inline = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<code' + slf.renderAttrs(token) + '>' +\n          escapeHtml(tokens[idx].content) +\n          '</code>';\n};\n\n\ndefault_rules.code_block = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<pre' + slf.renderAttrs(token) + '><code>' +\n          escapeHtml(tokens[idx].content) +\n          '</code></pre>\\n';\n};\n\n\ndefault_rules.fence = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx],\n      info = token.info ? unescapeAll(token.info).trim() : '',\n      langName = '',\n      langAttrs = '',\n      highlighted, i, arr, tmpAttrs, tmpToken;\n\n  if (info) {\n    arr = info.split(/(\\s+)/g);\n    langName = arr[0];\n    langAttrs = arr.slice(2).join('');\n  }\n\n  if (options.highlight) {\n    highlighted = options.highlight(token.content, langName, langAttrs) || escapeHtml(token.content);\n  } else {\n    highlighted = escapeHtml(token.content);\n  }\n\n  if (highlighted.indexOf('<pre') === 0) {\n    return highlighted + '\\n';\n  }\n\n  // If language exists, inject class gently, without modifying original token.\n  // May be, one day we will add .deepClone() for token and simplify this part, but\n  // now we prefer to keep things local.\n  if (info) {\n    i        = token.attrIndex('class');\n    tmpAttrs = token.attrs ? token.attrs.slice() : [];\n\n    if (i < 0) {\n      tmpAttrs.push([ 'class', options.langPrefix + langName ]);\n    } else {\n      tmpAttrs[i] = tmpAttrs[i].slice();\n      tmpAttrs[i][1] += ' ' + options.langPrefix + langName;\n    }\n\n    // Fake token just to render attributes\n    tmpToken = {\n      attrs: tmpAttrs\n    };\n\n    return  '<pre><code' + slf.renderAttrs(tmpToken) + '>'\n          + highlighted\n          + '</code></pre>\\n';\n  }\n\n\n  return  '<pre><code' + slf.renderAttrs(token) + '>'\n        + highlighted\n        + '</code></pre>\\n';\n};\n\n\ndefault_rules.image = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  // \"alt\" attr MUST be set, even if empty. Because it's mandatory and\n  // should be placed on proper position for tests.\n  //\n  // Replace content with actual value\n\n  token.attrs[token.attrIndex('alt')][1] =\n    slf.renderInlineAsText(token.children, options, env);\n\n  return slf.renderToken(tokens, idx, options);\n};\n\n\ndefault_rules.hardbreak = function (tokens, idx, options /*, env */) {\n  return options.xhtmlOut ? '<br />\\n' : '<br>\\n';\n};\ndefault_rules.softbreak = function (tokens, idx, options /*, env */) {\n  return options.breaks ? (options.xhtmlOut ? '<br />\\n' : '<br>\\n') : '\\n';\n};\n\n\ndefault_rules.text = function (tokens, idx /*, options, env */) {\n  return escapeHtml(tokens[idx].content);\n};\n\n\ndefault_rules.html_block = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\ndefault_rules.html_inline = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\n\n\n/**\n * new Renderer()\n *\n * Creates new [[Renderer]] instance and fill [[Renderer#rules]] with defaults.\n **/\nfunction Renderer() {\n\n  /**\n   * Renderer#rules -> Object\n   *\n   * Contains render rules for tokens. Can be updated and extended.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * md.renderer.rules.strong_open  = function () { return '<b>'; };\n   * md.renderer.rules.strong_close = function () { return '</b>'; };\n   *\n   * var result = md.renderInline(...);\n   * ```\n   *\n   * Each rule is called as independent static function with fixed signature:\n   *\n   * ```javascript\n   * function my_token_render(tokens, idx, options, env, renderer) {\n   *   // ...\n   *   return renderedHTML;\n   * }\n   * ```\n   *\n   * See [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js)\n   * for more details and examples.\n   **/\n  this.rules = assign({}, default_rules);\n}\n\n\n/**\n * Renderer.renderAttrs(token) -> String\n *\n * Render token attributes to string.\n **/\nRenderer.prototype.renderAttrs = function renderAttrs(token) {\n  var i, l, result;\n\n  if (!token.attrs) { return ''; }\n\n  result = '';\n\n  for (i = 0, l = token.attrs.length; i < l; i++) {\n    result += ' ' + escapeHtml(token.attrs[i][0]) + '=\"' + escapeHtml(token.attrs[i][1]) + '\"';\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.renderToken(tokens, idx, options) -> String\n * - tokens (Array): list of tokens\n * - idx (Numbed): token index to render\n * - options (Object): params of parser instance\n *\n * Default token renderer. Can be overriden by custom function\n * in [[Renderer#rules]].\n **/\nRenderer.prototype.renderToken = function renderToken(tokens, idx, options) {\n  var nextToken,\n      result = '',\n      needLf = false,\n      token = tokens[idx];\n\n  // Tight list paragraphs\n  if (token.hidden) {\n    return '';\n  }\n\n  // Insert a newline between hidden paragraph and subsequent opening\n  // block-level tag.\n  //\n  // For example, here we should insert a newline before blockquote:\n  //  - a\n  //    >\n  //\n  if (token.block && token.nesting !== -1 && idx && tokens[idx - 1].hidden) {\n    result += '\\n';\n  }\n\n  // Add token name, e.g. `<img`\n  result += (token.nesting === -1 ? '</' : '<') + token.tag;\n\n  // Encode attributes, e.g. `<img src=\"foo\"`\n  result += this.renderAttrs(token);\n\n  // Add a slash for self-closing tags, e.g. `<img src=\"foo\" /`\n  if (token.nesting === 0 && options.xhtmlOut) {\n    result += ' /';\n  }\n\n  // Check if we need to add a newline after this tag\n  if (token.block) {\n    needLf = true;\n\n    if (token.nesting === 1) {\n      if (idx + 1 < tokens.length) {\n        nextToken = tokens[idx + 1];\n\n        if (nextToken.type === 'inline' || nextToken.hidden) {\n          // Block-level tag containing an inline tag.\n          //\n          needLf = false;\n\n        } else if (nextToken.nesting === -1 && nextToken.tag === token.tag) {\n          // Opening tag + closing tag of the same type. E.g. `<li></li>`.\n          //\n          needLf = false;\n        }\n      }\n    }\n  }\n\n  result += needLf ? '>\\n' : '>';\n\n  return result;\n};\n\n\n/**\n * Renderer.renderInline(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to renter\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * The same as [[Renderer.render]], but for single token of `inline` type.\n **/\nRenderer.prototype.renderInline = function (tokens, options, env) {\n  var type,\n      result = '',\n      rules = this.rules;\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options);\n    }\n  }\n\n  return result;\n};\n\n\n/** internal\n * Renderer.renderInlineAsText(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to renter\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Special kludge for image `alt` attributes to conform CommonMark spec.\n * Don't try to use it! Spec requires to show `alt` content with stripped markup,\n * instead of simple escaping.\n **/\nRenderer.prototype.renderInlineAsText = function (tokens, options, env) {\n  var result = '';\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    if (tokens[i].type === 'text') {\n      result += tokens[i].content;\n    } else if (tokens[i].type === 'image') {\n      result += this.renderInlineAsText(tokens[i].children, options, env);\n    } else if (tokens[i].type === 'softbreak') {\n      result += '\\n';\n    }\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.render(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to renter\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Takes token stream and generates HTML. Probably, you will never need to call\n * this method directly.\n **/\nRenderer.prototype.render = function (tokens, options, env) {\n  var i, len, type,\n      result = '',\n      rules = this.rules;\n\n  for (i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (type === 'inline') {\n      result += this.renderInline(tokens[i].children, options, env);\n    } else if (typeof rules[type] !== 'undefined') {\n      result += rules[tokens[i].type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options, env);\n    }\n  }\n\n  return result;\n};\n\nmodule.exports = Renderer;\n","/**\n * class Ruler\n *\n * Helper class, used by [[MarkdownIt#core]], [[MarkdownIt#block]] and\n * [[MarkdownIt#inline]] to manage sequences of functions (rules):\n *\n * - keep rules in defined order\n * - assign the name to each rule\n * - enable/disable rules\n * - add/replace rules\n * - allow assign rules to additional named chains (in the same)\n * - cacheing lists of active rules\n *\n * You will not need use this class directly until write plugins. For simple\n * rules control use [[MarkdownIt.disable]], [[MarkdownIt.enable]] and\n * [[MarkdownIt.use]].\n **/\n'use strict';\n\n\n/**\n * new Ruler()\n **/\nfunction Ruler() {\n  // List of added rules. Each element is:\n  //\n  // {\n  //   name: XXX,\n  //   enabled: Boolean,\n  //   fn: Function(),\n  //   alt: [ name2, name3 ]\n  // }\n  //\n  this.__rules__ = [];\n\n  // Cached rule chains.\n  //\n  // First level - chain name, '' for default.\n  // Second level - diginal anchor for fast filtering by charcodes.\n  //\n  this.__cache__ = null;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// Helper methods, should not be used directly\n\n\n// Find rule index by name\n//\nRuler.prototype.__find__ = function (name) {\n  for (var i = 0; i < this.__rules__.length; i++) {\n    if (this.__rules__[i].name === name) {\n      return i;\n    }\n  }\n  return -1;\n};\n\n\n// Build rules lookup cache\n//\nRuler.prototype.__compile__ = function () {\n  var self = this;\n  var chains = [ '' ];\n\n  // collect unique names\n  self.__rules__.forEach(function (rule) {\n    if (!rule.enabled) { return; }\n\n    rule.alt.forEach(function (altName) {\n      if (chains.indexOf(altName) < 0) {\n        chains.push(altName);\n      }\n    });\n  });\n\n  self.__cache__ = {};\n\n  chains.forEach(function (chain) {\n    self.__cache__[chain] = [];\n    self.__rules__.forEach(function (rule) {\n      if (!rule.enabled) { return; }\n\n      if (chain && rule.alt.indexOf(chain) < 0) { return; }\n\n      self.__cache__[chain].push(rule.fn);\n    });\n  });\n};\n\n\n/**\n * Ruler.at(name, fn [, options])\n * - name (String): rule name to replace.\n * - fn (Function): new rule function.\n * - options (Object): new rule options (not mandatory).\n *\n * Replace rule by name with new function & options. Throws error if name not\n * found.\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * Replace existing typographer replacement rule with new one:\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.at('replacements', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.at = function (name, fn, options) {\n  var index = this.__find__(name);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + name); }\n\n  this.__rules__[index].fn = fn;\n  this.__rules__[index].alt = opt.alt || [];\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.before(beforeName, ruleName, fn [, options])\n * - beforeName (String): new rule will be added before this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain before one with given name. See also\n * [[Ruler.after]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.block.ruler.before('paragraph', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.before = function (beforeName, ruleName, fn, options) {\n  var index = this.__find__(beforeName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + beforeName); }\n\n  this.__rules__.splice(index, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.after(afterName, ruleName, fn [, options])\n * - afterName (String): new rule will be added after this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain after one with given name. See also\n * [[Ruler.before]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.inline.ruler.after('text', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.after = function (afterName, ruleName, fn, options) {\n  var index = this.__find__(afterName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + afterName); }\n\n  this.__rules__.splice(index + 1, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n/**\n * Ruler.push(ruleName, fn [, options])\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Push new rule to the end of chain. See also\n * [[Ruler.before]], [[Ruler.after]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.push('my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.push = function (ruleName, fn, options) {\n  var opt = options || {};\n\n  this.__rules__.push({\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.enable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to enable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.disable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.enable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and enable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = true;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.enableOnly(list [, ignoreInvalid])\n * - list (String|Array): list of rule names to enable (whitelist).\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names, and disable everything else. If any rule name\n * not found - throw Error. Errors can be disabled by second param.\n *\n * See also [[Ruler.disable]], [[Ruler.enable]].\n **/\nRuler.prototype.enableOnly = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  this.__rules__.forEach(function (rule) { rule.enabled = false; });\n\n  this.enable(list, ignoreInvalid);\n};\n\n\n/**\n * Ruler.disable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Disable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.enable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.disable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and disable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = false;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.getRules(chainName) -> Array\n *\n * Return array of active functions (rules) for given chain name. It analyzes\n * rules configuration, compiles caches if not exists and returns result.\n *\n * Default chain name is `''` (empty string). It can't be skipped. That's\n * done intentionally, to keep signature monomorphic for high speed.\n **/\nRuler.prototype.getRules = function (chainName) {\n  if (this.__cache__ === null) {\n    this.__compile__();\n  }\n\n  // Chain can be empty, if rules disabled. But we still have to return Array.\n  return this.__cache__[chainName] || [];\n};\n\nmodule.exports = Ruler;\n","// Block quotes\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function blockquote(state, startLine, endLine, silent) {\n  var adjustTab,\n      ch,\n      i,\n      initial,\n      l,\n      lastLineEmpty,\n      lines,\n      nextLine,\n      offset,\n      oldBMarks,\n      oldBSCount,\n      oldIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      spaceAfterMarker,\n      terminate,\n      terminatorRules,\n      token,\n      isOutdented,\n      oldLineMax = state.lineMax,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  // check the block quote marker\n  if (state.src.charCodeAt(pos++) !== 0x3E/* > */) { return false; }\n\n  // we know that it's going to be a valid blockquote,\n  // so no point trying to find the end of it in silent mode\n  if (silent) { return true; }\n\n  // set offset past spaces and \">\"\n  initial = offset = state.sCount[startLine] + 1;\n\n  // skip one optional space after '>'\n  if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n    // ' >   test '\n    //     ^ -- position start of line here:\n    pos++;\n    initial++;\n    offset++;\n    adjustTab = false;\n    spaceAfterMarker = true;\n  } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n    spaceAfterMarker = true;\n\n    if ((state.bsCount[startLine] + offset) % 4 === 3) {\n      // '  >\\t  test '\n      //       ^ -- position start of line here (tab has width===1)\n      pos++;\n      initial++;\n      offset++;\n      adjustTab = false;\n    } else {\n      // ' >\\t  test '\n      //    ^ -- position start of line here + shift bsCount slightly\n      //         to make extra space appear\n      adjustTab = true;\n    }\n  } else {\n    spaceAfterMarker = false;\n  }\n\n  oldBMarks = [ state.bMarks[startLine] ];\n  state.bMarks[startLine] = pos;\n\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (isSpace(ch)) {\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[startLine] + (adjustTab ? 1 : 0)) % 4;\n      } else {\n        offset++;\n      }\n    } else {\n      break;\n    }\n\n    pos++;\n  }\n\n  oldBSCount = [ state.bsCount[startLine] ];\n  state.bsCount[startLine] = state.sCount[startLine] + 1 + (spaceAfterMarker ? 1 : 0);\n\n  lastLineEmpty = pos >= max;\n\n  oldSCount = [ state.sCount[startLine] ];\n  state.sCount[startLine] = offset - initial;\n\n  oldTShift = [ state.tShift[startLine] ];\n  state.tShift[startLine] = pos - state.bMarks[startLine];\n\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  oldParentType = state.parentType;\n  state.parentType = 'blockquote';\n\n  // Search the end of the block\n  //\n  // Block ends with either:\n  //  1. an empty line outside:\n  //     ```\n  //     > test\n  //\n  //     ```\n  //  2. an empty line inside:\n  //     ```\n  //     >\n  //     test\n  //     ```\n  //  3. another tag:\n  //     ```\n  //     > test\n  //      - - -\n  //     ```\n  for (nextLine = startLine + 1; nextLine < endLine; nextLine++) {\n    // check if it's outdented, i.e. it's inside list item and indented\n    // less than said list item:\n    //\n    // ```\n    // 1. anything\n    //    > current blockquote\n    // 2. checking this line\n    // ```\n    isOutdented = state.sCount[nextLine] < state.blkIndent;\n\n    pos = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos >= max) {\n      // Case 1: line is not inside the blockquote, and this line is empty.\n      break;\n    }\n\n    if (state.src.charCodeAt(pos++) === 0x3E/* > */ && !isOutdented) {\n      // This line is inside the blockquote.\n\n      // set offset past spaces and \">\"\n      initial = offset = state.sCount[nextLine] + 1;\n\n      // skip one optional space after '>'\n      if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n        // ' >   test '\n        //     ^ -- position start of line here:\n        pos++;\n        initial++;\n        offset++;\n        adjustTab = false;\n        spaceAfterMarker = true;\n      } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n        spaceAfterMarker = true;\n\n        if ((state.bsCount[nextLine] + offset) % 4 === 3) {\n          // '  >\\t  test '\n          //       ^ -- position start of line here (tab has width===1)\n          pos++;\n          initial++;\n          offset++;\n          adjustTab = false;\n        } else {\n          // ' >\\t  test '\n          //    ^ -- position start of line here + shift bsCount slightly\n          //         to make extra space appear\n          adjustTab = true;\n        }\n      } else {\n        spaceAfterMarker = false;\n      }\n\n      oldBMarks.push(state.bMarks[nextLine]);\n      state.bMarks[nextLine] = pos;\n\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n\n        if (isSpace(ch)) {\n          if (ch === 0x09) {\n            offset += 4 - (offset + state.bsCount[nextLine] + (adjustTab ? 1 : 0)) % 4;\n          } else {\n            offset++;\n          }\n        } else {\n          break;\n        }\n\n        pos++;\n      }\n\n      lastLineEmpty = pos >= max;\n\n      oldBSCount.push(state.bsCount[nextLine]);\n      state.bsCount[nextLine] = state.sCount[nextLine] + 1 + (spaceAfterMarker ? 1 : 0);\n\n      oldSCount.push(state.sCount[nextLine]);\n      state.sCount[nextLine] = offset - initial;\n\n      oldTShift.push(state.tShift[nextLine]);\n      state.tShift[nextLine] = pos - state.bMarks[nextLine];\n      continue;\n    }\n\n    // Case 2: line is not inside the blockquote, and the last line was empty.\n    if (lastLineEmpty) { break; }\n\n    // Case 3: another tag found.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      // Quirk to enforce \"hard termination mode\" for paragraphs;\n      // normally if you call `tokenize(state, startLine, nextLine)`,\n      // paragraphs will look below nextLine for paragraph continuation,\n      // but if blockquote is terminated by another tag, they shouldn't\n      state.lineMax = nextLine;\n\n      if (state.blkIndent !== 0) {\n        // state.blkIndent was non-zero, we now set it to zero,\n        // so we need to re-calculate all offsets to appear as\n        // if indent wasn't changed\n        oldBMarks.push(state.bMarks[nextLine]);\n        oldBSCount.push(state.bsCount[nextLine]);\n        oldTShift.push(state.tShift[nextLine]);\n        oldSCount.push(state.sCount[nextLine]);\n        state.sCount[nextLine] -= state.blkIndent;\n      }\n\n      break;\n    }\n\n    oldBMarks.push(state.bMarks[nextLine]);\n    oldBSCount.push(state.bsCount[nextLine]);\n    oldTShift.push(state.tShift[nextLine]);\n    oldSCount.push(state.sCount[nextLine]);\n\n    // A negative indentation means that this is a paragraph continuation\n    //\n    state.sCount[nextLine] = -1;\n  }\n\n  oldIndent = state.blkIndent;\n  state.blkIndent = 0;\n\n  token        = state.push('blockquote_open', 'blockquote', 1);\n  token.markup = '>';\n  token.map    = lines = [ startLine, 0 ];\n\n  state.md.block.tokenize(state, startLine, nextLine);\n\n  token        = state.push('blockquote_close', 'blockquote', -1);\n  token.markup = '>';\n\n  state.lineMax = oldLineMax;\n  state.parentType = oldParentType;\n  lines[1] = state.line;\n\n  // Restore original tShift; this might not be necessary since the parser\n  // has already been here, but just to make sure we can do that.\n  for (i = 0; i < oldTShift.length; i++) {\n    state.bMarks[i + startLine] = oldBMarks[i];\n    state.tShift[i + startLine] = oldTShift[i];\n    state.sCount[i + startLine] = oldSCount[i];\n    state.bsCount[i + startLine] = oldBSCount[i];\n  }\n  state.blkIndent = oldIndent;\n\n  return true;\n};\n","// Code block (4 spaces padded)\n\n'use strict';\n\n\nmodule.exports = function code(state, startLine, endLine/*, silent*/) {\n  var nextLine, last, token;\n\n  if (state.sCount[startLine] - state.blkIndent < 4) { return false; }\n\n  last = nextLine = startLine + 1;\n\n  while (nextLine < endLine) {\n    if (state.isEmpty(nextLine)) {\n      nextLine++;\n      continue;\n    }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      nextLine++;\n      last = nextLine;\n      continue;\n    }\n    break;\n  }\n\n  state.line = last;\n\n  token         = state.push('code_block', 'code', 0);\n  token.content = state.getLines(startLine, last, 4 + state.blkIndent, true);\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","// fences (``` lang, ~~~ lang)\n\n'use strict';\n\n\nmodule.exports = function fence(state, startLine, endLine, silent) {\n  var marker, len, params, nextLine, mem, token, markup,\n      haveEndMarker = false,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (pos + 3 > max) { return false; }\n\n  marker = state.src.charCodeAt(pos);\n\n  if (marker !== 0x7E/* ~ */ && marker !== 0x60 /* ` */) {\n    return false;\n  }\n\n  // scan marker length\n  mem = pos;\n  pos = state.skipChars(pos, marker);\n\n  len = pos - mem;\n\n  if (len < 3) { return false; }\n\n  markup = state.src.slice(mem, pos);\n  params = state.src.slice(pos, max);\n\n  if (marker === 0x60 /* ` */) {\n    if (params.indexOf(String.fromCharCode(marker)) >= 0) {\n      return false;\n    }\n  }\n\n  // Since start is found, we can report success here in validation mode\n  if (silent) { return true; }\n\n  // search end of block\n  nextLine = startLine;\n\n  for (;;) {\n    nextLine++;\n    if (nextLine >= endLine) {\n      // unclosed block should be autoclosed by end of document.\n      // also block seems to be autoclosed by end of parent\n      break;\n    }\n\n    pos = mem = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos < max && state.sCount[nextLine] < state.blkIndent) {\n      // non-empty line with negative indent should stop the list:\n      // - ```\n      //  test\n      break;\n    }\n\n    if (state.src.charCodeAt(pos) !== marker) { continue; }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      // closing fence should be indented less than 4 spaces\n      continue;\n    }\n\n    pos = state.skipChars(pos, marker);\n\n    // closing code fence must be at least as long as the opening one\n    if (pos - mem < len) { continue; }\n\n    // make sure tail has spaces only\n    pos = state.skipSpaces(pos);\n\n    if (pos < max) { continue; }\n\n    haveEndMarker = true;\n    // found!\n    break;\n  }\n\n  // If a fence has heading spaces, they should be removed from its inner block\n  len = state.sCount[startLine];\n\n  state.line = nextLine + (haveEndMarker ? 1 : 0);\n\n  token         = state.push('fence', 'code', 0);\n  token.info    = params;\n  token.content = state.getLines(startLine + 1, nextLine, len, true);\n  token.markup  = markup;\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","// heading (#, ##, ...)\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function heading(state, startLine, endLine, silent) {\n  var ch, level, tmp, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  ch  = state.src.charCodeAt(pos);\n\n  if (ch !== 0x23/* # */ || pos >= max) { return false; }\n\n  // count heading level\n  level = 1;\n  ch = state.src.charCodeAt(++pos);\n  while (ch === 0x23/* # */ && pos < max && level <= 6) {\n    level++;\n    ch = state.src.charCodeAt(++pos);\n  }\n\n  if (level > 6 || (pos < max && !isSpace(ch))) { return false; }\n\n  if (silent) { return true; }\n\n  // Let's cut tails like '    ###  ' from the end of string\n\n  max = state.skipSpacesBack(max, pos);\n  tmp = state.skipCharsBack(max, 0x23, pos); // #\n  if (tmp > pos && isSpace(state.src.charCodeAt(tmp - 1))) {\n    max = tmp;\n  }\n\n  state.line = startLine + 1;\n\n  token        = state.push('heading_open', 'h' + String(level), 1);\n  token.markup = '########'.slice(0, level);\n  token.map    = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = state.src.slice(pos, max).trim();\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token        = state.push('heading_close', 'h' + String(level), -1);\n  token.markup = '########'.slice(0, level);\n\n  return true;\n};\n","// Horizontal rule\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function hr(state, startLine, endLine, silent) {\n  var marker, cnt, ch, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  marker = state.src.charCodeAt(pos++);\n\n  // Check hr marker\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x5F/* _ */) {\n    return false;\n  }\n\n  // markers can be mixed with spaces, but there should be at least 3 of them\n\n  cnt = 1;\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos++);\n    if (ch !== marker && !isSpace(ch)) { return false; }\n    if (ch === marker) { cnt++; }\n  }\n\n  if (cnt < 3) { return false; }\n\n  if (silent) { return true; }\n\n  state.line = startLine + 1;\n\n  token        = state.push('hr', 'hr', 0);\n  token.map    = [ startLine, state.line ];\n  token.markup = Array(cnt + 1).join(String.fromCharCode(marker));\n\n  return true;\n};\n","// HTML block\n\n'use strict';\n\n\nvar block_names = require('../common/html_blocks');\nvar HTML_OPEN_CLOSE_TAG_RE = require('../common/html_re').HTML_OPEN_CLOSE_TAG_RE;\n\n// An array of opening and corresponding closing sequences for html tags,\n// last argument defines whether it can terminate a paragraph or not\n//\nvar HTML_SEQUENCES = [\n  [ /^<(script|pre|style)(?=(\\s|>|$))/i, /<\\/(script|pre|style)>/i, true ],\n  [ /^<!--/,        /-->/,   true ],\n  [ /^<\\?/,         /\\?>/,   true ],\n  [ /^<![A-Z]/,     />/,     true ],\n  [ /^<!\\[CDATA\\[/, /\\]\\]>/, true ],\n  [ new RegExp('^</?(' + block_names.join('|') + ')(?=(\\\\s|/?>|$))', 'i'), /^$/, true ],\n  [ new RegExp(HTML_OPEN_CLOSE_TAG_RE.source + '\\\\s*$'),  /^$/, false ]\n];\n\n\nmodule.exports = function html_block(state, startLine, endLine, silent) {\n  var i, nextLine, token, lineText,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (!state.md.options.html) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  lineText = state.src.slice(pos, max);\n\n  for (i = 0; i < HTML_SEQUENCES.length; i++) {\n    if (HTML_SEQUENCES[i][0].test(lineText)) { break; }\n  }\n\n  if (i === HTML_SEQUENCES.length) { return false; }\n\n  if (silent) {\n    // true if this sequence can be a terminator, false otherwise\n    return HTML_SEQUENCES[i][2];\n  }\n\n  nextLine = startLine + 1;\n\n  // If we are here - we detected HTML block.\n  // Let's roll down till block end.\n  if (!HTML_SEQUENCES[i][1].test(lineText)) {\n    for (; nextLine < endLine; nextLine++) {\n      if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n      lineText = state.src.slice(pos, max);\n\n      if (HTML_SEQUENCES[i][1].test(lineText)) {\n        if (lineText.length !== 0) { nextLine++; }\n        break;\n      }\n    }\n  }\n\n  state.line = nextLine;\n\n  token         = state.push('html_block', '', 0);\n  token.map     = [ startLine, nextLine ];\n  token.content = state.getLines(startLine, nextLine, state.blkIndent, true);\n\n  return true;\n};\n","// lheading (---, ===)\n\n'use strict';\n\n\nmodule.exports = function lheading(state, startLine, endLine/*, silent*/) {\n  var content, terminate, i, l, token, pos, max, level, marker,\n      nextLine = startLine + 1, oldParentType,\n      terminatorRules = state.md.block.ruler.getRules('paragraph');\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph'; // use paragraph to match terminatorRules\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    //\n    // Check for underline in setext header\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n\n      if (pos < max) {\n        marker = state.src.charCodeAt(pos);\n\n        if (marker === 0x2D/* - */ || marker === 0x3D/* = */) {\n          pos = state.skipChars(pos, marker);\n          pos = state.skipSpaces(pos);\n\n          if (pos >= max) {\n            level = (marker === 0x3D/* = */ ? 1 : 2);\n            break;\n          }\n        }\n      }\n    }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  if (!level) {\n    // Didn't find valid underline\n    return false;\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine + 1;\n\n  token          = state.push('heading_open', 'h' + String(level), 1);\n  token.markup   = String.fromCharCode(marker);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line - 1 ];\n  token.children = [];\n\n  token          = state.push('heading_close', 'h' + String(level), -1);\n  token.markup   = String.fromCharCode(marker);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n","// Lists\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\n// Search `[-+*][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipBulletListMarker(state, startLine) {\n  var marker, pos, max, ch;\n\n  pos = state.bMarks[startLine] + state.tShift[startLine];\n  max = state.eMarks[startLine];\n\n  marker = state.src.charCodeAt(pos++);\n  // Check bullet\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x2B/* + */) {\n    return -1;\n  }\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" -test \" - is not a list item\n      return -1;\n    }\n  }\n\n  return pos;\n}\n\n// Search `\\d+[.)][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipOrderedListMarker(state, startLine) {\n  var ch,\n      start = state.bMarks[startLine] + state.tShift[startLine],\n      pos = start,\n      max = state.eMarks[startLine];\n\n  // List marker should have at least 2 chars (digit + dot)\n  if (pos + 1 >= max) { return -1; }\n\n  ch = state.src.charCodeAt(pos++);\n\n  if (ch < 0x30/* 0 */ || ch > 0x39/* 9 */) { return -1; }\n\n  for (;;) {\n    // EOL -> fail\n    if (pos >= max) { return -1; }\n\n    ch = state.src.charCodeAt(pos++);\n\n    if (ch >= 0x30/* 0 */ && ch <= 0x39/* 9 */) {\n\n      // List marker should have no more than 9 digits\n      // (prevents integer overflow in browsers)\n      if (pos - start >= 10) { return -1; }\n\n      continue;\n    }\n\n    // found valid marker\n    if (ch === 0x29/* ) */ || ch === 0x2e/* . */) {\n      break;\n    }\n\n    return -1;\n  }\n\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" 1.test \" - is not a list item\n      return -1;\n    }\n  }\n  return pos;\n}\n\nfunction markTightParagraphs(state, idx) {\n  var i, l,\n      level = state.level + 2;\n\n  for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n      state.tokens[i + 2].hidden = true;\n      state.tokens[i].hidden = true;\n      i += 2;\n    }\n  }\n}\n\n\nmodule.exports = function list(state, startLine, endLine, silent) {\n  var ch,\n      contentStart,\n      i,\n      indent,\n      indentAfterMarker,\n      initial,\n      isOrdered,\n      itemLines,\n      l,\n      listLines,\n      listTokIdx,\n      markerCharCode,\n      markerValue,\n      max,\n      nextLine,\n      offset,\n      oldListIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      oldTight,\n      pos,\n      posAfterMarker,\n      prevEmptyEnd,\n      start,\n      terminate,\n      terminatorRules,\n      token,\n      isTerminatingParagraph = false,\n      tight = true;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  // Special case:\n  //  - item 1\n  //   - item 2\n  //    - item 3\n  //     - item 4\n  //      - this one is a paragraph continuation\n  if (state.listIndent >= 0 &&\n      state.sCount[startLine] - state.listIndent >= 4 &&\n      state.sCount[startLine] < state.blkIndent) {\n    return false;\n  }\n\n  // limit conditions when list can interrupt\n  // a paragraph (validation mode only)\n  if (silent && state.parentType === 'paragraph') {\n    // Next list item should still terminate previous list item;\n    //\n    // This code can fail if plugins use blkIndent as well as lists,\n    // but I hope the spec gets fixed long before that happens.\n    //\n    if (state.tShift[startLine] >= state.blkIndent) {\n      isTerminatingParagraph = true;\n    }\n  }\n\n  // Detect list type and position after marker\n  if ((posAfterMarker = skipOrderedListMarker(state, startLine)) >= 0) {\n    isOrdered = true;\n    start = state.bMarks[startLine] + state.tShift[startLine];\n    markerValue = Number(state.src.substr(start, posAfterMarker - start - 1));\n\n    // If we're starting a new ordered list right after\n    // a paragraph, it should start with 1.\n    if (isTerminatingParagraph && markerValue !== 1) return false;\n\n  } else if ((posAfterMarker = skipBulletListMarker(state, startLine)) >= 0) {\n    isOrdered = false;\n\n  } else {\n    return false;\n  }\n\n  // If we're starting a new unordered list right after\n  // a paragraph, first line should not be empty.\n  if (isTerminatingParagraph) {\n    if (state.skipSpaces(posAfterMarker) >= state.eMarks[startLine]) return false;\n  }\n\n  // We should terminate list on style change. Remember first one to compare.\n  markerCharCode = state.src.charCodeAt(posAfterMarker - 1);\n\n  // For validation mode we can terminate immediately\n  if (silent) { return true; }\n\n  // Start list\n  listTokIdx = state.tokens.length;\n\n  if (isOrdered) {\n    token       = state.push('ordered_list_open', 'ol', 1);\n    if (markerValue !== 1) {\n      token.attrs = [ [ 'start', markerValue ] ];\n    }\n\n  } else {\n    token       = state.push('bullet_list_open', 'ul', 1);\n  }\n\n  token.map    = listLines = [ startLine, 0 ];\n  token.markup = String.fromCharCode(markerCharCode);\n\n  //\n  // Iterate list items\n  //\n\n  nextLine = startLine;\n  prevEmptyEnd = false;\n  terminatorRules = state.md.block.ruler.getRules('list');\n\n  oldParentType = state.parentType;\n  state.parentType = 'list';\n\n  while (nextLine < endLine) {\n    pos = posAfterMarker;\n    max = state.eMarks[nextLine];\n\n    initial = offset = state.sCount[nextLine] + posAfterMarker - (state.bMarks[startLine] + state.tShift[startLine]);\n\n    while (pos < max) {\n      ch = state.src.charCodeAt(pos);\n\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[nextLine]) % 4;\n      } else if (ch === 0x20) {\n        offset++;\n      } else {\n        break;\n      }\n\n      pos++;\n    }\n\n    contentStart = pos;\n\n    if (contentStart >= max) {\n      // trimming space in \"-    \\n  3\" case, indent is 1 here\n      indentAfterMarker = 1;\n    } else {\n      indentAfterMarker = offset - initial;\n    }\n\n    // If we have more than 4 spaces, the indent is 1\n    // (the rest is just indented code block)\n    if (indentAfterMarker > 4) { indentAfterMarker = 1; }\n\n    // \"  -  test\"\n    //  ^^^^^ - calculating total length of this thing\n    indent = initial + indentAfterMarker;\n\n    // Run subparser & write tokens\n    token        = state.push('list_item_open', 'li', 1);\n    token.markup = String.fromCharCode(markerCharCode);\n    token.map    = itemLines = [ startLine, 0 ];\n\n    // change current state, then restore it after parser subcall\n    oldTight = state.tight;\n    oldTShift = state.tShift[startLine];\n    oldSCount = state.sCount[startLine];\n\n    //  - example list\n    // ^ listIndent position will be here\n    //   ^ blkIndent position will be here\n    //\n    oldListIndent = state.listIndent;\n    state.listIndent = state.blkIndent;\n    state.blkIndent = indent;\n\n    state.tight = true;\n    state.tShift[startLine] = contentStart - state.bMarks[startLine];\n    state.sCount[startLine] = offset;\n\n    if (contentStart >= max && state.isEmpty(startLine + 1)) {\n      // workaround for this case\n      // (list item is empty, list terminates before \"foo\"):\n      // ~~~~~~~~\n      //   -\n      //\n      //     foo\n      // ~~~~~~~~\n      state.line = Math.min(state.line + 2, endLine);\n    } else {\n      state.md.block.tokenize(state, startLine, endLine, true);\n    }\n\n    // If any of list item is tight, mark list as tight\n    if (!state.tight || prevEmptyEnd) {\n      tight = false;\n    }\n    // Item become loose if finish with empty line,\n    // but we should filter last element, because it means list finish\n    prevEmptyEnd = (state.line - startLine) > 1 && state.isEmpty(state.line - 1);\n\n    state.blkIndent = state.listIndent;\n    state.listIndent = oldListIndent;\n    state.tShift[startLine] = oldTShift;\n    state.sCount[startLine] = oldSCount;\n    state.tight = oldTight;\n\n    token        = state.push('list_item_close', 'li', -1);\n    token.markup = String.fromCharCode(markerCharCode);\n\n    nextLine = startLine = state.line;\n    itemLines[1] = nextLine;\n    contentStart = state.bMarks[startLine];\n\n    if (nextLine >= endLine) { break; }\n\n    //\n    // Try to check if list is terminated or continued.\n    //\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    // if it's indented more than 3 spaces, it should be a code block\n    if (state.sCount[startLine] - state.blkIndent >= 4) { break; }\n\n    // fail if terminating block found\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n\n    // fail if list has another type\n    if (isOrdered) {\n      posAfterMarker = skipOrderedListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n    } else {\n      posAfterMarker = skipBulletListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n    }\n\n    if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) { break; }\n  }\n\n  // Finalize list\n  if (isOrdered) {\n    token = state.push('ordered_list_close', 'ol', -1);\n  } else {\n    token = state.push('bullet_list_close', 'ul', -1);\n  }\n  token.markup = String.fromCharCode(markerCharCode);\n\n  listLines[1] = nextLine;\n  state.line = nextLine;\n\n  state.parentType = oldParentType;\n\n  // mark paragraphs tight if needed\n  if (tight) {\n    markTightParagraphs(state, listTokIdx);\n  }\n\n  return true;\n};\n","// Paragraph\n\n'use strict';\n\n\nmodule.exports = function paragraph(state, startLine/*, endLine*/) {\n  var content, terminate, i, l, token, oldParentType,\n      nextLine = startLine + 1,\n      terminatorRules = state.md.block.ruler.getRules('paragraph'),\n      endLine = state.lineMax;\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph';\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine;\n\n  token          = state.push('paragraph_open', 'p', 1);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token          = state.push('paragraph_close', 'p', -1);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n","'use strict';\n\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function reference(state, startLine, _endLine, silent) {\n  var ch,\n      destEndPos,\n      destEndLineNo,\n      endLine,\n      href,\n      i,\n      l,\n      label,\n      labelEnd,\n      oldParentType,\n      res,\n      start,\n      str,\n      terminate,\n      terminatorRules,\n      title,\n      lines = 0,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine],\n      nextLine = startLine + 1;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x5B/* [ */) { return false; }\n\n  // Simple check to quickly interrupt scan on [link](url) at the start of line.\n  // Can be useful on practice: https://github.com/markdown-it/markdown-it/issues/54\n  while (++pos < max) {\n    if (state.src.charCodeAt(pos) === 0x5D /* ] */ &&\n        state.src.charCodeAt(pos - 1) !== 0x5C/* \\ */) {\n      if (pos + 1 === max) { return false; }\n      if (state.src.charCodeAt(pos + 1) !== 0x3A/* : */) { return false; }\n      break;\n    }\n  }\n\n  endLine = state.lineMax;\n\n  // jump line-by-line until empty one or EOF\n  terminatorRules = state.md.block.ruler.getRules('reference');\n\n  oldParentType = state.parentType;\n  state.parentType = 'reference';\n\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  str = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n  max = str.length;\n\n  for (pos = 1; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x5B /* [ */) {\n      return false;\n    } else if (ch === 0x5D /* ] */) {\n      labelEnd = pos;\n      break;\n    } else if (ch === 0x0A /* \\n */) {\n      lines++;\n    } else if (ch === 0x5C /* \\ */) {\n      pos++;\n      if (pos < max && str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n  }\n\n  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A/* : */) { return false; }\n\n  // [label]:   destination   'title'\n  //         ^^^ skip optional whitespace here\n  for (pos = labelEnd + 2; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //            ^^^^^^^^^^^ parse this\n  res = state.md.helpers.parseLinkDestination(str, pos, max);\n  if (!res.ok) { return false; }\n\n  href = state.md.normalizeLink(res.str);\n  if (!state.md.validateLink(href)) { return false; }\n\n  pos = res.pos;\n  lines += res.lines;\n\n  // save cursor state, we could require to rollback later\n  destEndPos = pos;\n  destEndLineNo = lines;\n\n  // [label]:   destination   'title'\n  //                       ^^^ skipping those spaces\n  start = pos;\n  for (; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //                          ^^^^^^^ parse this\n  res = state.md.helpers.parseLinkTitle(str, pos, max);\n  if (pos < max && start !== pos && res.ok) {\n    title = res.str;\n    pos = res.pos;\n    lines += res.lines;\n  } else {\n    title = '';\n    pos = destEndPos;\n    lines = destEndLineNo;\n  }\n\n  // skip trailing spaces until the rest of the line\n  while (pos < max) {\n    ch = str.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n    pos++;\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    if (title) {\n      // garbage at the end of the line after title,\n      // but it could still be a valid reference if we roll back\n      title = '';\n      pos = destEndPos;\n      lines = destEndLineNo;\n      while (pos < max) {\n        ch = str.charCodeAt(pos);\n        if (!isSpace(ch)) { break; }\n        pos++;\n      }\n    }\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    // garbage at the end of the line\n    return false;\n  }\n\n  label = normalizeReference(str.slice(1, labelEnd));\n  if (!label) {\n    // CommonMark 0.20 disallows empty labels\n    return false;\n  }\n\n  // Reference can not terminate anything. This check is for safety only.\n  /*istanbul ignore if*/\n  if (silent) { return true; }\n\n  if (typeof state.env.references === 'undefined') {\n    state.env.references = {};\n  }\n  if (typeof state.env.references[label] === 'undefined') {\n    state.env.references[label] = { title: title, href: href };\n  }\n\n  state.parentType = oldParentType;\n\n  state.line = startLine + lines + 1;\n  return true;\n};\n","// Parser state class\n\n'use strict';\n\nvar Token = require('../token');\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction StateBlock(src, md, env, tokens) {\n  var ch, s, start, pos, len, indent, offset, indent_found;\n\n  this.src = src;\n\n  // link to parser instance\n  this.md     = md;\n\n  this.env = env;\n\n  //\n  // Internal state vartiables\n  //\n\n  this.tokens = tokens;\n\n  this.bMarks = [];  // line begin offsets for fast jumps\n  this.eMarks = [];  // line end offsets for fast jumps\n  this.tShift = [];  // offsets of the first non-space characters (tabs not expanded)\n  this.sCount = [];  // indents for each line (tabs expanded)\n\n  // An amount of virtual spaces (tabs expanded) between beginning\n  // of each line (bMarks) and real beginning of that line.\n  //\n  // It exists only as a hack because blockquotes override bMarks\n  // losing information in the process.\n  //\n  // It's used only when expanding tabs, you can think about it as\n  // an initial tab length, e.g. bsCount=21 applied to string `\\t123`\n  // means first tab should be expanded to 4-21%4 === 3 spaces.\n  //\n  this.bsCount = [];\n\n  // block parser variables\n  this.blkIndent  = 0; // required block content indent (for example, if we are\n                       // inside a list, it would be positioned after list marker)\n  this.line       = 0; // line index in src\n  this.lineMax    = 0; // lines count\n  this.tight      = false;  // loose/tight mode for lists\n  this.ddIndent   = -1; // indent of the current dd block (-1 if there isn't any)\n  this.listIndent = -1; // indent of the current list block (-1 if there isn't any)\n\n  // can be 'blockquote', 'list', 'root', 'paragraph' or 'reference'\n  // used in lists to determine if they interrupt a paragraph\n  this.parentType = 'root';\n\n  this.level = 0;\n\n  // renderer\n  this.result = '';\n\n  // Create caches\n  // Generate markers.\n  s = this.src;\n  indent_found = false;\n\n  for (start = pos = indent = offset = 0, len = s.length; pos < len; pos++) {\n    ch = s.charCodeAt(pos);\n\n    if (!indent_found) {\n      if (isSpace(ch)) {\n        indent++;\n\n        if (ch === 0x09) {\n          offset += 4 - offset % 4;\n        } else {\n          offset++;\n        }\n        continue;\n      } else {\n        indent_found = true;\n      }\n    }\n\n    if (ch === 0x0A || pos === len - 1) {\n      if (ch !== 0x0A) { pos++; }\n      this.bMarks.push(start);\n      this.eMarks.push(pos);\n      this.tShift.push(indent);\n      this.sCount.push(offset);\n      this.bsCount.push(0);\n\n      indent_found = false;\n      indent = 0;\n      offset = 0;\n      start = pos + 1;\n    }\n  }\n\n  // Push fake entry to simplify cache bounds checks\n  this.bMarks.push(s.length);\n  this.eMarks.push(s.length);\n  this.tShift.push(0);\n  this.sCount.push(0);\n  this.bsCount.push(0);\n\n  this.lineMax = this.bMarks.length - 1; // don't count last fake line\n}\n\n// Push new token to \"stream\".\n//\nStateBlock.prototype.push = function (type, tag, nesting) {\n  var token = new Token(type, tag, nesting);\n  token.block = true;\n\n  if (nesting < 0) this.level--; // closing tag\n  token.level = this.level;\n  if (nesting > 0) this.level++; // opening tag\n\n  this.tokens.push(token);\n  return token;\n};\n\nStateBlock.prototype.isEmpty = function isEmpty(line) {\n  return this.bMarks[line] + this.tShift[line] >= this.eMarks[line];\n};\n\nStateBlock.prototype.skipEmptyLines = function skipEmptyLines(from) {\n  for (var max = this.lineMax; from < max; from++) {\n    if (this.bMarks[from] + this.tShift[from] < this.eMarks[from]) {\n      break;\n    }\n  }\n  return from;\n};\n\n// Skip spaces from given position.\nStateBlock.prototype.skipSpaces = function skipSpaces(pos) {\n  var ch;\n\n  for (var max = this.src.length; pos < max; pos++) {\n    ch = this.src.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n  }\n  return pos;\n};\n\n// Skip spaces from given position in reverse.\nStateBlock.prototype.skipSpacesBack = function skipSpacesBack(pos, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (!isSpace(this.src.charCodeAt(--pos))) { return pos + 1; }\n  }\n  return pos;\n};\n\n// Skip char codes from given position\nStateBlock.prototype.skipChars = function skipChars(pos, code) {\n  for (var max = this.src.length; pos < max; pos++) {\n    if (this.src.charCodeAt(pos) !== code) { break; }\n  }\n  return pos;\n};\n\n// Skip char codes reverse from given position - 1\nStateBlock.prototype.skipCharsBack = function skipCharsBack(pos, code, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (code !== this.src.charCodeAt(--pos)) { return pos + 1; }\n  }\n  return pos;\n};\n\n// cut lines range from source.\nStateBlock.prototype.getLines = function getLines(begin, end, indent, keepLastLF) {\n  var i, lineIndent, ch, first, last, queue, lineStart,\n      line = begin;\n\n  if (begin >= end) {\n    return '';\n  }\n\n  queue = new Array(end - begin);\n\n  for (i = 0; line < end; line++, i++) {\n    lineIndent = 0;\n    lineStart = first = this.bMarks[line];\n\n    if (line + 1 < end || keepLastLF) {\n      // No need for bounds check because we have fake entry on tail.\n      last = this.eMarks[line] + 1;\n    } else {\n      last = this.eMarks[line];\n    }\n\n    while (first < last && lineIndent < indent) {\n      ch = this.src.charCodeAt(first);\n\n      if (isSpace(ch)) {\n        if (ch === 0x09) {\n          lineIndent += 4 - (lineIndent + this.bsCount[line]) % 4;\n        } else {\n          lineIndent++;\n        }\n      } else if (first - lineStart < this.tShift[line]) {\n        // patched tShift masked characters to look like spaces (blockquotes, list markers)\n        lineIndent++;\n      } else {\n        break;\n      }\n\n      first++;\n    }\n\n    if (lineIndent > indent) {\n      // partially expanding tabs in code blocks, e.g '\\t\\tfoobar'\n      // with indent=2 becomes '  \\tfoobar'\n      queue[i] = new Array(lineIndent - indent + 1).join(' ') + this.src.slice(first, last);\n    } else {\n      queue[i] = this.src.slice(first, last);\n    }\n  }\n\n  return queue.join('');\n};\n\n// re-export Token class to use in block rules\nStateBlock.prototype.Token = Token;\n\n\nmodule.exports = StateBlock;\n","// GFM table, https://github.github.com/gfm/#tables-extension-\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction getLine(state, line) {\n  var pos = state.bMarks[line] + state.tShift[line],\n      max = state.eMarks[line];\n\n  return state.src.substr(pos, max - pos);\n}\n\nfunction escapedSplit(str) {\n  var result = [],\n      pos = 0,\n      max = str.length,\n      ch,\n      isEscaped = false,\n      lastPos = 0,\n      current = '';\n\n  ch  = str.charCodeAt(pos);\n\n  while (pos < max) {\n    if (ch === 0x7c/* | */) {\n      if (!isEscaped) {\n        // pipe separating cells, '|'\n        result.push(current + str.substring(lastPos, pos));\n        current = '';\n        lastPos = pos + 1;\n      } else {\n        // escaped pipe, '\\|'\n        current += str.substring(lastPos, pos - 1);\n        lastPos = pos;\n      }\n    }\n\n    isEscaped = (ch === 0x5c/* \\ */);\n    pos++;\n\n    ch = str.charCodeAt(pos);\n  }\n\n  result.push(current + str.substring(lastPos));\n\n  return result;\n}\n\n\nmodule.exports = function table(state, startLine, endLine, silent) {\n  var ch, lineText, pos, i, l, nextLine, columns, columnCount, token,\n      aligns, t, tableLines, tbodyLines, oldParentType, terminate,\n      terminatorRules, firstCh, secondCh;\n\n  // should have at least two lines\n  if (startLine + 2 > endLine) { return false; }\n\n  nextLine = startLine + 1;\n\n  if (state.sCount[nextLine] < state.blkIndent) { return false; }\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[nextLine] - state.blkIndent >= 4) { return false; }\n\n  // first character of the second line should be '|', '-', ':',\n  // and no other characters are allowed but spaces;\n  // basically, this is the equivalent of /^[-:|][-:|\\s]*$/ regexp\n\n  pos = state.bMarks[nextLine] + state.tShift[nextLine];\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  firstCh = state.src.charCodeAt(pos++);\n  if (firstCh !== 0x7C/* | */ && firstCh !== 0x2D/* - */ && firstCh !== 0x3A/* : */) { return false; }\n\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  secondCh = state.src.charCodeAt(pos++);\n  if (secondCh !== 0x7C/* | */ && secondCh !== 0x2D/* - */ && secondCh !== 0x3A/* : */ && !isSpace(secondCh)) {\n    return false;\n  }\n\n  // if first character is '-', then second character must not be a space\n  // (due to parsing ambiguity with list)\n  if (firstCh === 0x2D/* - */ && isSpace(secondCh)) { return false; }\n\n  while (pos < state.eMarks[nextLine]) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch !== 0x7C/* | */ && ch !== 0x2D/* - */ && ch !== 0x3A/* : */ && !isSpace(ch)) { return false; }\n\n    pos++;\n  }\n\n  lineText = getLine(state, startLine + 1);\n\n  columns = lineText.split('|');\n  aligns = [];\n  for (i = 0; i < columns.length; i++) {\n    t = columns[i].trim();\n    if (!t) {\n      // allow empty columns before and after table, but not in between columns;\n      // e.g. allow ` |---| `, disallow ` ---||--- `\n      if (i === 0 || i === columns.length - 1) {\n        continue;\n      } else {\n        return false;\n      }\n    }\n\n    if (!/^:?-+:?$/.test(t)) { return false; }\n    if (t.charCodeAt(t.length - 1) === 0x3A/* : */) {\n      aligns.push(t.charCodeAt(0) === 0x3A/* : */ ? 'center' : 'right');\n    } else if (t.charCodeAt(0) === 0x3A/* : */) {\n      aligns.push('left');\n    } else {\n      aligns.push('');\n    }\n  }\n\n  lineText = getLine(state, startLine).trim();\n  if (lineText.indexOf('|') === -1) { return false; }\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n  columns = escapedSplit(lineText);\n  if (columns.length && columns[0] === '') columns.shift();\n  if (columns.length && columns[columns.length - 1] === '') columns.pop();\n\n  // header row will define an amount of columns in the entire table,\n  // and align row should be exactly the same (the rest of the rows can differ)\n  columnCount = columns.length;\n  if (columnCount === 0 || columnCount !== aligns.length) { return false; }\n\n  if (silent) { return true; }\n\n  oldParentType = state.parentType;\n  state.parentType = 'table';\n\n  // use 'blockquote' lists for termination because it's\n  // the most similar to tables\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  token     = state.push('table_open', 'table', 1);\n  token.map = tableLines = [ startLine, 0 ];\n\n  token     = state.push('thead_open', 'thead', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  token     = state.push('tr_open', 'tr', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  for (i = 0; i < columns.length; i++) {\n    token          = state.push('th_open', 'th', 1);\n    if (aligns[i]) {\n      token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n    }\n\n    token          = state.push('inline', '', 0);\n    token.content  = columns[i].trim();\n    token.children = [];\n\n    token          = state.push('th_close', 'th', -1);\n  }\n\n  token     = state.push('tr_close', 'tr', -1);\n  token     = state.push('thead_close', 'thead', -1);\n\n  for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) { break; }\n    lineText = getLine(state, nextLine).trim();\n    if (!lineText) { break; }\n    if (state.sCount[nextLine] - state.blkIndent >= 4) { break; }\n    columns = escapedSplit(lineText);\n    if (columns.length && columns[0] === '') columns.shift();\n    if (columns.length && columns[columns.length - 1] === '') columns.pop();\n\n    if (nextLine === startLine + 2) {\n      token     = state.push('tbody_open', 'tbody', 1);\n      token.map = tbodyLines = [ startLine + 2, 0 ];\n    }\n\n    token     = state.push('tr_open', 'tr', 1);\n    token.map = [ nextLine, nextLine + 1 ];\n\n    for (i = 0; i < columnCount; i++) {\n      token          = state.push('td_open', 'td', 1);\n      if (aligns[i]) {\n        token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n      }\n\n      token          = state.push('inline', '', 0);\n      token.content  = columns[i] ? columns[i].trim() : '';\n      token.children = [];\n\n      token          = state.push('td_close', 'td', -1);\n    }\n    token = state.push('tr_close', 'tr', -1);\n  }\n\n  if (tbodyLines) {\n    token = state.push('tbody_close', 'tbody', -1);\n    tbodyLines[1] = nextLine;\n  }\n\n  token = state.push('table_close', 'table', -1);\n  tableLines[1] = nextLine;\n\n  state.parentType = oldParentType;\n  state.line = nextLine;\n  return true;\n};\n","'use strict';\n\n\nmodule.exports = function block(state) {\n  var token;\n\n  if (state.inlineMode) {\n    token          = new state.Token('inline', '', 0);\n    token.content  = state.src;\n    token.map      = [ 0, 1 ];\n    token.children = [];\n    state.tokens.push(token);\n  } else {\n    state.md.block.parse(state.src, state.md, state.env, state.tokens);\n  }\n};\n","'use strict';\n\nmodule.exports = function inline(state) {\n  var tokens = state.tokens, tok, i, l;\n\n  // Parse inlines\n  for (i = 0, l = tokens.length; i < l; i++) {\n    tok = tokens[i];\n    if (tok.type === 'inline') {\n      state.md.inline.parse(tok.content, state.md, state.env, tok.children);\n    }\n  }\n};\n","// Replace link-like texts with link nodes.\n//\n// Currently restricted by `md.validateLink()` to http/https/ftp\n//\n'use strict';\n\n\nvar arrayReplaceAt = require('../common/utils').arrayReplaceAt;\n\n\nfunction isLinkOpen(str) {\n  return /^<a[>\\s]/i.test(str);\n}\nfunction isLinkClose(str) {\n  return /^<\\/a\\s*>/i.test(str);\n}\n\n\nmodule.exports = function linkify(state) {\n  var i, j, l, tokens, token, currentToken, nodes, ln, text, pos, lastPos,\n      level, htmlLinkLevel, url, fullUrl, urlText,\n      blockTokens = state.tokens,\n      links;\n\n  if (!state.md.options.linkify) { return; }\n\n  for (j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline' ||\n        !state.md.linkify.pretest(blockTokens[j].content)) {\n      continue;\n    }\n\n    tokens = blockTokens[j].children;\n\n    htmlLinkLevel = 0;\n\n    // We scan from the end, to keep position when new tags added.\n    // Use reversed logic in links start/end match\n    for (i = tokens.length - 1; i >= 0; i--) {\n      currentToken = tokens[i];\n\n      // Skip content of markdown links\n      if (currentToken.type === 'link_close') {\n        i--;\n        while (tokens[i].level !== currentToken.level && tokens[i].type !== 'link_open') {\n          i--;\n        }\n        continue;\n      }\n\n      // Skip content of html tag links\n      if (currentToken.type === 'html_inline') {\n        if (isLinkOpen(currentToken.content) && htmlLinkLevel > 0) {\n          htmlLinkLevel--;\n        }\n        if (isLinkClose(currentToken.content)) {\n          htmlLinkLevel++;\n        }\n      }\n      if (htmlLinkLevel > 0) { continue; }\n\n      if (currentToken.type === 'text' && state.md.linkify.test(currentToken.content)) {\n\n        text = currentToken.content;\n        links = state.md.linkify.match(text);\n\n        // Now split string to nodes\n        nodes = [];\n        level = currentToken.level;\n        lastPos = 0;\n\n        for (ln = 0; ln < links.length; ln++) {\n\n          url = links[ln].url;\n          fullUrl = state.md.normalizeLink(url);\n          if (!state.md.validateLink(fullUrl)) { continue; }\n\n          urlText = links[ln].text;\n\n          // Linkifier might send raw hostnames like \"example.com\", where url\n          // starts with domain name. So we prepend http:// in those cases,\n          // and remove it afterwards.\n          //\n          if (!links[ln].schema) {\n            urlText = state.md.normalizeLinkText('http://' + urlText).replace(/^http:\\/\\//, '');\n          } else if (links[ln].schema === 'mailto:' && !/^mailto:/i.test(urlText)) {\n            urlText = state.md.normalizeLinkText('mailto:' + urlText).replace(/^mailto:/, '');\n          } else {\n            urlText = state.md.normalizeLinkText(urlText);\n          }\n\n          pos = links[ln].index;\n\n          if (pos > lastPos) {\n            token         = new state.Token('text', '', 0);\n            token.content = text.slice(lastPos, pos);\n            token.level   = level;\n            nodes.push(token);\n          }\n\n          token         = new state.Token('link_open', 'a', 1);\n          token.attrs   = [ [ 'href', fullUrl ] ];\n          token.level   = level++;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          token         = new state.Token('text', '', 0);\n          token.content = urlText;\n          token.level   = level;\n          nodes.push(token);\n\n          token         = new state.Token('link_close', 'a', -1);\n          token.level   = --level;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          lastPos = links[ln].lastIndex;\n        }\n        if (lastPos < text.length) {\n          token         = new state.Token('text', '', 0);\n          token.content = text.slice(lastPos);\n          token.level   = level;\n          nodes.push(token);\n        }\n\n        // replace current node\n        blockTokens[j].children = tokens = arrayReplaceAt(tokens, i, nodes);\n      }\n    }\n  }\n};\n","// Normalize input string\n\n'use strict';\n\n\n// https://spec.commonmark.org/0.29/#line-ending\nvar NEWLINES_RE  = /\\r\\n?|\\n/g;\nvar NULL_RE      = /\\0/g;\n\n\nmodule.exports = function normalize(state) {\n  var str;\n\n  // Normalize newlines\n  str = state.src.replace(NEWLINES_RE, '\\n');\n\n  // Replace NULL characters\n  str = str.replace(NULL_RE, '\\uFFFD');\n\n  state.src = str;\n};\n","// Simple typographic replacements\n//\n// (c) (C) → ©\n// (tm) (TM) → ™\n// (r) (R) → ®\n// +- → ±\n// (p) (P) -> §\n// ... → … (also ?.... → ?.., !.... → !..)\n// ???????? → ???, !!!!! → !!!, `,,` → `,`\n// -- → &ndash;, --- → &mdash;\n//\n'use strict';\n\n// TODO:\n// - fractionals 1/2, 1/4, 3/4 -> ½, ¼, ¾\n// - miltiplication 2 x 4 -> 2 × 4\n\nvar RARE_RE = /\\+-|\\.\\.|\\?\\?\\?\\?|!!!!|,,|--/;\n\n// Workaround for phantomjs - need regex without /g flag,\n// or root check will fail every second time\nvar SCOPED_ABBR_TEST_RE = /\\((c|tm|r|p)\\)/i;\n\nvar SCOPED_ABBR_RE = /\\((c|tm|r|p)\\)/ig;\nvar SCOPED_ABBR = {\n  c: '©',\n  r: '®',\n  p: '§',\n  tm: '™'\n};\n\nfunction replaceFn(match, name) {\n  return SCOPED_ABBR[name.toLowerCase()];\n}\n\nfunction replace_scoped(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      token.content = token.content.replace(SCOPED_ABBR_RE, replaceFn);\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\nfunction replace_rare(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      if (RARE_RE.test(token.content)) {\n        token.content = token.content\n          .replace(/\\+-/g, '±')\n          // .., ..., ....... -> …\n          // but ?..... & !..... -> ?.. & !..\n          .replace(/\\.{2,}/g, '…').replace(/([?!])…/g, '$1..')\n          .replace(/([?!]){4,}/g, '$1$1$1').replace(/,{2,}/g, ',')\n          // em-dash\n          .replace(/(^|[^-])---(?=[^-]|$)/mg, '$1\\u2014')\n          // en-dash\n          .replace(/(^|\\s)--(?=\\s|$)/mg, '$1\\u2013')\n          .replace(/(^|[^-\\s])--(?=[^-\\s]|$)/mg, '$1\\u2013');\n      }\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\n\nmodule.exports = function replace(state) {\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline') { continue; }\n\n    if (SCOPED_ABBR_TEST_RE.test(state.tokens[blkIdx].content)) {\n      replace_scoped(state.tokens[blkIdx].children);\n    }\n\n    if (RARE_RE.test(state.tokens[blkIdx].content)) {\n      replace_rare(state.tokens[blkIdx].children);\n    }\n\n  }\n};\n","// Convert straight quotation marks to typographic ones\n//\n'use strict';\n\n\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\nvar QUOTE_TEST_RE = /['\"]/;\nvar QUOTE_RE = /['\"]/g;\nvar APOSTROPHE = '\\u2019'; /* ’ */\n\n\nfunction replaceAt(str, index, ch) {\n  return str.substr(0, index) + ch + str.substr(index + 1);\n}\n\nfunction process_inlines(tokens, state) {\n  var i, token, text, t, pos, max, thisLevel, item, lastChar, nextChar,\n      isLastPunctChar, isNextPunctChar, isLastWhiteSpace, isNextWhiteSpace,\n      canOpen, canClose, j, isSingle, stack, openQuote, closeQuote;\n\n  stack = [];\n\n  for (i = 0; i < tokens.length; i++) {\n    token = tokens[i];\n\n    thisLevel = tokens[i].level;\n\n    for (j = stack.length - 1; j >= 0; j--) {\n      if (stack[j].level <= thisLevel) { break; }\n    }\n    stack.length = j + 1;\n\n    if (token.type !== 'text') { continue; }\n\n    text = token.content;\n    pos = 0;\n    max = text.length;\n\n    /*eslint no-labels:0,block-scoped-var:0*/\n    OUTER:\n    while (pos < max) {\n      QUOTE_RE.lastIndex = pos;\n      t = QUOTE_RE.exec(text);\n      if (!t) { break; }\n\n      canOpen = canClose = true;\n      pos = t.index + 1;\n      isSingle = (t[0] === \"'\");\n\n      // Find previous character,\n      // default to space if it's the beginning of the line\n      //\n      lastChar = 0x20;\n\n      if (t.index - 1 >= 0) {\n        lastChar = text.charCodeAt(t.index - 1);\n      } else {\n        for (j = i - 1; j >= 0; j--) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // lastChar defaults to 0x20\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          lastChar = tokens[j].content.charCodeAt(tokens[j].content.length - 1);\n          break;\n        }\n      }\n\n      // Find next character,\n      // default to space if it's the end of the line\n      //\n      nextChar = 0x20;\n\n      if (pos < max) {\n        nextChar = text.charCodeAt(pos);\n      } else {\n        for (j = i + 1; j < tokens.length; j++) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // nextChar defaults to 0x20\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          nextChar = tokens[j].content.charCodeAt(0);\n          break;\n        }\n      }\n\n      isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n      isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n      isLastWhiteSpace = isWhiteSpace(lastChar);\n      isNextWhiteSpace = isWhiteSpace(nextChar);\n\n      if (isNextWhiteSpace) {\n        canOpen = false;\n      } else if (isNextPunctChar) {\n        if (!(isLastWhiteSpace || isLastPunctChar)) {\n          canOpen = false;\n        }\n      }\n\n      if (isLastWhiteSpace) {\n        canClose = false;\n      } else if (isLastPunctChar) {\n        if (!(isNextWhiteSpace || isNextPunctChar)) {\n          canClose = false;\n        }\n      }\n\n      if (nextChar === 0x22 /* \" */ && t[0] === '\"') {\n        if (lastChar >= 0x30 /* 0 */ && lastChar <= 0x39 /* 9 */) {\n          // special case: 1\"\" - count first quote as an inch\n          canClose = canOpen = false;\n        }\n      }\n\n      if (canOpen && canClose) {\n        // Replace quotes in the middle of punctuation sequence, but not\n        // in the middle of the words, i.e.:\n        //\n        // 1. foo \" bar \" baz - not replaced\n        // 2. foo-\"-bar-\"-baz - replaced\n        // 3. foo\"bar\"baz     - not replaced\n        //\n        canOpen = isLastPunctChar;\n        canClose = isNextPunctChar;\n      }\n\n      if (!canOpen && !canClose) {\n        // middle of word\n        if (isSingle) {\n          token.content = replaceAt(token.content, t.index, APOSTROPHE);\n        }\n        continue;\n      }\n\n      if (canClose) {\n        // this could be a closing quote, rewind the stack to get a match\n        for (j = stack.length - 1; j >= 0; j--) {\n          item = stack[j];\n          if (stack[j].level < thisLevel) { break; }\n          if (item.single === isSingle && stack[j].level === thisLevel) {\n            item = stack[j];\n\n            if (isSingle) {\n              openQuote = state.md.options.quotes[2];\n              closeQuote = state.md.options.quotes[3];\n            } else {\n              openQuote = state.md.options.quotes[0];\n              closeQuote = state.md.options.quotes[1];\n            }\n\n            // replace token.content *before* tokens[item.token].content,\n            // because, if they are pointing at the same token, replaceAt\n            // could mess up indices when quote length != 1\n            token.content = replaceAt(token.content, t.index, closeQuote);\n            tokens[item.token].content = replaceAt(\n              tokens[item.token].content, item.pos, openQuote);\n\n            pos += closeQuote.length - 1;\n            if (item.token === i) { pos += openQuote.length - 1; }\n\n            text = token.content;\n            max = text.length;\n\n            stack.length = j;\n            continue OUTER;\n          }\n        }\n      }\n\n      if (canOpen) {\n        stack.push({\n          token: i,\n          pos: t.index,\n          single: isSingle,\n          level: thisLevel\n        });\n      } else if (canClose && isSingle) {\n        token.content = replaceAt(token.content, t.index, APOSTROPHE);\n      }\n    }\n  }\n}\n\n\nmodule.exports = function smartquotes(state) {\n  /*eslint max-depth:0*/\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline' ||\n        !QUOTE_TEST_RE.test(state.tokens[blkIdx].content)) {\n      continue;\n    }\n\n    process_inlines(state.tokens[blkIdx].children, state);\n  }\n};\n","// Core state object\n//\n'use strict';\n\nvar Token = require('../token');\n\n\nfunction StateCore(src, md, env) {\n  this.src = src;\n  this.env = env;\n  this.tokens = [];\n  this.inlineMode = false;\n  this.md = md; // link to parser instance\n}\n\n// re-export Token class to use in core rules\nStateCore.prototype.Token = Token;\n\n\nmodule.exports = StateCore;\n","// Process autolinks '<protocol:...>'\n\n'use strict';\n\n\n/*eslint max-len:0*/\nvar EMAIL_RE    = /^([a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)$/;\nvar AUTOLINK_RE = /^([a-zA-Z][a-zA-Z0-9+.\\-]{1,31}):([^<>\\x00-\\x20]*)$/;\n\n\nmodule.exports = function autolink(state, silent) {\n  var url, fullUrl, token, ch, start, max,\n      pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  start = state.pos;\n  max = state.posMax;\n\n  for (;;) {\n    if (++pos >= max) return false;\n\n    ch = state.src.charCodeAt(pos);\n\n    if (ch === 0x3C /* < */) return false;\n    if (ch === 0x3E /* > */) break;\n  }\n\n  url = state.src.slice(start + 1, pos);\n\n  if (AUTOLINK_RE.test(url)) {\n    fullUrl = state.md.normalizeLink(url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  if (EMAIL_RE.test(url)) {\n    fullUrl = state.md.normalizeLink('mailto:' + url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  return false;\n};\n","// Parse backticks\n\n'use strict';\n\n\nmodule.exports = function backtick(state, silent) {\n  var start, max, marker, token, matchStart, matchEnd, openerLength, closerLength,\n      pos = state.pos,\n      ch = state.src.charCodeAt(pos);\n\n  if (ch !== 0x60/* ` */) { return false; }\n\n  start = pos;\n  pos++;\n  max = state.posMax;\n\n  // scan marker length\n  while (pos < max && state.src.charCodeAt(pos) === 0x60/* ` */) { pos++; }\n\n  marker = state.src.slice(start, pos);\n  openerLength = marker.length;\n\n  if (state.backticksScanned && (state.backticks[openerLength] || 0) <= start) {\n    if (!silent) state.pending += marker;\n    state.pos += openerLength;\n    return true;\n  }\n\n  matchStart = matchEnd = pos;\n\n  // Nothing found in the cache, scan until the end of the line (or until marker is found)\n  while ((matchStart = state.src.indexOf('`', matchEnd)) !== -1) {\n    matchEnd = matchStart + 1;\n\n    // scan marker length\n    while (matchEnd < max && state.src.charCodeAt(matchEnd) === 0x60/* ` */) { matchEnd++; }\n\n    closerLength = matchEnd - matchStart;\n\n    if (closerLength === openerLength) {\n      // Found matching closer length.\n      if (!silent) {\n        token     = state.push('code_inline', 'code', 0);\n        token.markup  = marker;\n        token.content = state.src.slice(pos, matchStart)\n          .replace(/\\n/g, ' ')\n          .replace(/^ (.+) $/, '$1');\n      }\n      state.pos = matchEnd;\n      return true;\n    }\n\n    // Some different length found, put it in cache as upper limit of where closer can be found\n    state.backticks[closerLength] = matchStart;\n  }\n\n  // Scanned through the end, didn't find anything\n  state.backticksScanned = true;\n\n  if (!silent) state.pending += marker;\n  state.pos += openerLength;\n  return true;\n};\n","// For each opening emphasis-like marker find a matching closing one\n//\n'use strict';\n\n\nfunction processDelimiters(state, delimiters) {\n  var closerIdx, openerIdx, closer, opener, minOpenerIdx, newMinOpenerIdx,\n      isOddMatch, lastJump,\n      openersBottom = {},\n      max = delimiters.length;\n\n  for (closerIdx = 0; closerIdx < max; closerIdx++) {\n    closer = delimiters[closerIdx];\n\n    // Length is only used for emphasis-specific \"rule of 3\",\n    // if it's not defined (in strikethrough or 3rd party plugins),\n    // we can default it to 0 to disable those checks.\n    //\n    closer.length = closer.length || 0;\n\n    if (!closer.close) continue;\n\n    // Previously calculated lower bounds (previous fails)\n    // for each marker and each delimiter length modulo 3.\n    if (!openersBottom.hasOwnProperty(closer.marker)) {\n      openersBottom[closer.marker] = [ -1, -1, -1 ];\n    }\n\n    minOpenerIdx = openersBottom[closer.marker][closer.length % 3];\n\n    openerIdx = closerIdx - closer.jump - 1;\n\n    // avoid crash if `closer.jump` is pointing outside of the array, see #742\n    if (openerIdx < -1) openerIdx = -1;\n\n    newMinOpenerIdx = openerIdx;\n\n    for (; openerIdx > minOpenerIdx; openerIdx -= opener.jump + 1) {\n      opener = delimiters[openerIdx];\n\n      if (opener.marker !== closer.marker) continue;\n\n      if (opener.open && opener.end < 0) {\n\n        isOddMatch = false;\n\n        // from spec:\n        //\n        // If one of the delimiters can both open and close emphasis, then the\n        // sum of the lengths of the delimiter runs containing the opening and\n        // closing delimiters must not be a multiple of 3 unless both lengths\n        // are multiples of 3.\n        //\n        if (opener.close || closer.open) {\n          if ((opener.length + closer.length) % 3 === 0) {\n            if (opener.length % 3 !== 0 || closer.length % 3 !== 0) {\n              isOddMatch = true;\n            }\n          }\n        }\n\n        if (!isOddMatch) {\n          // If previous delimiter cannot be an opener, we can safely skip\n          // the entire sequence in future checks. This is required to make\n          // sure algorithm has linear complexity (see *_*_*_*_*_... case).\n          //\n          lastJump = openerIdx > 0 && !delimiters[openerIdx - 1].open ?\n            delimiters[openerIdx - 1].jump + 1 :\n            0;\n\n          closer.jump  = closerIdx - openerIdx + lastJump;\n          closer.open  = false;\n          opener.end   = closerIdx;\n          opener.jump  = lastJump;\n          opener.close = false;\n          newMinOpenerIdx = -1;\n          break;\n        }\n      }\n    }\n\n    if (newMinOpenerIdx !== -1) {\n      // If match for this delimiter run failed, we want to set lower bound for\n      // future lookups. This is required to make sure algorithm has linear\n      // complexity.\n      //\n      // See details here:\n      // https://github.com/commonmark/cmark/issues/178#issuecomment-270417442\n      //\n      openersBottom[closer.marker][(closer.length || 0) % 3] = newMinOpenerIdx;\n    }\n  }\n}\n\n\nmodule.exports = function link_pairs(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  processDelimiters(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      processDelimiters(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Process *this* and _that_\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function emphasis(state, silent) {\n  var i, scanned, token,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x5F /* _ */ && marker !== 0x2A /* * */) { return false; }\n\n  scanned = state.scanDelims(state.pos, marker === 0x2A);\n\n  for (i = 0; i < scanned.length; i++) {\n    token         = state.push('text', '', 0);\n    token.content = String.fromCharCode(marker);\n\n    state.delimiters.push({\n      // Char code of the starting marker (number).\n      //\n      marker: marker,\n\n      // Total length of these series of delimiters.\n      //\n      length: scanned.length,\n\n      // An amount of characters before this one that's equivalent to\n      // current one. In plain English: if this delimiter does not open\n      // an emphasis, neither do previous `jump` characters.\n      //\n      // Used to skip sequences like \"*****\" in one step, for 1st asterisk\n      // value will be 0, for 2nd it's 1 and so on.\n      //\n      jump:   i,\n\n      // A position of the token this delimiter corresponds to.\n      //\n      token:  state.tokens.length - 1,\n\n      // If this delimiter is matched as a valid opener, `end` will be\n      // equal to its position, otherwise it's `-1`.\n      //\n      end:    -1,\n\n      // Boolean flags that determine if this delimiter could open or close\n      // an emphasis.\n      //\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i,\n      startDelim,\n      endDelim,\n      token,\n      ch,\n      isStrong,\n      max = delimiters.length;\n\n  for (i = max - 1; i >= 0; i--) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x5F/* _ */ && startDelim.marker !== 0x2A/* * */) {\n      continue;\n    }\n\n    // Process only opening markers\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    // If the previous delimiter has the same marker and is adjacent to this one,\n    // merge those into one strong delimiter.\n    //\n    // `<em><em>whatever</em></em>` -> `<strong>whatever</strong>`\n    //\n    isStrong = i > 0 &&\n               delimiters[i - 1].end === startDelim.end + 1 &&\n               delimiters[i - 1].token === startDelim.token - 1 &&\n               delimiters[startDelim.end + 1].token === endDelim.token + 1 &&\n               delimiters[i - 1].marker === startDelim.marker;\n\n    ch = String.fromCharCode(startDelim.marker);\n\n    token         = state.tokens[startDelim.token];\n    token.type    = isStrong ? 'strong_open' : 'em_open';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = 1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = isStrong ? 'strong_close' : 'em_close';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = -1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    if (isStrong) {\n      state.tokens[delimiters[i - 1].token].content = '';\n      state.tokens[delimiters[startDelim.end + 1].token].content = '';\n      i--;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function emphasis(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Process html entity - &#123;, &#xAF;, &quot;, ...\n\n'use strict';\n\nvar entities          = require('../common/entities');\nvar has               = require('../common/utils').has;\nvar isValidEntityCode = require('../common/utils').isValidEntityCode;\nvar fromCodePoint     = require('../common/utils').fromCodePoint;\n\n\nvar DIGITAL_RE = /^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i;\nvar NAMED_RE   = /^&([a-z][a-z0-9]{1,31});/i;\n\n\nmodule.exports = function entity(state, silent) {\n  var ch, code, match, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x26/* & */) { return false; }\n\n  if (pos + 1 < max) {\n    ch = state.src.charCodeAt(pos + 1);\n\n    if (ch === 0x23 /* # */) {\n      match = state.src.slice(pos).match(DIGITAL_RE);\n      if (match) {\n        if (!silent) {\n          code = match[1][0].toLowerCase() === 'x' ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10);\n          state.pending += isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(0xFFFD);\n        }\n        state.pos += match[0].length;\n        return true;\n      }\n    } else {\n      match = state.src.slice(pos).match(NAMED_RE);\n      if (match) {\n        if (has(entities, match[1])) {\n          if (!silent) { state.pending += entities[match[1]]; }\n          state.pos += match[0].length;\n          return true;\n        }\n      }\n    }\n  }\n\n  if (!silent) { state.pending += '&'; }\n  state.pos++;\n  return true;\n};\n","// Process escaped chars and hardbreaks\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\nvar ESCAPED = [];\n\nfor (var i = 0; i < 256; i++) { ESCAPED.push(0); }\n\n'\\\\!\"#$%&\\'()*+,./:;<=>?@[]^_`{|}~-'\n  .split('').forEach(function (ch) { ESCAPED[ch.charCodeAt(0)] = 1; });\n\n\nmodule.exports = function escape(state, silent) {\n  var ch, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x5C/* \\ */) { return false; }\n\n  pos++;\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch < 256 && ESCAPED[ch] !== 0) {\n      if (!silent) { state.pending += state.src[pos]; }\n      state.pos += 2;\n      return true;\n    }\n\n    if (ch === 0x0A) {\n      if (!silent) {\n        state.push('hardbreak', 'br', 0);\n      }\n\n      pos++;\n      // skip leading whitespaces from next line\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n        if (!isSpace(ch)) { break; }\n        pos++;\n      }\n\n      state.pos = pos;\n      return true;\n    }\n  }\n\n  if (!silent) { state.pending += '\\\\'; }\n  state.pos++;\n  return true;\n};\n","// Process html tags\n\n'use strict';\n\n\nvar HTML_TAG_RE = require('../common/html_re').HTML_TAG_RE;\n\n\nfunction isLetter(ch) {\n  /*eslint no-bitwise:0*/\n  var lc = ch | 0x20; // to lower case\n  return (lc >= 0x61/* a */) && (lc <= 0x7a/* z */);\n}\n\n\nmodule.exports = function html_inline(state, silent) {\n  var ch, match, max, token,\n      pos = state.pos;\n\n  if (!state.md.options.html) { return false; }\n\n  // Check start\n  max = state.posMax;\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */ ||\n      pos + 2 >= max) {\n    return false;\n  }\n\n  // Quick fail on second char\n  ch = state.src.charCodeAt(pos + 1);\n  if (ch !== 0x21/* ! */ &&\n      ch !== 0x3F/* ? */ &&\n      ch !== 0x2F/* / */ &&\n      !isLetter(ch)) {\n    return false;\n  }\n\n  match = state.src.slice(pos).match(HTML_TAG_RE);\n  if (!match) { return false; }\n\n  if (!silent) {\n    token         = state.push('html_inline', '', 0);\n    token.content = state.src.slice(pos, pos + match[0].length);\n  }\n  state.pos += match[0].length;\n  return true;\n};\n","// Process ![image](<src> \"title\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function image(state, silent) {\n  var attrs,\n      code,\n      content,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      ref,\n      res,\n      title,\n      token,\n      tokens,\n      start,\n      href = '',\n      oldPos = state.pos,\n      max = state.posMax;\n\n  if (state.src.charCodeAt(state.pos) !== 0x21/* ! */) { return false; }\n  if (state.src.charCodeAt(state.pos + 1) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 2;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos + 1, false);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                ^^ skipping these spaces\n    start = pos;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                  ^^^^^^^ parsing link title\n    res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n    if (pos < max && start !== pos && res.ok) {\n      title = res.str;\n      pos = res.pos;\n\n      // [link](  <href>  \"title\"  )\n      //                         ^^ skipping these spaces\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n    } else {\n      title = '';\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      state.pos = oldPos;\n      return false;\n    }\n    pos++;\n  } else {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    content = state.src.slice(labelStart, labelEnd);\n\n    state.md.inline.parse(\n      content,\n      state.md,\n      state.env,\n      tokens = []\n    );\n\n    token          = state.push('image', 'img', 0);\n    token.attrs    = attrs = [ [ 'src', href ], [ 'alt', '' ] ];\n    token.children = tokens;\n    token.content  = content;\n\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","// Process [link](<to> \"stuff\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function link(state, silent) {\n  var attrs,\n      code,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      res,\n      ref,\n      token,\n      href = '',\n      title = '',\n      oldPos = state.pos,\n      max = state.posMax,\n      start = state.pos,\n      parseReference = true;\n\n  if (state.src.charCodeAt(state.pos) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 1;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos, true);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // might have found a valid shortcut link, disable reference parsing\n    parseReference = false;\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                ^^ skipping these spaces\n      start = pos;\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                  ^^^^^^^ parsing link title\n      res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n      if (pos < max && start !== pos && res.ok) {\n        title = res.str;\n        pos = res.pos;\n\n        // [link](  <href>  \"title\"  )\n        //                         ^^ skipping these spaces\n        for (; pos < max; pos++) {\n          code = state.src.charCodeAt(pos);\n          if (!isSpace(code) && code !== 0x0A) { break; }\n        }\n      }\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      // parsing a valid shortcut link failed, fallback to reference\n      parseReference = true;\n    }\n    pos++;\n  }\n\n  if (parseReference) {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    state.pos = labelStart;\n    state.posMax = labelEnd;\n\n    token        = state.push('link_open', 'a', 1);\n    token.attrs  = attrs = [ [ 'href', href ] ];\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n\n    state.md.inline.tokenize(state);\n\n    token        = state.push('link_close', 'a', -1);\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","// Proceess '\\n'\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function newline(state, silent) {\n  var pmax, max, pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x0A/* \\n */) { return false; }\n\n  pmax = state.pending.length - 1;\n  max = state.posMax;\n\n  // '  \\n' -> hardbreak\n  // Lookup in pending chars is bad practice! Don't copy to other rules!\n  // Pending string is stored in concat mode, indexed lookups will cause\n  // convertion to flat mode.\n  if (!silent) {\n    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\n      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\n        state.pending = state.pending.replace(/ +$/, '');\n        state.push('hardbreak', 'br', 0);\n      } else {\n        state.pending = state.pending.slice(0, -1);\n        state.push('softbreak', 'br', 0);\n      }\n\n    } else {\n      state.push('softbreak', 'br', 0);\n    }\n  }\n\n  pos++;\n\n  // skip heading spaces for next line\n  while (pos < max && isSpace(state.src.charCodeAt(pos))) { pos++; }\n\n  state.pos = pos;\n  return true;\n};\n","// Inline parser state\n\n'use strict';\n\n\nvar Token          = require('../token');\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\n\nfunction StateInline(src, md, env, outTokens) {\n  this.src = src;\n  this.env = env;\n  this.md = md;\n  this.tokens = outTokens;\n  this.tokens_meta = Array(outTokens.length);\n\n  this.pos = 0;\n  this.posMax = this.src.length;\n  this.level = 0;\n  this.pending = '';\n  this.pendingLevel = 0;\n\n  // Stores { start: end } pairs. Useful for backtrack\n  // optimization of pairs parse (emphasis, strikes).\n  this.cache = {};\n\n  // List of emphasis-like delimiters for current tag\n  this.delimiters = [];\n\n  // Stack of delimiter lists for upper level tags\n  this._prev_delimiters = [];\n\n  // backtick length => last seen position\n  this.backticks = {};\n  this.backticksScanned = false;\n}\n\n\n// Flush pending text\n//\nStateInline.prototype.pushPending = function () {\n  var token = new Token('text', '', 0);\n  token.content = this.pending;\n  token.level = this.pendingLevel;\n  this.tokens.push(token);\n  this.pending = '';\n  return token;\n};\n\n\n// Push new token to \"stream\".\n// If pending text exists - flush it as text token\n//\nStateInline.prototype.push = function (type, tag, nesting) {\n  if (this.pending) {\n    this.pushPending();\n  }\n\n  var token = new Token(type, tag, nesting);\n  var token_meta = null;\n\n  if (nesting < 0) {\n    // closing tag\n    this.level--;\n    this.delimiters = this._prev_delimiters.pop();\n  }\n\n  token.level = this.level;\n\n  if (nesting > 0) {\n    // opening tag\n    this.level++;\n    this._prev_delimiters.push(this.delimiters);\n    this.delimiters = [];\n    token_meta = { delimiters: this.delimiters };\n  }\n\n  this.pendingLevel = this.level;\n  this.tokens.push(token);\n  this.tokens_meta.push(token_meta);\n  return token;\n};\n\n\n// Scan a sequence of emphasis-like markers, and determine whether\n// it can start an emphasis sequence or end an emphasis sequence.\n//\n//  - start - position to scan from (it should point at a valid marker);\n//  - canSplitWord - determine if these markers can be found inside a word\n//\nStateInline.prototype.scanDelims = function (start, canSplitWord) {\n  var pos = start, lastChar, nextChar, count, can_open, can_close,\n      isLastWhiteSpace, isLastPunctChar,\n      isNextWhiteSpace, isNextPunctChar,\n      left_flanking = true,\n      right_flanking = true,\n      max = this.posMax,\n      marker = this.src.charCodeAt(start);\n\n  // treat beginning of the line as a whitespace\n  lastChar = start > 0 ? this.src.charCodeAt(start - 1) : 0x20;\n\n  while (pos < max && this.src.charCodeAt(pos) === marker) { pos++; }\n\n  count = pos - start;\n\n  // treat end of the line as a whitespace\n  nextChar = pos < max ? this.src.charCodeAt(pos) : 0x20;\n\n  isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n  isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n  isLastWhiteSpace = isWhiteSpace(lastChar);\n  isNextWhiteSpace = isWhiteSpace(nextChar);\n\n  if (isNextWhiteSpace) {\n    left_flanking = false;\n  } else if (isNextPunctChar) {\n    if (!(isLastWhiteSpace || isLastPunctChar)) {\n      left_flanking = false;\n    }\n  }\n\n  if (isLastWhiteSpace) {\n    right_flanking = false;\n  } else if (isLastPunctChar) {\n    if (!(isNextWhiteSpace || isNextPunctChar)) {\n      right_flanking = false;\n    }\n  }\n\n  if (!canSplitWord) {\n    can_open  = left_flanking  && (!right_flanking || isLastPunctChar);\n    can_close = right_flanking && (!left_flanking  || isNextPunctChar);\n  } else {\n    can_open  = left_flanking;\n    can_close = right_flanking;\n  }\n\n  return {\n    can_open:  can_open,\n    can_close: can_close,\n    length:    count\n  };\n};\n\n\n// re-export Token class to use in block rules\nStateInline.prototype.Token = Token;\n\n\nmodule.exports = StateInline;\n","// ~~strike through~~\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function strikethrough(state, silent) {\n  var i, scanned, token, len, ch,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x7E/* ~ */) { return false; }\n\n  scanned = state.scanDelims(state.pos, true);\n  len = scanned.length;\n  ch = String.fromCharCode(marker);\n\n  if (len < 2) { return false; }\n\n  if (len % 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch;\n    len--;\n  }\n\n  for (i = 0; i < len; i += 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch + ch;\n\n    state.delimiters.push({\n      marker: marker,\n      length: 0,     // disable \"rule of 3\" length checks meant for emphasis\n      jump:   i / 2, // for `~~` 1 marker = 2 characters\n      token:  state.tokens.length - 1,\n      end:    -1,\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i, j,\n      startDelim,\n      endDelim,\n      token,\n      loneMarkers = [],\n      max = delimiters.length;\n\n  for (i = 0; i < max; i++) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x7E/* ~ */) {\n      continue;\n    }\n\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    token         = state.tokens[startDelim.token];\n    token.type    = 's_open';\n    token.tag     = 's';\n    token.nesting = 1;\n    token.markup  = '~~';\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = 's_close';\n    token.tag     = 's';\n    token.nesting = -1;\n    token.markup  = '~~';\n    token.content = '';\n\n    if (state.tokens[endDelim.token - 1].type === 'text' &&\n        state.tokens[endDelim.token - 1].content === '~') {\n\n      loneMarkers.push(endDelim.token - 1);\n    }\n  }\n\n  // If a marker sequence has an odd number of characters, it's splitted\n  // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the\n  // start of the sequence.\n  //\n  // So, we have to move all those markers after subsequent s_close tags.\n  //\n  while (loneMarkers.length) {\n    i = loneMarkers.pop();\n    j = i + 1;\n\n    while (j < state.tokens.length && state.tokens[j].type === 's_close') {\n      j++;\n    }\n\n    j--;\n\n    if (i !== j) {\n      token = state.tokens[j];\n      state.tokens[j] = state.tokens[i];\n      state.tokens[i] = token;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function strikethrough(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Skip text characters for text token, place those to pending buffer\n// and increment current pos\n\n'use strict';\n\n\n// Rule to skip pure text\n// '{}$%@~+=:' reserved for extentions\n\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n\n// !!!! Don't confuse with \"Markdown ASCII Punctuation\" chars\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\nfunction isTerminatorChar(ch) {\n  switch (ch) {\n    case 0x0A/* \\n */:\n    case 0x21/* ! */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2D/* - */:\n    case 0x3A/* : */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos;\n\n  while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {\n    pos++;\n  }\n\n  if (pos === state.pos) { return false; }\n\n  if (!silent) { state.pending += state.src.slice(state.pos, pos); }\n\n  state.pos = pos;\n\n  return true;\n};\n\n// Alternative implementation, for memory.\n//\n// It costs 10% of performance, but allows extend terminators list, if place it\n// to `ParcerInline` property. Probably, will switch to it sometime, such\n// flexibility required.\n\n/*\nvar TERMINATOR_RE = /[\\n!#$%&*+\\-:<=>@[\\\\\\]^_`{}~]/;\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos,\n      idx = state.src.slice(pos).search(TERMINATOR_RE);\n\n  // first char is terminator -> empty text\n  if (idx === 0) { return false; }\n\n  // no terminator -> text till end of string\n  if (idx < 0) {\n    if (!silent) { state.pending += state.src.slice(pos); }\n    state.pos = state.src.length;\n    return true;\n  }\n\n  if (!silent) { state.pending += state.src.slice(pos, pos + idx); }\n\n  state.pos += idx;\n\n  return true;\n};*/\n","// Clean up tokens after emphasis and strikethrough postprocessing:\n// merge adjacent text nodes into one and re-calculate all token levels\n//\n// This is necessary because initially emphasis delimiter markers (*, _, ~)\n// are treated as their own separate text tokens. Then emphasis rule either\n// leaves them as text (needed to merge with adjacent text) or turns them\n// into opening/closing tags (which messes up levels inside).\n//\n'use strict';\n\n\nmodule.exports = function text_collapse(state) {\n  var curr, last,\n      level = 0,\n      tokens = state.tokens,\n      max = state.tokens.length;\n\n  for (curr = last = 0; curr < max; curr++) {\n    // re-calculate levels after emphasis/strikethrough turns some text nodes\n    // into opening/closing tags\n    if (tokens[curr].nesting < 0) level--; // closing tag\n    tokens[curr].level = level;\n    if (tokens[curr].nesting > 0) level++; // opening tag\n\n    if (tokens[curr].type === 'text' &&\n        curr + 1 < max &&\n        tokens[curr + 1].type === 'text') {\n\n      // collapse two adjacent text nodes\n      tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content;\n    } else {\n      if (curr !== last) { tokens[last] = tokens[curr]; }\n\n      last++;\n    }\n  }\n\n  if (curr !== last) {\n    tokens.length = last;\n  }\n};\n","// Token class\n\n'use strict';\n\n\n/**\n * class Token\n **/\n\n/**\n * new Token(type, tag, nesting)\n *\n * Create new token and fill passed properties.\n **/\nfunction Token(type, tag, nesting) {\n  /**\n   * Token#type -> String\n   *\n   * Type of the token (string, e.g. \"paragraph_open\")\n   **/\n  this.type     = type;\n\n  /**\n   * Token#tag -> String\n   *\n   * html tag name, e.g. \"p\"\n   **/\n  this.tag      = tag;\n\n  /**\n   * Token#attrs -> Array\n   *\n   * Html attributes. Format: `[ [ name1, value1 ], [ name2, value2 ] ]`\n   **/\n  this.attrs    = null;\n\n  /**\n   * Token#map -> Array\n   *\n   * Source map info. Format: `[ line_begin, line_end ]`\n   **/\n  this.map      = null;\n\n  /**\n   * Token#nesting -> Number\n   *\n   * Level change (number in {-1, 0, 1} set), where:\n   *\n   * -  `1` means the tag is opening\n   * -  `0` means the tag is self-closing\n   * - `-1` means the tag is closing\n   **/\n  this.nesting  = nesting;\n\n  /**\n   * Token#level -> Number\n   *\n   * nesting level, the same as `state.level`\n   **/\n  this.level    = 0;\n\n  /**\n   * Token#children -> Array\n   *\n   * An array of child nodes (inline and img tokens)\n   **/\n  this.children = null;\n\n  /**\n   * Token#content -> String\n   *\n   * In a case of self-closing tag (code, html, fence, etc.),\n   * it has contents of this tag.\n   **/\n  this.content  = '';\n\n  /**\n   * Token#markup -> String\n   *\n   * '*' or '_' for emphasis, fence string for fence, etc.\n   **/\n  this.markup   = '';\n\n  /**\n   * Token#info -> String\n   *\n   * Additional information:\n   *\n   * - Info string for \"fence\" tokens\n   * - The value \"auto\" for autolink \"link_open\" and \"link_close\" tokens\n   **/\n  this.info     = '';\n\n  /**\n   * Token#meta -> Object\n   *\n   * A place for plugins to store an arbitrary data\n   **/\n  this.meta     = null;\n\n  /**\n   * Token#block -> Boolean\n   *\n   * True for block-level tokens, false for inline tokens.\n   * Used in renderer to calculate line breaks\n   **/\n  this.block    = false;\n\n  /**\n   * Token#hidden -> Boolean\n   *\n   * If it's true, ignore this element when rendering. Used for tight lists\n   * to hide paragraphs.\n   **/\n  this.hidden   = false;\n}\n\n\n/**\n * Token.attrIndex(name) -> Number\n *\n * Search attribute index by name.\n **/\nToken.prototype.attrIndex = function attrIndex(name) {\n  var attrs, i, len;\n\n  if (!this.attrs) { return -1; }\n\n  attrs = this.attrs;\n\n  for (i = 0, len = attrs.length; i < len; i++) {\n    if (attrs[i][0] === name) { return i; }\n  }\n  return -1;\n};\n\n\n/**\n * Token.attrPush(attrData)\n *\n * Add `[ name, value ]` attribute to list. Init attrs if necessary\n **/\nToken.prototype.attrPush = function attrPush(attrData) {\n  if (this.attrs) {\n    this.attrs.push(attrData);\n  } else {\n    this.attrs = [ attrData ];\n  }\n};\n\n\n/**\n * Token.attrSet(name, value)\n *\n * Set `name` attribute to `value`. Override old value if exists.\n **/\nToken.prototype.attrSet = function attrSet(name, value) {\n  var idx = this.attrIndex(name),\n      attrData = [ name, value ];\n\n  if (idx < 0) {\n    this.attrPush(attrData);\n  } else {\n    this.attrs[idx] = attrData;\n  }\n};\n\n\n/**\n * Token.attrGet(name)\n *\n * Get the value of attribute `name`, or null if it does not exist.\n **/\nToken.prototype.attrGet = function attrGet(name) {\n  var idx = this.attrIndex(name), value = null;\n  if (idx >= 0) {\n    value = this.attrs[idx][1];\n  }\n  return value;\n};\n\n\n/**\n * Token.attrJoin(name, value)\n *\n * Join value to existing attribute via space. Or create new attribute if not\n * exists. Useful to operate with token classes.\n **/\nToken.prototype.attrJoin = function attrJoin(name, value) {\n  var idx = this.attrIndex(name);\n\n  if (idx < 0) {\n    this.attrPush([ name, value ]);\n  } else {\n    this.attrs[idx][1] = this.attrs[idx][1] + ' ' + value;\n  }\n};\n\n\nmodule.exports = Token;\n","\n'use strict';\n\n\n/* eslint-disable no-bitwise */\n\nvar decodeCache = {};\n\nfunction getDecodeCache(exclude) {\n  var i, ch, cache = decodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = decodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n    cache.push(ch);\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    ch = exclude.charCodeAt(i);\n    cache[ch] = '%' + ('0' + ch.toString(16).toUpperCase()).slice(-2);\n  }\n\n  return cache;\n}\n\n\n// Decode percent-encoded string.\n//\nfunction decode(string, exclude) {\n  var cache;\n\n  if (typeof exclude !== 'string') {\n    exclude = decode.defaultChars;\n  }\n\n  cache = getDecodeCache(exclude);\n\n  return string.replace(/(%[a-f0-9]{2})+/gi, function(seq) {\n    var i, l, b1, b2, b3, b4, chr,\n        result = '';\n\n    for (i = 0, l = seq.length; i < l; i += 3) {\n      b1 = parseInt(seq.slice(i + 1, i + 3), 16);\n\n      if (b1 < 0x80) {\n        result += cache[b1];\n        continue;\n      }\n\n      if ((b1 & 0xE0) === 0xC0 && (i + 3 < l)) {\n        // 110xxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n\n        if ((b2 & 0xC0) === 0x80) {\n          chr = ((b1 << 6) & 0x7C0) | (b2 & 0x3F);\n\n          if (chr < 0x80) {\n            result += '\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 3;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF0) === 0xE0 && (i + 6 < l)) {\n        // 1110xxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n          chr = ((b1 << 12) & 0xF000) | ((b2 << 6) & 0xFC0) | (b3 & 0x3F);\n\n          if (chr < 0x800 || (chr >= 0xD800 && chr <= 0xDFFF)) {\n            result += '\\ufffd\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 6;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF8) === 0xF0 && (i + 9 < l)) {\n        // 111110xx 10xxxxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n        b4 = parseInt(seq.slice(i + 10, i + 12), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80 && (b4 & 0xC0) === 0x80) {\n          chr = ((b1 << 18) & 0x1C0000) | ((b2 << 12) & 0x3F000) | ((b3 << 6) & 0xFC0) | (b4 & 0x3F);\n\n          if (chr < 0x10000 || chr > 0x10FFFF) {\n            result += '\\ufffd\\ufffd\\ufffd\\ufffd';\n          } else {\n            chr -= 0x10000;\n            result += String.fromCharCode(0xD800 + (chr >> 10), 0xDC00 + (chr & 0x3FF));\n          }\n\n          i += 9;\n          continue;\n        }\n      }\n\n      result += '\\ufffd';\n    }\n\n    return result;\n  });\n}\n\n\ndecode.defaultChars   = ';/?:@&=+$,#';\ndecode.componentChars = '';\n\n\nmodule.exports = decode;\n","\n'use strict';\n\n\nvar encodeCache = {};\n\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache(exclude) {\n  var i, ch, cache = encodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = encodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch);\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));\n    }\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i];\n  }\n\n  return cache;\n}\n\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode(string, exclude, keepEscaped) {\n  var i, l, code, nextCode, cache,\n      result = '';\n\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped  = exclude;\n    exclude = encode.defaultChars;\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true;\n  }\n\n  cache = getEncodeCache(exclude);\n\n  for (i = 0, l = string.length; i < l; i++) {\n    code = string.charCodeAt(i);\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3);\n        i += 2;\n        continue;\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code];\n      continue;\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        nextCode = string.charCodeAt(i + 1);\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1]);\n          i++;\n          continue;\n        }\n      }\n      result += '%EF%BF%BD';\n      continue;\n    }\n\n    result += encodeURIComponent(string[i]);\n  }\n\n  return result;\n}\n\nencode.defaultChars   = \";/?:@&=+$,-_.!~*'()#\";\nencode.componentChars = \"-_.!~*'()\";\n\n\nmodule.exports = encode;\n","\n'use strict';\n\n\nmodule.exports = function format(url) {\n  var result = '';\n\n  result += url.protocol || '';\n  result += url.slashes ? '//' : '';\n  result += url.auth ? url.auth + '@' : '';\n\n  if (url.hostname && url.hostname.indexOf(':') !== -1) {\n    // ipv6 address\n    result += '[' + url.hostname + ']';\n  } else {\n    result += url.hostname || '';\n  }\n\n  result += url.port ? ':' + url.port : '';\n  result += url.pathname || '';\n  result += url.search || '';\n  result += url.hash || '';\n\n  return result;\n};\n","'use strict';\n\n\nmodule.exports.encode = require('./encode');\nmodule.exports.decode = require('./decode');\nmodule.exports.format = require('./format');\nmodule.exports.parse  = require('./parse');\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n//\n// Changes from joyent/node:\n//\n// 1. No leading slash in paths,\n//    e.g. in `url.parse('http://foo?bar')` pathname is ``, not `/`\n//\n// 2. Backslashes are not replaced with slashes,\n//    so `http:\\\\example.org\\` is treated like a relative path\n//\n// 3. Trailing colon is treated like a part of the path,\n//    i.e. in `http://example.org:foo` pathname is `:foo`\n//\n// 4. Nothing is URL-encoded in the resulting object,\n//    (in joyent/node some chars in auth and paths are encoded)\n//\n// 5. `url.parse()` does not have `parseQueryString` argument\n//\n// 6. Removed extraneous result properties: `host`, `path`, `query`, etc.,\n//    which can be constructed using other parts of the url.\n//\n\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.pathname = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = [ '<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t' ],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = [ '{', '}', '|', '\\\\', '^', '`' ].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = [ '\\'' ].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = [ '%', '/', '?', ';', '#' ].concat(autoEscape),\n    hostEndingChars = [ '/', '?', '#' ],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    /* eslint-disable no-script-url */\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    };\n    /* eslint-enable no-script-url */\n\nfunction urlParse(url, slashesDenoteHost) {\n  if (url && url instanceof Url) { return url; }\n\n  var u = new Url();\n  u.parse(url, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, slashesDenoteHost) {\n  var i, l, lowerProto, hec, slashes,\n      rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    lowerProto = proto.toLowerCase();\n    this.protocol = proto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (i = 0; i < hostEndingChars.length; i++) {\n      hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = auth;\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (i = 0; i < nonHostChars.length; i++) {\n      hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1) {\n      hostEnd = rest.length;\n    }\n\n    if (rest[hostEnd - 1] === ':') { hostEnd--; }\n    var host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost(host);\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) { continue; }\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    }\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n    }\n  }\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    rest = rest.slice(0, qm);\n  }\n  if (rest) { this.pathname = rest; }\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '';\n  }\n\n  return this;\n};\n\nUrl.prototype.parseHost = function(host) {\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) { this.hostname = host; }\n};\n\nmodule.exports = urlParse;\n","'use strict';\n\n/** Highest positive signed 32-bit float value */\nconst maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\n\n/** Bootstring parameters */\nconst base = 36;\nconst tMin = 1;\nconst tMax = 26;\nconst skew = 38;\nconst damp = 700;\nconst initialBias = 72;\nconst initialN = 128; // 0x80\nconst delimiter = '-'; // '\\x2D'\n\n/** Regular expressions */\nconst regexPunycode = /^xn--/;\nconst regexNonASCII = /[^\\0-\\x7E]/; // non-ASCII chars\nconst regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\n\n/** Error messages */\nconst errors = {\n\t'overflow': 'Overflow: input needs wider integers to process',\n\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t'invalid-input': 'Invalid input'\n};\n\n/** Convenience shortcuts */\nconst baseMinusTMin = base - tMin;\nconst floor = Math.floor;\nconst stringFromCharCode = String.fromCharCode;\n\n/*--------------------------------------------------------------------------*/\n\n/**\n * A generic error utility function.\n * @private\n * @param {String} type The error type.\n * @returns {Error} Throws a `RangeError` with the applicable error message.\n */\nfunction error(type) {\n\tthrow new RangeError(errors[type]);\n}\n\n/**\n * A generic `Array#map` utility function.\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} callback The function that gets called for every array\n * item.\n * @returns {Array} A new array of values returned by the callback function.\n */\nfunction map(array, fn) {\n\tconst result = [];\n\tlet length = array.length;\n\twhile (length--) {\n\t\tresult[length] = fn(array[length]);\n\t}\n\treturn result;\n}\n\n/**\n * A simple `Array#map`-like wrapper to work with domain name strings or email\n * addresses.\n * @private\n * @param {String} domain The domain name or email address.\n * @param {Function} callback The function that gets called for every\n * character.\n * @returns {Array} A new string of characters returned by the callback\n * function.\n */\nfunction mapDomain(string, fn) {\n\tconst parts = string.split('@');\n\tlet result = '';\n\tif (parts.length > 1) {\n\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t// the local part (i.e. everything up to `@`) intact.\n\t\tresult = parts[0] + '@';\n\t\tstring = parts[1];\n\t}\n\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\tstring = string.replace(regexSeparators, '\\x2E');\n\tconst labels = string.split('.');\n\tconst encoded = map(labels, fn).join('.');\n\treturn result + encoded;\n}\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n * @see `punycode.ucs2.encode`\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode.ucs2\n * @name decode\n * @param {String} string The Unicode input string (UCS-2).\n * @returns {Array} The new array of code points.\n */\nfunction ucs2decode(string) {\n\tconst output = [];\n\tlet counter = 0;\n\tconst length = string.length;\n\twhile (counter < length) {\n\t\tconst value = string.charCodeAt(counter++);\n\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t// It's a high surrogate, and there is a next character.\n\t\t\tconst extra = string.charCodeAt(counter++);\n\t\t\tif ((extra & 0xFC00) == 0xDC00) { // Low surrogate.\n\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t} else {\n\t\t\t\t// It's an unmatched surrogate; only append this code unit, in case the\n\t\t\t\t// next code unit is the high surrogate of a surrogate pair.\n\t\t\t\toutput.push(value);\n\t\t\t\tcounter--;\n\t\t\t}\n\t\t} else {\n\t\t\toutput.push(value);\n\t\t}\n\t}\n\treturn output;\n}\n\n/**\n * Creates a string based on an array of numeric code points.\n * @see `punycode.ucs2.decode`\n * @memberOf punycode.ucs2\n * @name encode\n * @param {Array} codePoints The array of numeric code points.\n * @returns {String} The new Unicode string (UCS-2).\n */\nconst ucs2encode = array => String.fromCodePoint(...array);\n\n/**\n * Converts a basic code point into a digit/integer.\n * @see `digitToBasic()`\n * @private\n * @param {Number} codePoint The basic numeric code point value.\n * @returns {Number} The numeric value of a basic code point (for use in\n * representing integers) in the range `0` to `base - 1`, or `base` if\n * the code point does not represent a value.\n */\nconst basicToDigit = function(codePoint) {\n\tif (codePoint - 0x30 < 0x0A) {\n\t\treturn codePoint - 0x16;\n\t}\n\tif (codePoint - 0x41 < 0x1A) {\n\t\treturn codePoint - 0x41;\n\t}\n\tif (codePoint - 0x61 < 0x1A) {\n\t\treturn codePoint - 0x61;\n\t}\n\treturn base;\n};\n\n/**\n * Converts a digit/integer into a basic code point.\n * @see `basicToDigit()`\n * @private\n * @param {Number} digit The numeric value of a basic code point.\n * @returns {Number} The basic code point whose value (when used for\n * representing integers) is `digit`, which needs to be in the range\n * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n * used; else, the lowercase form is used. The behavior is undefined\n * if `flag` is non-zero and `digit` has no uppercase form.\n */\nconst digitToBasic = function(digit, flag) {\n\t//  0..25 map to ASCII a..z or A..Z\n\t// 26..35 map to ASCII 0..9\n\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n};\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n * @private\n */\nconst adapt = function(delta, numPoints, firstTime) {\n\tlet k = 0;\n\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\tdelta += floor(delta / numPoints);\n\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\tdelta = floor(delta / baseMinusTMin);\n\t}\n\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n};\n\n/**\n * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n * symbols.\n * @memberOf punycode\n * @param {String} input The Punycode string of ASCII-only symbols.\n * @returns {String} The resulting string of Unicode symbols.\n */\nconst decode = function(input) {\n\t// Don't use UCS-2.\n\tconst output = [];\n\tconst inputLength = input.length;\n\tlet i = 0;\n\tlet n = initialN;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points: let `basic` be the number of input code\n\t// points before the last delimiter, or `0` if there is none, then copy\n\t// the first basic code points to the output.\n\n\tlet basic = input.lastIndexOf(delimiter);\n\tif (basic < 0) {\n\t\tbasic = 0;\n\t}\n\n\tfor (let j = 0; j < basic; ++j) {\n\t\t// if it's not a basic code point\n\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\terror('not-basic');\n\t\t}\n\t\toutput.push(input.charCodeAt(j));\n\t}\n\n\t// Main decoding loop: start just after the last delimiter if any basic code\n\t// points were copied; start at the beginning otherwise.\n\n\tfor (let index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t// `index` is the index of the next character to be consumed.\n\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t// which gets added to `i`. The overflow checking is easier\n\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t// value at the end to obtain `delta`.\n\t\tlet oldi = i;\n\t\tfor (let w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\tif (index >= inputLength) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\n\t\t\tconst digit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\ti += digit * w;\n\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\tif (digit < t) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst baseMinusT = base - t;\n\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tw *= baseMinusT;\n\n\t\t}\n\n\t\tconst out = output.length + 1;\n\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t// incrementing `n` each time, so we'll fix that now:\n\t\tif (floor(i / out) > maxInt - n) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tn += floor(i / out);\n\t\ti %= out;\n\n\t\t// Insert `n` at position `i` of the output.\n\t\toutput.splice(i++, 0, n);\n\n\t}\n\n\treturn String.fromCodePoint(...output);\n};\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n * @memberOf punycode\n * @param {String} input The string of Unicode symbols.\n * @returns {String} The resulting Punycode string of ASCII-only symbols.\n */\nconst encode = function(input) {\n\tconst output = [];\n\n\t// Convert the input in UCS-2 to an array of Unicode code points.\n\tinput = ucs2decode(input);\n\n\t// Cache the length.\n\tlet inputLength = input.length;\n\n\t// Initialize the state.\n\tlet n = initialN;\n\tlet delta = 0;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points.\n\tfor (const currentValue of input) {\n\t\tif (currentValue < 0x80) {\n\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t}\n\t}\n\n\tlet basicLength = output.length;\n\tlet handledCPCount = basicLength;\n\n\t// `handledCPCount` is the number of code points that have been handled;\n\t// `basicLength` is the number of basic code points.\n\n\t// Finish the basic string with a delimiter unless it's empty.\n\tif (basicLength) {\n\t\toutput.push(delimiter);\n\t}\n\n\t// Main encoding loop:\n\twhile (handledCPCount < inputLength) {\n\n\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t// larger one:\n\t\tlet m = maxInt;\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\tm = currentValue;\n\t\t\t}\n\t\t}\n\n\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t// but guard against overflow.\n\t\tconst handledCPCountPlusOne = handledCPCount + 1;\n\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\tn = m;\n\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\t\t\tif (currentValue == n) {\n\t\t\t\t// Represent delta as a generalized variable-length integer.\n\t\t\t\tlet q = delta;\n\t\t\t\tfor (let k = base; /* no condition */; k += base) {\n\t\t\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tconst qMinusT = q - t;\n\t\t\t\t\tconst baseMinusT = base - t;\n\t\t\t\t\toutput.push(\n\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t);\n\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t}\n\n\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\tdelta = 0;\n\t\t\t\t++handledCPCount;\n\t\t\t}\n\t\t}\n\n\t\t++delta;\n\t\t++n;\n\n\t}\n\treturn output.join('');\n};\n\n/**\n * Converts a Punycode string representing a domain name or an email address\n * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n * it doesn't matter if you call it on a string that has already been\n * converted to Unicode.\n * @memberOf punycode\n * @param {String} input The Punycoded domain name or email address to\n * convert to Unicode.\n * @returns {String} The Unicode representation of the given Punycode\n * string.\n */\nconst toUnicode = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexPunycode.test(string)\n\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t: string;\n\t});\n};\n\n/**\n * Converts a Unicode string representing a domain name or an email address to\n * Punycode. Only the non-ASCII parts of the domain name will be converted,\n * i.e. it doesn't matter if you call it with a domain that's already in\n * ASCII.\n * @memberOf punycode\n * @param {String} input The domain name or email address to convert, as a\n * Unicode string.\n * @returns {String} The Punycode representation of the given domain name or\n * email address.\n */\nconst toASCII = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexNonASCII.test(string)\n\t\t\t? 'xn--' + encode(string)\n\t\t\t: string;\n\t});\n};\n\n/*--------------------------------------------------------------------------*/\n\n/** Define the public API */\nconst punycode = {\n\t/**\n\t * A string representing the current Punycode.js version number.\n\t * @memberOf punycode\n\t * @type String\n\t */\n\t'version': '2.1.0',\n\t/**\n\t * An object of methods to convert from JavaScript's internal character\n\t * representation (UCS-2) to Unicode code points, and back.\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode\n\t * @type Object\n\t */\n\t'ucs2': {\n\t\t'decode': ucs2decode,\n\t\t'encode': ucs2encode\n\t},\n\t'decode': decode,\n\t'encode': encode,\n\t'toASCII': toASCII,\n\t'toUnicode': toUnicode\n};\n\nexport { ucs2decode, ucs2encode, decode, encode, toASCII, toUnicode };\nexport default punycode;\n","const __WEBPACK_NAMESPACE_OBJECT__ = CodeMirror;","const __WEBPACK_NAMESPACE_OBJECT__ = hljs;","import * as ko from 'knockout';\r\nimport * as CodeMirror from 'codemirror';\r\nimport * as hljs from 'highlight.js';\r\nimport * as select2 from 'select2';\r\n//import 'select2';\r\nimport 'knockout-switch-case';\r\nimport * as MarkdownIt from 'markdown-it';\r\n\r\n// Knockout codemirror binding handler\r\nko.bindingHandlers.codemirror = {\r\n    init: function (element, valueAccessor) {\r\n        let options = ko.unwrap(valueAccessor());\r\n        element.editor = CodeMirror(element, ko.toJS(options));\r\n        element.editor.on('change', function (cm: any) {\r\n            if (!options.readOnly) {\r\n                options.value(cm.getValue());\r\n            }\r\n        });\r\n\r\n        ko.utils.domNodeDisposal.addDisposeCallback(element, function () {\r\n            let wrapper = element.editor.getWrapperElement();\r\n            wrapper.parentNode.removeChild(wrapper);\r\n        });\r\n    },\r\n    update: function (element, valueAccessor) {\r\n        let value = ko.toJS(valueAccessor()).value;\r\n        if (element.editor) {\r\n            let cur = element.editor.getCursor();\r\n            element.editor.setValue(value);\r\n            element.editor.setCursor(cur);\r\n            element.editor.refresh();\r\n        }\r\n    }\r\n};\r\n\r\n// Highlighted Code Area\r\nhljs.configure({\r\n    languages: [\"python\"]\r\n})\r\nko.bindingHandlers.highlightedCode = {\r\n    update: function (element, valueAccessor) {\r\n        let code = ko.unwrap(valueAccessor());\r\n        element.innerHTML = code;\r\n        hljs.highlightBlock(element);\r\n        if (code.trim()) {\r\n            // @ts-ignore\r\n            hljs.lineNumbersBlock(element);\r\n        }\r\n    }\r\n};\r\n\r\nexport let md = new MarkdownIt({\r\n    html: true,\r\n    highlight: function (str, lang) {\r\n    if (lang && hljs.getLanguage(lang)) {\r\n      try {\r\n          // @ts-ignore\r\n          return hljs.highlight(str, { language: lang }).value;\r\n      } catch (__) {}\r\n    }\r\n\r\n    return ''; // use external default escaping\r\n  }\r\n});\r\n\r\nko.bindingHandlers.markdowned = {\r\n    update: function (element, valueAccessor) {\r\n        let code = ko.unwrap(valueAccessor());\r\n        element.innerHTML = md.render(code);\r\n        let codeBlocks = element.querySelectorAll(\"pre code\");\r\n        codeBlocks.forEach((block: HTMLElement) => hljs.highlightBlock(block));\r\n        //hljs.highlightBlock(element.querySelector(\"pre code\"));\r\n        /*if (code.trim()) {\r\n            hljs.lineNumbersBlock(element.querySelector(\"pre code\"));\r\n        }*/\r\n    }\r\n};\r\n\r\n\r\n/**\r\n * https://github.com/knockout/knockout/issues/416#issuecomment-4877853\r\n * Adds a new function to the ObservableArray class to efficiently push multiple values\r\n * @param valuesToPush\r\n */\r\nexport function pushObservableArray<T>(array: KnockoutObservableArray<T>, values: T[]): KnockoutObservableArray<T> {\r\n    let underlyingArray = array();\r\n    array.valueWillMutate();\r\n    ko.utils.arrayPushAll(underlyingArray, values);\r\n    array.valueHasMutated();\r\n    return array;\r\n}\r\n\r\n// https://stackoverflow.com/a/60766129\r\nexport class TwoWayReadonlyMap {\r\n    map: Map<string, string>;\r\n    lefts: string[];\r\n    rights: string[];\r\n\r\n    constructor(map: Record<string, string>) {\r\n        this.map = new Map<string, string>();\r\n        this.lefts = [];\r\n        this.rights = [];\r\n        for (let member in map) {\r\n            this.lefts.push(member);\r\n            this.rights.push(map[member]);\r\n            this.map.set(member, map[member]);\r\n            this.map.set(map[member], member);\r\n        }\r\n    }\r\n\r\n    get(key: string) {\r\n        return this.map.get(key);\r\n    }\r\n}\r\n\r\nexport function capitalize(str: string): string {\r\n    if (typeof str !== 'string') {\r\n        return '';\r\n    }\r\n    return str.charAt(0).toUpperCase() + str.slice(1);\r\n}\r\n\r\nexport function last<T>(array: T[]): T {\r\n    return array[array.length - 1];\r\n}\r\n\r\n/*\r\nko.bindingHandlers.select2 = {\r\n    after: [\"options\", \"value\"],\r\n    init: function (el, valueAccessor, allBindingsAccessor, viewModel) {\r\n        $(el).select2(ko.unwrap(valueAccessor()));\r\n        ko.utils.domNodeDisposal.addDisposeCallback(el, function () {\r\n            $(el).select2('destroy');\r\n        });\r\n    },\r\n    update: function (el, valueAccessor, allBindingsAccessor, viewModel) {\r\n        var allBindings = allBindingsAccessor();\r\n        var select2 = $(el).data(\"select2\");\r\n        if (\"value\" in allBindings) {\r\n            var newValue = \"\" + ko.unwrap(allBindings.value);\r\n            if ((allBindings.select2.multiple || el.multiple) && newValue.constructor !== Array) {\r\n                // @ts-ignore\r\n                select2.val([newValue.split(\",\")]);\r\n            }\r\n            else {\r\n                // @ts-ignore\r\n                select2.val([newValue]);\r\n            }\r\n        }\r\n    }\r\n};*/\r\n\r\n\r\nko.bindingHandlers.multiselect = {\r\n    init: function (element, valueAccessor, allBindingAccessors) {\r\n        let options = valueAccessor();\r\n\r\n        // Pay attention to model updates\r\n        ko.bindingHandlers['options'].update(element, () => options.options, allBindingAccessors);\r\n        // TypeScript thinks that this bindingHandler has a smaller number of args for some reason\r\n        // @ts-ignore\r\n        ko.bindingHandlers['selectedOptions'].init(element, () => options.selectedOptions, allBindingAccessors);\r\n        // @ts-ignore\r\n        ko.bindingHandlers['selectedOptions'].update(element, () => options.selectedOptions, allBindingAccessors);\r\n\r\n        // @ts-ignore\r\n        $(element).multiSelect(options.config);\r\n\r\n\r\n        //make view model know about select/deselect changes\r\n        // @ts-ignore\r\n        $(element).multiSelect({\r\n            afterSelect: function (values: any) {\r\n                for (let i = 0; i < values.length; i += 1) {\r\n                    options.selectedOptions.push(values[i]);\r\n                }\r\n            }, afterDeselect: function (values: any) {\r\n                for (let i = 0; i < values.length; i += 1) {\r\n                    options.selectedOptions.remove(values[i]);\r\n                }\r\n            }\r\n        });\r\n    },\r\n    update: function (element, valueAccessor, allBindingAccessors) {\r\n        let options = valueAccessor();\r\n        console.log(options.options(), options.selectedOptions());\r\n        //update html if items set through code\r\n        // @ts-ignore\r\n        ko.bindingHandlers.selectedOptions.update(element, () => options.selectedOptions, allBindingAccessors);\r\n        options.options().forEach((option: any) => {\r\n            // @ts-ignore\r\n            $(element).multiSelect(\"addOption\", {value: option.id, text: option[options.optionsText]()})\r\n        });\r\n\r\n        // @ts-ignore\r\n        $(element).multiSelect(\"refresh\");\r\n    }\r\n};\r\n\r\n/** assumes array elements are primitive types\r\n * check whether 2 arrays are equal sets.\r\n * @param  {} a1 is an array\r\n * @param  {} a2 is an array\r\n */\r\nexport function areArraysEqualSets(a1: number[], a2: number[]) {\r\n    const superSet: Record<number, number> = {};\r\n    for (const i of a1) {\r\n        superSet[i] = 1;\r\n    }\r\n\r\n    for (const i of a2) {\r\n        if (!superSet[i]) {\r\n            return false;\r\n        }\r\n        superSet[i] = 2;\r\n    }\r\n\r\n    for (let i in superSet) {\r\n        if (superSet[i] === 1) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\n/** Simple binding for handling optgroups **/\r\nko.bindingHandlers.option = {\r\n    update: function(element, valueAccessor) {\r\n       let value = ko.utils.unwrapObservable(valueAccessor());\r\n       ko.selectExtensions.writeValue(element, value);\r\n    }\r\n};","\r\ndeclare global {\r\n    var $URL_ROOT: string;\r\n    var $MAIN_BLOCKPY_EDITOR: any;\r\n}\r\n\r\nexport function ajax_get(url: string, data: any) {\r\n    return $.get(window[\"$URL_ROOT\"]+url, data);\r\n}\r\n\r\nexport function hideOverlay() {\r\n    $('.overlay').hide();\r\n}\r\nexport function showOverlay() {\r\n    $('.overlay').show();\r\n}","const monthNames = [\r\n    \"Jan\", \"Feb\", \"Mar\",\r\n    \"Apr\", \"May\", \"June\", \"July\",\r\n    \"Aug\", \"Sept\", \"Oct\",\r\n    \"Nov\", \"Dec\"\r\n];\r\nconst weekDays = [\r\n    \"Sun\", \"Mon\", \"Tue\",\r\n    \"Wed\", \"Thu\", \"Fri\",\r\n    \"Sat\"\r\n];\r\n\r\nexport function isSameDay(first: Date, second: Date) {\r\n    return first.getDate() === second.getDate() &&\r\n        first.getMonth() === second.getMonth() &&\r\n        first.getFullYear() === second.getFullYear();\r\n}\r\n\r\n/**\r\n * Helper function to parse a date/time string and rewrite it as something\r\n * more human readable.\r\n * @param {String} timeString - the string representation of time (\"YYYYMMDD HHMMSS\")\r\n * @returns {String} - A human-readable time string.\r\n */\r\nexport function prettyPrintDateTime(timeString: string|number): string {\r\n    /*let year = timeString.slice(0, 4),\r\n        month = parseInt(timeString.slice(4, 6), 10)-1,\r\n        day = timeString.slice(6, 8),\r\n        hour = timeString.slice(9, 11),\r\n        minutes = timeString.slice(11, 13),\r\n        seconds = timeString.slice(13, 15);*/\r\n    // TODO: Handle timezones correctly\r\n    if (timeString === undefined) {\r\n        return \"Undefined Time\";\r\n    }\r\n    let now = new Date();\r\n    let past = new Date(timeString);\r\n    if (isSameDay(now, past)) {\r\n        return \"Today at \"+past.toLocaleTimeString();\r\n    } else {\r\n        let dayStr = weekDays[past.getDay()];\r\n        let monthStr = monthNames[past.getMonth()];\r\n        let date = dayStr + \", \" + monthStr + \" \" + past.getDate();\r\n        if (now.getFullYear() === past.getFullYear()) {\r\n            return date + \" at \"+past.toLocaleTimeString();\r\n        } else {\r\n            return date + \", \"+past.getFullYear() + \" at \"+past.toLocaleTimeString();\r\n        }\r\n    }\r\n}\r\n\r\nexport function prettyPrintDateTimeString(timeString: string): string {\r\n    /*let year = timeString.slice(0, 4),\r\n        month = parseInt(timeString.slice(4, 6), 10)-1,\r\n        day = timeString.slice(6, 8),\r\n        hour = timeString.slice(9, 11),\r\n        minutes = timeString.slice(11, 13),\r\n        seconds = timeString.slice(13, 15);*/\r\n    // TODO: Handle timezones correctly\r\n    return prettyPrintDateTime(parseInt(timeString, 10));\r\n}\r\n\r\nexport function prettyPrintDate(timeString: string): string {\r\n    if (timeString === undefined) {\r\n        return \"Undefined Time\";\r\n    }\r\n    let now = new Date();\r\n    let past = new Date(parseInt(timeString, 10));\r\n    if (isSameDay(now, past)) {\r\n        return \"Today\";\r\n    } else {\r\n        let dayStr = weekDays[past.getDay()];\r\n        let monthStr = monthNames[past.getMonth()];\r\n        let date = dayStr + \", \" + monthStr + \" \" + past.getDate();\r\n        if (now.getFullYear() === past.getFullYear()) {\r\n            return date;\r\n        } else {\r\n            return date + \", \"+past.getFullYear();\r\n        }\r\n    }\r\n}\r\n\r\nexport function prettyPrintTime(timeString: string): string {\r\n    if (timeString === undefined) {\r\n        return \"Undefined Time\";\r\n    }\r\n    let past = new Date(parseInt(timeString, 10));\r\n    return past.toLocaleTimeString();\r\n}\r\n\r\nexport function formatDuration(earlier: string, later: string) {\r\n    if (earlier === null) {\r\n        return \"Never\";\r\n    }\r\n    let timeEarlier = new Date(parseInt(earlier, 10));\r\n    let timeLater = later === null ? new Date() : new Date(parseInt(later, 10));\r\n    let delta = Math.abs(timeLater.getTime() - timeEarlier.getTime())/1000;\r\n    let sign = timeLater.getTime() > timeEarlier.getTime() ? ' earlier' : ' later';\r\n\r\n    let years = Math.floor(delta / (365*3600*24));\r\n    let days = Math.floor(delta % (365*3600*24) / (3600*24));\r\n    let hours = Math.floor(delta % (3600*24) / 3600);\r\n    let minutes = Math.floor(delta % 3600 / 60);\r\n    let seconds = Math.floor(delta % 60);\r\n\r\n    let yearsDisplay = `${years} year${years!==1? 's': ''}`;\r\n    let daysDisplay = `${days} day${days!==1? 's': ''}`;\r\n    let hoursDisplay = `${hours} hour${hours!==1? 's': ''}`;\r\n    let minutesDisplay = `${minutes} minute${minutes!==1? 's': ''}`;\r\n    let secondsDisplay = `${seconds} second${seconds!==1? 's': ''}`;\r\n\r\n    if (delta < 1) {\r\n        return \"At this time\";\r\n    } else if (delta < 60) {\r\n        return secondsDisplay+sign;\r\n    } else if (delta < 60*10) {\r\n        return minutesDisplay+\", \"+secondsDisplay+sign;\r\n    } else if (delta < 60*60) {\r\n        return minutesDisplay+sign;\r\n    } else if (delta < 24*60*60) {\r\n        return hoursDisplay+\", \"+minutesDisplay+sign;\r\n    } else if (delta < 365*24*60*60) {\r\n        return daysDisplay+\", \"+hoursDisplay+sign;\r\n    } else {\r\n        return yearsDisplay+\", \"+daysDisplay+sign;\r\n    }\r\n}","import * as ko from 'knockout';\r\nimport {TwoWayReadonlyMap} from \"../components/plugins\";\r\nimport {ajax_get} from \"../components/ajax\";\r\nimport {prettyPrintDateTime} from \"../components/dates\";\r\nimport {Server} from \"../components/server\";\r\n\r\nexport interface ModelJson {\r\n    id: number;\r\n    date_modified: string;\r\n    date_created: string;\r\n}\r\n\r\n\r\nexport abstract class Model<T extends ModelJson> {\r\n    id: number;\r\n    dateCreated: ko.Observable<string>;\r\n    dateModified: ko.Observable<string>;\r\n    private readonly prettyDateCreated: KnockoutReadonlyComputed<string>;\r\n    private readonly prettyDateModified: KnockoutReadonlyComputed<string>;\r\n\r\n    FIELDS: TwoWayReadonlyMap = new TwoWayReadonlyMap({\r\n        \"date_modified\": \"dateModified\",\r\n        \"date_created\": \"dateCreated\"\r\n    });\r\n\r\n    protected constructor(data: T) {\r\n        this.id = data.id;\r\n        this.dateModified = ko.observable(data.date_modified);\r\n        this.dateCreated = ko.observable(data.date_created);\r\n        this.prettyDateCreated = ko.pureComputed(() => prettyPrintDateTime(this.dateCreated()));\r\n        this.prettyDateModified = ko.pureComputed(() => prettyPrintDateTime(this.dateModified()));\r\n    }\r\n\r\n    fromJson(data: T) {\r\n        this.FIELDS.lefts.forEach((left) => {\r\n            // @ts-ignore\r\n            this[this.FIELDS.get(left)](data[left]);\r\n        });\r\n    }\r\n\r\n    koFromJson(data: T) {\r\n        this.FIELDS.lefts.forEach((left) => {\r\n            // @ts-ignore\r\n            this[this.FIELDS.get(left)] = ko.observable(data[left]);\r\n        });\r\n    }\r\n\r\n    toJson(): T {\r\n        let data = {id: this.id};\r\n        // @ts-ignore\r\n        this.FIELDS.rights.forEach((right) => data[this.FIELDS.get(right)]=this[right]());\r\n        return <T>data;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport function dateCreatedSorter<J extends ModelJson, L extends Model<J>>(left: L, right: L): number {\r\n    return left.dateCreated() === right.dateCreated() ? 0\r\n         : left.dateCreated() < right.dateCreated() ? -1\r\n         : 1;\r\n}\r\n\r\n\r\nexport abstract class ModelStore<J extends ModelJson, T extends Model<J>> {\r\n    protected readonly data: Record<number, T>;\r\n    protected courseId: number|null;\r\n\r\n    private timer: number;\r\n    private readonly delayedData: ko.ObservableArray<T>;\r\n    isLoading: ko.PureComputed<boolean>;\r\n\r\n    protected readonly server: Server;\r\n\r\n    constructor(server: Server, courseId: number|null, initialIds: number[], initialData: J[]) {\r\n        this.data = {};\r\n        this.server = server;\r\n        this.courseId = courseId;\r\n        this.delayedData = ko.observableArray([]);\r\n        this.timer = null;\r\n        if (initialData !== undefined) {\r\n            initialData.map((instance: J) => this.newInstance(instance));\r\n        }\r\n        if (initialIds !== undefined) {\r\n            initialIds.map((id: number) => this.getInstance(id));\r\n        }\r\n\r\n        this.isLoading = ko.pureComputed(() => {\r\n            return this.delayedData().length > 0;\r\n        }, this);\r\n    }\r\n\r\n    getInstance(id: number): T {\r\n        if (this.data[id] !== undefined) {\r\n            return this.data[id];\r\n        } else {\r\n            let delayedInstance = this.makeEmptyInstance(id);\r\n            this.delayLoadInstance(delayedInstance);\r\n            this.data[id] = delayedInstance;\r\n            return delayedInstance;\r\n        }\r\n    }\r\n\r\n    delayLoadInstance(instance: T) {\r\n        clearTimeout(this.timer);\r\n        this.delayedData.push(instance);\r\n        this.queueFinishDelay();\r\n    }\r\n\r\n    queueFinishDelay() {\r\n        if (this.delayedData().length > 25) {\r\n            this.finishDelayedLoads();\r\n        } else if (this.delayedData().length > 0) {\r\n            this.timer = window.setTimeout(this.finishDelayedLoads.bind(this), 1000);\r\n        }\r\n    }\r\n\r\n    getInstances(ids: number[]): T[] {\r\n        return ids.map(this.getInstance.bind(this));\r\n    }\r\n\r\n    getLoaded(): T[] {\r\n        // @ts-ignore\r\n        return Object.keys(this.data).map((key: number) => this.data[key]);\r\n    }\r\n\r\n    getAllAvailable(payload?: object) {\r\n        if (payload === undefined) {\r\n            payload = this.getPayload();\r\n        }\r\n        let url = this.getUrl();\r\n        return new Promise((resolve, reject) => {\r\n            ajax_get(url, payload).then((data) => {\r\n                if (data.success) {\r\n                    let results = data[this.GET_FIELD];\r\n                    let created = results.map( (modelJson: J) => {\r\n                        return this.newInstance(modelJson);\r\n                    });\r\n                    resolve(this.cleanData(created));\r\n                } else {\r\n                    reject(data);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    cleanData(models: T[]): T[] {\r\n        return models;\r\n    }\r\n\r\n    /**\r\n     * Start keeping track of the given instance\r\n     * @param instance\r\n     */\r\n    trackInstance(instance: T): T {\r\n        this.data[instance.id] = instance;\r\n        return instance;\r\n    }\r\n\r\n    /**\r\n     * Create a new instance from the model and track it\r\n     * @param modelJson\r\n     */\r\n    newInstance(modelJson: J): T {\r\n        this.data[modelJson.id] = this.makeEmptyInstance(modelJson.id);\r\n        this.data[modelJson.id].fromJson(modelJson);\r\n        return this.data[modelJson.id];\r\n    }\r\n\r\n    abstract getUrl(): string;\r\n    abstract getLocalStorageKey(): string;\r\n    abstract getPayload(): any;\r\n    abstract makeEmptyInstance(id: number): T;\r\n    abstract GET_FIELD: string;\r\n\r\n    sortMethod(left: T, right: T): number {\r\n        return 0;\r\n    }\r\n\r\n    finishDelayedLoads() {\r\n        let payload = this.getPayload();\r\n        let url = this.getUrl();\r\n        //this.delayedData().length= 0;\r\n        return ajax_get(url, payload).then((data) => {\r\n           if (data.success) {\r\n               let results = data[this.GET_FIELD];\r\n               let created = results.map( (modelJson: J) => {\r\n                   this.data[modelJson.id].fromJson(modelJson);\r\n                   return modelJson.id;\r\n               });\r\n               this.removeDelayedInstances(created);\r\n           } else {\r\n               console.error(data);\r\n           }\r\n        });\r\n    }\r\n\r\n    protected getDelayedIds(): number[] {\r\n        return this.delayedData().map((instance: T) => instance.id);\r\n    }\r\n\r\n    removeDelayedInstances(ids: number[]) {\r\n        this.delayedData(this.delayedData().filter((delayedInstance: T) => !ids.includes(delayedInstance.id)));\r\n        this.queueFinishDelay();\r\n    }\r\n}","import * as ko from 'knockout';\r\nimport {Model, ModelJson, ModelStore} from \"./model\";\r\nimport {capitalize, TwoWayReadonlyMap} from \"../components/plugins\";\r\nimport {ajax_get} from \"../components/ajax\";\r\n\r\nexport interface AssignmentGroupJson extends ModelJson {\r\n    id: number;\r\n    name: string;\r\n    url: string;\r\n\r\n    position: number;\r\n\r\n    forked_id: number;\r\n    forked_version: number;\r\n    owner_id: number;\r\n    course_id: number;\r\n    version: number;\r\n}\r\n\r\nexport class AssignmentGroup extends Model<AssignmentGroupJson> {\r\n    id: number;\r\n    name: KnockoutObservable<string>;\r\n    url: KnockoutObservable<string>;\r\n    position: KnockoutObservable<number>;\r\n    forkedId: KnockoutObservable<number>;\r\n    forkedVersion: KnockoutObservable<number>;\r\n    ownerId: KnockoutObservable<number>;\r\n    courseId: KnockoutObservable<number>;\r\n    version: KnockoutObservable<number>;\r\n\r\n    FIELDS: TwoWayReadonlyMap = new TwoWayReadonlyMap({\r\n        \"name\": \"name\",\r\n        \"url\": \"url\",\r\n        \"position\": \"position\",\r\n        \"forked_id\": \"forkedId\",\r\n        \"forked_version\": \"forkedVersion\",\r\n        \"owner_id\": \"ownerId\",\r\n        \"course_id\": \"courseId\",\r\n        \"version\": \"version\",\r\n        \"date_modified\": \"dateModified\",\r\n        \"date_created\": \"dateCreated\"\r\n    });\r\n\r\n    constructor(data: AssignmentGroupJson) {\r\n        super(data);\r\n        this.koFromJson(data);\r\n    }\r\n}\r\n\r\nexport class AssignmentGroupStore extends ModelStore<AssignmentGroupJson, AssignmentGroup> {\r\n    GET_FIELD: string = \"assignment_groups\";\r\n\r\n    getPayload(): any {\r\n        return {\r\n            assignment_group_ids: this.getDelayedIds().join(\",\"),\r\n            course_id: this.courseId\r\n        };\r\n    }\r\n\r\n    getUrl(): string {\r\n        return \"assignment_groups/get_ids\";\r\n    }\r\n\r\n    makeEmptyInstance(id: number): AssignmentGroup {\r\n        return new AssignmentGroup({\r\n            id: id,\r\n            date_created: null,\r\n            date_modified: null,\r\n            name: \"Unknown\",\r\n            url: \"\",\r\n            position: 0,\r\n            forked_id: 0,\r\n            forked_version: 0,\r\n            owner_id: 0,\r\n            course_id: 0,\r\n            version: 0\r\n        });\r\n    }\r\n\r\n    getLocalStorageKey(): string {\r\n        return `BLOCKPY_COURSE_${this.courseId}_ASSIGNMENT_GROUPS`;\r\n    }\r\n}\r\n\r\nexport const AssignmentGroupTemplate = `\r\n    <div>Assignment Group: <span data-bind=\"text: name\"></span></div>\r\n`;\r\n\r\n\r\nko.components.register(\"assignment-group\", {\r\n    viewModel: AssignmentGroup,\r\n    template: AssignmentGroupTemplate\r\n});","import * as ko from 'knockout';\r\nimport {AssignmentGroup, AssignmentGroupJson} from \"../models/assignment_group\";\r\nimport {ajax_get} from \"./ajax\";\r\n\r\nexport class GroupList {\r\n    groups: KnockoutObservableArray<AssignmentGroup>;\r\n\r\n    constructor() {\r\n        this.groups = ko.observableArray<AssignmentGroup>([]);\r\n        $().ready(() => this.load());\r\n    }\r\n\r\n    load() {\r\n        ajax_get(\"get/\", {course_id: 3}).then((data) => {\r\n            this.groups(data.groups.map( (g: AssignmentGroupJson) => new AssignmentGroup(g)));\r\n        });\r\n    }\r\n}\r\n\r\nexport const GroupListTemplate = `\r\n    <div>Groups:\r\n        <div data-bind=\"foreach: groups\">\r\n            <div data-bind=\"component: {name: 'assignment-group', params: $data}\"></assignment-group>\r\n        </div>\r\n    </div>\r\n`;\r\n\r\nko.components.register(\"group-list\", {\r\n    viewModel: GroupList,\r\n    template: GroupListTemplate\r\n});","import * as ko from 'knockout';\r\nimport {Model, ModelJson, ModelStore} from \"./model\";\r\nimport {capitalize, TwoWayReadonlyMap} from \"../components/plugins\";\r\nimport {ajax_get} from \"../components/ajax\";\r\nimport {Server} from \"../components/server\";\r\n\r\nexport interface RoleJson extends ModelJson {\r\n    id: number;\r\n    name: string;\r\n    user_id: number;\r\n    course_id: number;\r\n}\r\n\r\nexport class Role extends Model<RoleJson> {\r\n    id: number;\r\n    userId: KnockoutObservable<number>;\r\n    courseId: KnockoutObservable<number>;\r\n    name: KnockoutObservable<string>;\r\n    FIELDS: TwoWayReadonlyMap = new TwoWayReadonlyMap({\r\n        \"user_id\": \"userId\",\r\n        \"course_id\": \"courseId\",\r\n        \"name\": \"name\",\r\n        \"date_modified\": \"dateModified\",\r\n        \"date_created\": \"dateCreated\"\r\n    });\r\n\r\n    constructor(data: RoleJson) {\r\n        super(data);\r\n        this.koFromJson(data);\r\n    }\r\n}\r\n\r\nexport interface UserJson extends ModelJson {\r\n    id: number;\r\n    email: string;\r\n    first_name: string;\r\n    last_name: string;\r\n    roles?: RoleJson[];\r\n}\r\n\r\nexport function cleanRole(role: string) {\r\n    let components = role.split(\"/\");\r\n    role = components[components.length-1];\r\n    return capitalize(role);\r\n}\r\n\r\nexport class User extends Model<UserJson> {\r\n    id: number;\r\n    email: KnockoutObservable<string>;\r\n    firstName: KnockoutObservable<string>;\r\n    lastName: KnockoutObservable<string>;\r\n    roles: KnockoutObservableArray<Role>;\r\n    FIELDS: TwoWayReadonlyMap = new TwoWayReadonlyMap({\r\n        \"email\": \"email\",\r\n        \"first_name\": \"firstName\",\r\n        \"last_name\": \"lastName\"\r\n    });\r\n\r\n    // Computed fields\r\n    name: KnockoutReadonlyComputed<string>;\r\n    primaryRole: KnockoutReadonlyComputed<string>;\r\n    title: KnockoutReadonlyComputed<string>;\r\n    displayMode: KnockoutObservable<UserDisplayMode>;\r\n\r\n    constructor(data: UserJson) {\r\n        super(data);\r\n        this.koFromJson(data);\r\n        this.name = ko.pureComputed(() => {\r\n            return this.firstName() + \" \" + this.lastName();\r\n        }, this);\r\n        this.primaryRole = ko.pureComputed(() => {\r\n            if (!this.roles().length) {\r\n                return \"User\";\r\n            } else {\r\n                return this.roles().map((role: Role) => cleanRole(role.name())).join(\"/\");\r\n            }\r\n        }, this);\r\n        this.title = ko.pureComputed(() => {\r\n            if (!this.displayMode) {\r\n                return this.name();\r\n            }\r\n            switch (this.displayMode()) {\r\n                case UserDisplayMode.LAST_FIRST:\r\n                    return this.lastName() + \", \" + this.firstName();\r\n                case UserDisplayMode.EMAIL:\r\n                    return this.email();\r\n                case UserDisplayMode.BLOCKPY_ID:\r\n                    return \"\"+this.id;\r\n                default:\r\n                case UserDisplayMode.FIRST_LAST:\r\n                    return this.name();\r\n            }\r\n        }, this);\r\n    }\r\n\r\n    koFromJson(data: UserJson) {\r\n        super.koFromJson(data);\r\n        let roles: Role[] = [];\r\n        if (data.roles) {\r\n            roles = data.roles.map((role: RoleJson) => new Role(role));\r\n        }\r\n        this.roles = ko.observableArray(roles);\r\n    }\r\n\r\n    fromJson(data: UserJson) {\r\n        super.fromJson(data);\r\n        this.roles.removeAll();\r\n        if (data.roles) {\r\n            data.roles.forEach((role: RoleJson) => this.roles.push(new Role(role)));\r\n        }\r\n    }\r\n\r\n    toJson(): UserJson {\r\n        let result: UserJson = super.toJson();\r\n        result.roles = this.roles().map((role: Role) => role.toJson());\r\n        return result;\r\n    }\r\n}\r\n\r\nexport enum UserDisplayMode {\r\n    FIRST_LAST=\"First name last name\",\r\n    LAST_FIRST=\"Last name, first name\",\r\n    EMAIL=\"Email\",\r\n    BLOCKPY_ID=\"Internal BlockPy ID\",\r\n    //DATE_CREATED=\"Date created\"\r\n}\r\n\r\nexport class UserStore extends ModelStore<UserJson, User> {\r\n    GET_FIELD: string = \"users\";\r\n    private readonly displayOptions: UserDisplayMode[];\r\n    sortMode: KnockoutObservable<UserDisplayMode>;\r\n    private displayMode: KnockoutObservable<UserDisplayMode>;\r\n\r\n    constructor(server: Server, courseId: number|null, initialIds: number[], initialData: UserJson[]) {\r\n        super(server, courseId, initialIds, initialData);\r\n        this.sortMode = ko.observable(<UserDisplayMode>localStorage.getItem(`BLOCKPY_COURSE_USER_SORT_MODE`) || UserDisplayMode.FIRST_LAST);\r\n        this.displayMode = ko.observable(<UserDisplayMode>localStorage.getItem(`BLOCKPY_COURSE_USER_DISPLAY_MODE`) || UserDisplayMode.FIRST_LAST);\r\n\r\n        this.sortMode.subscribe(() => {\r\n            localStorage.setItem(`BLOCKPY_COURSE_USER_SORT_MODE`, this.sortMode());\r\n            // Notify the user set selector?\r\n        });\r\n        this.displayMode.subscribe(() => {\r\n            localStorage.setItem(`BLOCKPY_COURSE_USER_DISPLAY_MODE`, this.displayMode());\r\n        });\r\n        this.displayOptions = Object.values(UserDisplayMode);\r\n    }\r\n\r\n    sortMethod(left: User, right: User): number {\r\n        switch (this.sortMode()) {\r\n            case UserDisplayMode.FIRST_LAST:\r\n                return (left.firstName() === right.firstName()) ?\r\n                    left.lastName().localeCompare(right.lastName()) :\r\n                    left.firstName().localeCompare(right.firstName());\r\n            case UserDisplayMode.LAST_FIRST:\r\n                return (left.lastName() === right.lastName()) ?\r\n                    left.firstName().localeCompare(right.firstName()) :\r\n                    left.lastName().localeCompare(right.lastName());\r\n            case UserDisplayMode.BLOCKPY_ID:\r\n                return (left.id - right.id);\r\n            default:\r\n            case UserDisplayMode.EMAIL:\r\n                return (left.email().localeCompare(right.email()));\r\n            /*case UserDisplayMode.DATE_CREATED:\r\n                return left.dateCreated() === null ? 1 : right.dateCreated() === null ? -1 :\r\n                    (left.dateCreated().localeCompare(right.dateCreated()));*/\r\n        }\r\n    }\r\n\r\n    cleanData(models: User[]): User[] {\r\n        return models.sort(this.sortMethod.bind(this));\r\n    }\r\n\r\n    getPayload(): any {\r\n        return {\r\n            user_ids: this.getDelayedIds().join(\",\"),\r\n            course_id: this.courseId\r\n        };\r\n    }\r\n\r\n    getUrl(): string {\r\n        return \"courses/users\";\r\n    }\r\n\r\n    getLocalStorageKey(): string {\r\n        return `BLOCKPY_COURSE_${this.courseId}_USERS`;\r\n    }\r\n\r\n    makeEmptyInstance(id: number): User {\r\n        let u = new User({\r\n            id: id,\r\n            email: \"\",\r\n            date_created: null,\r\n            date_modified: null,\r\n            first_name: \"\",\r\n            last_name: \"Unknown\"\r\n        });\r\n        u.displayMode = this.displayMode;\r\n        return u;\r\n    }\r\n}\r\n\r\nexport const UserTemplate = `\r\n    <div>User: <span data-bind=\"text: title\"></span></div>\r\n`;\r\n\r\nexport const UserShortTemplate = `\r\n    <div><span data-bind=\"text: primaryRole\"></span>: <span data-bind=\"text: title\"></span></div>\r\n`;\r\n\r\nexport const UserDisplaySettingsEditor = `\r\n<div>\r\n    <button class=\"btn btn-outline-secondary btn-sm float-right\" type=\"button\"\r\n            data-toggle=\"collapse\" data-target=\"#user-display-settings\"\r\n            aria-expanded=\"false\" aria-controls=\"collapseExample\">\r\n        User Settings <span class=\"fas fa-expand-arrows-alt\"></span>\r\n    </button>\r\n    <div id=\"user-display-settings\" class=\"collapse\">\r\n    <form>\r\n        <div class=\"card card-body\">\r\n        <div class=\"form-group row\">\r\n            <label class=\"col-sm-4 col-form-label\" for=\"display-mode-select\">\r\n                Render user names as: \r\n            </label>\r\n            <div class=\"col-sm-8\">\r\n                <select id=\"display-mode-select\" class=\"custom-select\" data-bind=\"options: options, value: displayMode\"></select>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n            <label class=\"col-sm-4 col-form-label\" for=\"sort-mode-select\">\r\n                Sort user names as: \r\n            </label>\r\n            <div class=\"col-md-8\">\r\n                <select id=\"sort-mode-select\" class=\"custom-select\" data-bind=\"options: options, value: sortMode\"></select>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    </div>\r\n    </form>\r\n</div>\r\n`;\r\n\r\nko.components.register(\"user\", {\r\n    viewModel: User,\r\n    template: UserTemplate\r\n});\r\n\r\nko.components.register(\"user-short\", {\r\n    template: UserShortTemplate\r\n})\r\n\r\nko.components.register(\"user-display-settings-editor\", {\r\n    template: UserDisplaySettingsEditor\r\n})\r\n","import * as ko from 'knockout';\r\nimport {Model, ModelJson, ModelStore} from \"./model\";\r\nimport {capitalize, TwoWayReadonlyMap} from \"../components/plugins\";\r\nimport {ajax_get} from \"../components/ajax\";\r\n\r\nexport enum ServiceType {\r\n    NATIVE= \"native\",\r\n    LTI = \"lti\"\r\n}\r\n\r\nexport enum CourseVisibility {\r\n    PRIVATE=\"private\",\r\n    PUBLIC=\"public\"\r\n}\r\n\r\nexport interface CourseJson extends ModelJson {\r\n    id: number;\r\n    name: string;\r\n    url: string;\r\n    owner_id: number;\r\n    service: ServiceType;\r\n    external_id: string;\r\n    endpoint: string;\r\n    visibility: CourseVisibility;\r\n    term: string;\r\n    settings: string;\r\n}\r\n\r\nexport class Course extends Model<CourseJson> {\r\n    id: number;\r\n    name: KnockoutObservable<string>;\r\n    url: KnockoutObservable<string>;\r\n    ownerId: KnockoutObservable<number>;\r\n    service: KnockoutObservable<ServiceType>;\r\n    externalId: KnockoutObservable<string>;\r\n    endpoint: KnockoutObservable<string>;\r\n    visibility: KnockoutObservable<CourseVisibility>;\r\n    term: KnockoutObservable<string>;\r\n    settings: KnockoutObservable<string>;\r\n\r\n    FIELDS: TwoWayReadonlyMap = new TwoWayReadonlyMap({\r\n        \"name\": \"name\",\r\n        \"url\": \"url\",\r\n        \"owner_id\": \"ownerId\",\r\n        \"service\": \"service\",\r\n        \"external_id\": \"externalId\",\r\n        \"endpoint\": \"endpoint\",\r\n        \"visibility\": \"visibility\",\r\n        \"term\": \"term\",\r\n        \"settings\": \"settings\",\r\n        \"date_modified\": \"dateModified\",\r\n        \"date_created\": \"dateCreated\"\r\n    });\r\n\r\n    constructor(data: CourseJson) {\r\n        super(data);\r\n        this.koFromJson(data);\r\n    }\r\n}\r\n\r\nexport class CourseStore extends ModelStore<CourseJson, Course> {\r\n    GET_FIELD: string = \"courses\";\r\n\r\n    getPayload(): any {\r\n        return {\r\n            course_id: this.courseId\r\n        };\r\n    }\r\n\r\n    getUrl(): string {\r\n        return \"courses\";\r\n    }\r\n\r\n    getLocalStorageKey(): string {\r\n        return `BLOCKPY_COURSE_${this.courseId}_COURSES`;\r\n    }\r\n\r\n    makeEmptyInstance(id: number): Course {\r\n        return new Course({\r\n            id: id,\r\n            date_created: null,\r\n            date_modified: null,\r\n            endpoint: \"\",\r\n            external_id: \"\",\r\n            name: \"Unknown Course\",\r\n            owner_id: null,\r\n            service: null,\r\n            settings: \"\",\r\n            term: \"Unknown term\",\r\n            url: \"\",\r\n            visibility: null\r\n        });\r\n    }\r\n}\r\n\r\nexport const CourseTemplate = `\r\n    <div>Course: <span data-bind=\"text: name\"></span></div>\r\n`;\r\n\r\nko.components.register(\"course\", {\r\n    viewModel: Course,\r\n    template: CourseTemplate\r\n});\r\n","import * as ko from 'knockout';\r\nimport {Model, ModelJson, ModelStore} from \"./model\";\r\nimport {TwoWayReadonlyMap} from \"../components/plugins\";\r\n\r\nexport enum SubmissionStatus {\r\n    // Not yet begun - the value if the submission does not exist\r\n    INITIALIZED = \"Initialized\",\r\n    // Started -> not yet run\r\n    STARTED = \"Started\",\r\n    // inProgress -> Run, but not yet marked formally as \"submitted\"\r\n    IN_PROGRESS = \"inProgress\",\r\n    // Submitted -> formally marked\r\n    SUBMITTED = \"Submitted\",\r\n    // Completed -> Either formally Submitted and FullyGraded, or auto graded as \"correct\"\r\n    COMPLETED = \"Completed\"\r\n}\r\n\r\nexport enum GradingStatus {\r\n    FULLY_GRADED = 'FullyGraded',\r\n    PENDING = 'Pending',\r\n    PENDING_MANUAL = 'PendingManual',\r\n    FAILED = 'Failed',\r\n    NOT_READY = 'NotReady',\r\n}\r\n\r\nexport interface SubmissionJson extends ModelJson {\r\n    code: string;\r\n    extra_files: string;\r\n    url: string;\r\n    endpoint: string;\r\n    score: number;\r\n    correct: boolean;\r\n    submission_status: SubmissionStatus;\r\n    grading_status: GradingStatus;\r\n    assignment_id: number | null;\r\n    assignment_group_id: number | null;\r\n    assignment_version: number;\r\n    course_id: number | null;\r\n    user_id: number | null;\r\n    version: number;\r\n}\r\n\r\nexport class Submission extends Model<SubmissionJson> {\r\n    code: KnockoutObservable<string>;\r\n    extraFiles: KnockoutObservable<string>;\r\n    url: KnockoutObservable<string>;\r\n    endpoint: KnockoutObservable<string>;\r\n    score: KnockoutObservable<number>;\r\n    correct: KnockoutObservable<boolean>;\r\n    submissionStatus: KnockoutObservable<SubmissionStatus>;\r\n    gradingStatus: KnockoutObservable<GradingStatus>;\r\n    assignmentId: ko.Observable<number | null>;\r\n    assignmentGroupId: KnockoutObservable<number | null>;\r\n    assignmentVersion: ko.Observable<number>;\r\n    courseId: ko.Observable<number | null>;\r\n    userId: ko.Observable<number | null>;\r\n    version: KnockoutObservable<number>;\r\n\r\n    FIELDS: TwoWayReadonlyMap = new TwoWayReadonlyMap({\r\n        \"date_modified\": \"dateModified\",\r\n        \"date_created\": \"dateCreated\",\r\n        \"code\": \"code\",\r\n        \"extra_files\": \"extraFiles\",\r\n        \"url\": \"url\",\r\n        \"endpoint\": \"endpoint\",\r\n        \"score\": \"score\",\r\n        \"correct\": \"correct\",\r\n        \"submission_status\": \"submissionStatus\",\r\n        \"grading_status\": \"gradingStatus\",\r\n        \"assignment_id\": \"assignmentId\",\r\n        \"assignment_group_id\": \"assignmentGroupId\",\r\n        \"assignment_version\": \"assignmentVersion\",\r\n        \"course_id\": \"courseId\",\r\n        \"user_id\": \"userId\",\r\n        \"version\": \"version\"\r\n    });\r\n\r\n    constructor(data: SubmissionJson) {\r\n        super(data);\r\n        this.koFromJson(data);\r\n    }\r\n\r\n    getAsSubmissionKey(): string {\r\n        return [this.courseId(), this.userId(), this.assignmentId()].join(\",\");\r\n    }\r\n\r\n    checkGrading(expected: GradingStatus) {\r\n        return this.gradingStatus().toLowerCase() === expected.toLowerCase();\r\n    }\r\n\r\n    checkSubmission(expected: SubmissionStatus) {\r\n        return this.submissionStatus().toLowerCase() === expected.toLowerCase();\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class SubmissionStore extends ModelStore<SubmissionJson, Submission> {\r\n    GET_FIELD: string = \"submissions\";\r\n\r\n    getPayload(): any {\r\n        return {\r\n            submission_ids: this.getDelayedIds().join(\",\"),\r\n            course_id: this.courseId\r\n        };\r\n    }\r\n\r\n    getUrl(): string {\r\n        return \"submission/get_ids\";\r\n    }\r\n\r\n    makeEmptyInstance(id: number): Submission {\r\n        return new Submission({\r\n            assignment_group_id: null,\r\n            assignment_id: null,\r\n            assignment_version: 0,\r\n            code: \"\",\r\n            correct: false,\r\n            course_id: null,\r\n            endpoint: \"\",\r\n            extra_files: \"\",\r\n            grading_status: GradingStatus.NOT_READY,\r\n            score: 0,\r\n            submission_status: SubmissionStatus.INITIALIZED,\r\n            url: \"\",\r\n            user_id: undefined,\r\n            version: 0,\r\n            id: id,\r\n            date_created: null,\r\n            date_modified: null\r\n        });\r\n    }\r\n\r\n    getLocalStorageKey(): string {\r\n        return `BLOCKPY_COURSE_${this.courseId}_SUBMISSIONS`;\r\n    }\r\n}\r\n","import * as ko from 'knockout';\r\nimport {Model, ModelJson, ModelStore} from \"./model\";\r\nimport {capitalize, TwoWayReadonlyMap} from \"../components/plugins\";\r\nimport {ajax_get} from \"../components/ajax\";\r\nimport {AssignmentGroup, AssignmentGroupJson} from \"./assignment_group\";\r\n\r\nexport interface AssignmentJson extends ModelJson {\r\n    id: number;\r\n    name: string;\r\n    url: string;\r\n\r\n    type: string;\r\n    instructions: string;\r\n    reviewed: boolean;\r\n    hidden: boolean;\r\n    public: boolean;\r\n    ip_ranges: string;\r\n    points: number;\r\n    settings: string;\r\n\r\n    on_run: string;\r\n    on_change: string;\r\n    on_eval: string;\r\n    starting_code: string;\r\n    extra_instructor_files: string;\r\n    extra_starting_files: string;\r\n\r\n    forked_id: number;\r\n    forked_version: number;\r\n    owner_id: number;\r\n    course_id: number;\r\n    version: number;\r\n}\r\n\r\nexport class Assignment extends Model<AssignmentJson> {\r\n    id: number;\r\n    name: KnockoutObservable<string>;\r\n    url: KnockoutObservable<string>;\r\n    type: KnockoutObservable<string>;\r\n    instructions: KnockoutObservable<string>;\r\n    reviewed: KnockoutObservable<boolean>;\r\n    hidden: KnockoutObservable<boolean>;\r\n    public: KnockoutObservable<boolean>;\r\n    ipRanges: KnockoutObservable<string>;\r\n    settings: KnockoutObservable<string>;\r\n    points: KnockoutObservable<number>;\r\n    onRun: KnockoutObservable<string>;\r\n    onChange: KnockoutObservable<string>;\r\n    onEval: KnockoutObservable<string>;\r\n    startingCode: KnockoutObservable<string>;\r\n    extraInstructorFiles: KnockoutObservable<string>;\r\n    extraStartingFiles: KnockoutObservable<string>;\r\n    forkedId: KnockoutObservable<number>;\r\n    forkedVersion: KnockoutObservable<number>;\r\n    ownerId: KnockoutObservable<number>;\r\n    courseId: KnockoutObservable<number>;\r\n    version: KnockoutObservable<number>;\r\n\r\n    title: KnockoutReadonlyComputed<string>;\r\n    editUrl: KnockoutReadonlyComputed<string>;\r\n    group: KnockoutObservable<AssignmentGroup|null>;\r\n\r\n    FIELDS: TwoWayReadonlyMap = new TwoWayReadonlyMap({\r\n        \"name\": \"name\",\r\n        \"url\": \"url\",\r\n        \"type\": \"type\",\r\n        \"instructions\": \"instructions\",\r\n        \"reviewed\": \"reviewed\",\r\n        \"hidden\": \"hidden\",\r\n        \"public\": \"public\",\r\n        \"ip_ranges\": \"ipRanges\",\r\n        \"points\": \"points\",\r\n        \"settings\": \"settings\",\r\n        \"on_run\": \"onRun\",\r\n        \"on_change\": \"onChange\",\r\n        \"on_eval\": \"onEval\",\r\n        \"starting_code\": \"startingCode\",\r\n        \"extra_instructor_files\": \"extraInstructorFiles\",\r\n        \"extra_starting_files\": \"extraStartingFiles\",\r\n        \"forked_id\": \"forkedId\",\r\n        \"forked_version\": \"forkedVersion\",\r\n        \"owner_id\": \"ownerId\",\r\n        \"course_id\": \"courseId\",\r\n        \"version\": \"version\",\r\n        \"date_modified\": \"dateModified\",\r\n        \"date_created\": \"dateCreated\"\r\n    });\r\n\r\n    constructor(data: AssignmentJson) {\r\n        super(data);\r\n        this.group = ko.observable<AssignmentGroup>(null);\r\n        this.koFromJson(data);\r\n        this.title = ko.pureComputed<string>(() => {\r\n            if (this.type().toLowerCase() === \"maze\") {\r\n                return \"Maze \"+this.name();\r\n            } else {\r\n                return this.name();\r\n            }\r\n        }, this);\r\n        this.editUrl = ko.pureComputed<string>(() => {\r\n            return window[\"$URL_ROOT\"]+\"/assignments/load/?\" + (\r\n                this.url() ? `?assignment_url=${this.url()}`\r\n                    : `?assignment_id=${this.id}`);\r\n        }, this);\r\n    }\r\n}\r\n\r\nexport class AssignmentStore extends ModelStore<AssignmentJson, Assignment> {\r\n    GET_FIELD: string = \"assignments\";\r\n\r\n    getPayload(): any {\r\n        return {\r\n            assignment_ids: this.getDelayedIds().join(\",\"),\r\n            course_id: this.courseId\r\n        };\r\n    }\r\n\r\n    getUrl(): string {\r\n        return \"assignments/get_ids\";\r\n    }\r\n\r\n    makeEmptyInstance(id: number): Assignment {\r\n        return new Assignment({\r\n            id: id,\r\n            date_created: null,\r\n            date_modified: null,\r\n            name: \"Unknown\",\r\n            url: \"\",\r\n            type: \"unknown\",\r\n            instructions: \"\",\r\n            reviewed: false,\r\n            hidden: false,\r\n            public: false,\r\n            ip_ranges: \"\",\r\n            points: 1,\r\n            settings: \"\",\r\n            on_run: \"\",\r\n            on_change: \"\",\r\n            on_eval: \"\",\r\n            starting_code: \"\",\r\n            extra_instructor_files: \"\",\r\n            extra_starting_files: \"\",\r\n            forked_id: 0,\r\n            forked_version: 0,\r\n            owner_id: 0,\r\n            course_id: 0,\r\n            version: 0\r\n        });\r\n    }\r\n\r\n    getLocalStorageKey(): string {\r\n        return `BLOCKPY_COURSE_${this.courseId}_ASSIGNMENTS`;\r\n    }\r\n\r\n\r\n    getAllAvailable(payload?: any) {\r\n        payload = payload || this.getPayload();\r\n        let url = this.getUrl();\r\n        return new Promise((resolve, reject) => {\r\n            ajax_get(url, payload).then((data) => {\r\n                if (data.success) {\r\n                    let assignments: AssignmentJson[] = data.assignments;\r\n                    let groups: AssignmentGroupJson[] = data.groups;\r\n                    let created: Assignment[] = [];\r\n                    for (let i=0; i<assignments.length; i+= 1) {\r\n                        let assignment = this.newInstance(assignments[i]);\r\n                        if (groups[i] !== null) {\r\n                            let group = this.server.assignmentGroupStore.newInstance(groups[i]);\r\n                            assignment.group(group);\r\n                        }\r\n                        created.push(assignment);\r\n                    }\r\n                    resolve(created);\r\n                } else {\r\n                    reject(data);\r\n                }\r\n            });\r\n        });\r\n    }\r\n}\r\n\r\nexport const AssignmentTemplate = `\r\n    <div>Assignment: <span data-bind=\"text: name\"></span></div>\r\n`;\r\n\r\nexport const AssignmentShortTemplate = `\r\n    <div>Assignment: <span data-bind=\"text: name\"></span> (<span data-bind=\"text: url\"></span>)</div>\r\n`;\r\n\r\nko.components.register(\"assignment\", {\r\n    viewModel: Assignment,\r\n    template: AssignmentTemplate\r\n});\r\n\r\nko.components.register(\"assignment-short\", {\r\n    template: AssignmentShortTemplate\r\n})","import * as ko from 'knockout';\r\nimport {Model, ModelJson, ModelStore} from \"./model\";\r\nimport {TwoWayReadonlyMap} from \"../components/plugins\";\r\n\r\nexport interface ReviewJson extends ModelJson {\r\n    comment: string;\r\n    location: string;\r\n    generic: boolean;\r\n    tag_id: number | null;\r\n    score: number | null;\r\n    submission_id: number | null;\r\n    author_id: number;\r\n    assignment_version: number;\r\n    submission_version: number;\r\n    version: number;\r\n    forked_id: number | null;\r\n    forked_version: number | null;\r\n}\r\n\r\nexport class Review extends Model<ReviewJson> {\r\n    comment: KnockoutObservable<string>;\r\n    location: KnockoutObservable<string>;\r\n    generic: KnockoutObservable<boolean>;\r\n    tagId: KnockoutObservable<number | null>;\r\n    score: KnockoutObservable<number|null>;\r\n    submissionId: KnockoutObservable<number | null>;\r\n    authorId: KnockoutObservable<number>;\r\n    assignmentVersion: KnockoutObservable<number>;\r\n    submissionVersion: KnockoutObservable<number>;\r\n    version: KnockoutObservable<number>;\r\n    forkedId: KnockoutObservable<number | null>;\r\n    forkedVersion: KnockoutObservable<number | null>;\r\n\r\n\r\n    FIELDS: TwoWayReadonlyMap = new TwoWayReadonlyMap({\r\n        \"date_modified\": \"dateModified\",\r\n        \"date_created\": \"dateCreated\",\r\n        \"comment\": \"comment\",\r\n        \"location\": \"location\",\r\n        \"generic\": \"generic\",\r\n        \"tag_id\": \"tagId\",\r\n        \"score\": \"score\",\r\n        \"submission_id\": \"submissionId\",\r\n        \"author_id\": \"authorId\",\r\n        \"assignment_version\": \"assignmentVersion\",\r\n        \"submission_version\": \"submissionVersion\",\r\n        \"version\": \"version\",\r\n        \"forked_id\": \"forkedId\",\r\n        \"forked_version\": \"forkedVersion\",\r\n    });\r\n\r\n    constructor(data: ReviewJson) {\r\n        super(data);\r\n        this.koFromJson(data);\r\n    }\r\n}\r\n\r\n\r\nexport class ReviewStore extends ModelStore<ReviewJson, Review> {\r\n    GET_FIELD: string = \"submissions\";\r\n\r\n    getPayload(): any {\r\n        return {\r\n            submission_ids: this.getDelayedIds().join(\",\"),\r\n            course_id: this.courseId\r\n        };\r\n    }\r\n\r\n    getUrl(): string {\r\n        return \"submission/get_ids\";\r\n    }\r\n\r\n    makeEmptyInstance(id: number): Review {\r\n        return new Review({\r\n            assignment_version: 0,\r\n            author_id: 0,\r\n            comment: \"\",\r\n            forked_id: null,\r\n            forked_version: null,\r\n            generic: false,\r\n            location: \"\",\r\n            score: 0,\r\n            submission_id: null,\r\n            submission_version: 0,\r\n            tag_id: null,\r\n            version: 0,\r\n            id: id,\r\n            date_created: null,\r\n            date_modified: null\r\n        });\r\n    }\r\n\r\n    getLocalStorageKey(): string {\r\n        return `BLOCKPY_COURSE_${this.courseId}_REVIEWS`;\r\n    }\r\n}\r\n","import {UserJson, UserStore} from \"../models/user\";\r\nimport {AssignmentJson, AssignmentStore} from \"../models/assignment\";\r\nimport {AssignmentGroupJson, AssignmentGroupStore} from \"../models/assignment_group\";\r\nimport {CourseJson, CourseStore} from \"../models/course\";\r\nimport {ReviewJson, ReviewStore} from \"../models/review\";\r\nimport {SubmissionJson, SubmissionStore} from \"../models/submission\";\r\n\r\nexport interface ServerIds {\r\n    userIds?: number[];\r\n    courseIds?: number[];\r\n    assignmentIds?: number[];\r\n    assignmentGroupIds?: number[];\r\n    reviewIds?: number[];\r\n    submissionIds?: number[];\r\n}\r\n\r\nexport interface ServerData {\r\n    users?: UserJson[];\r\n    courses?: CourseJson[];\r\n    assignments?: AssignmentJson[];\r\n    assignmentGroups?: AssignmentGroupJson[];\r\n    reviews?: ReviewJson[];\r\n    submissions?: SubmissionJson[];\r\n}\r\n\r\n/**\r\n * Principle: None of the UI models hold the canonical lists. They all have references to this Server,\r\n * who holds the unique Stores, each of which has their own canonical lists.\r\n */\r\nexport class Server {\r\n    courseId: number;\r\n\r\n    userStore: UserStore;\r\n    courseStore: CourseStore;\r\n    assignmentStore: AssignmentStore;\r\n    assignmentGroupStore: AssignmentGroupStore;\r\n    reviewStore: ReviewStore;\r\n    submissionStore: SubmissionStore;\r\n\r\n    isLoading: ko.PureComputed<boolean>;\r\n\r\n    constructor(courseId: number, initialIds?: ServerIds, initialData?: ServerData) {\r\n        this.courseId = courseId;\r\n        this.userStore = new UserStore(this, courseId, initialIds.userIds, initialData.users);\r\n        this.courseStore = new CourseStore(this, courseId, initialIds.courseIds, initialData.courses);\r\n        this.assignmentStore = new AssignmentStore(this, courseId, initialIds.assignmentIds, initialData.assignments);\r\n        this.assignmentGroupStore = new AssignmentGroupStore(this, courseId, initialIds.assignmentGroupIds, initialData.assignmentGroups);\r\n        this.reviewStore = new ReviewStore(this, courseId, initialIds.reviewIds, initialData.reviews);\r\n        this.submissionStore = new SubmissionStore(this, courseId, initialIds.submissionIds, initialData.submissions);\r\n\r\n        this.isLoading = ko.pureComputed<boolean>(() => {\r\n            let a = this.assignmentStore.isLoading();\r\n            let u = this.userStore.isLoading();\r\n            let c = this.courseStore.isLoading();\r\n            let g = this.assignmentGroupStore.isLoading();\r\n            let r = this.reviewStore.isLoading();\r\n            let s = this.submissionStore.isLoading();\r\n            return a || u || c || g || r || s;\r\n        }, this);\r\n    }\r\n\r\n    makeBlockPyRequest(payload: any) {\r\n        let now = new Date();\r\n        payload['timestamp'] = now.getTime();\r\n        payload['timezone'] = now.getTimezoneOffset();\r\n        return payload;\r\n    }\r\n\r\n}\r\n","import * as ko from 'knockout';\r\nimport {Model, ModelJson} from \"./model\";\r\nimport {TwoWayReadonlyMap} from \"../components/plugins\";\r\n\r\nexport interface LogJson extends ModelJson {\r\n    assignment_id: number | null;\r\n    assignment_version: number;\r\n    course_id: number | null;\r\n    subject_id: number | null;\r\n    event_type: string;\r\n    file_path: string;\r\n    category: string;\r\n    label: string;\r\n    message: string;\r\n    client_timestamp: string;\r\n    client_timezone: string;\r\n}\r\n\r\nexport class Log extends Model<LogJson> {\r\n    assignmentId: ko.Observable<number | null>;\r\n    assignmentVersion: ko.Observable<number>;\r\n    courseId: ko.Observable<number | null>;\r\n    subjectId: ko.Observable<number | null>;\r\n    eventType: ko.Observable<string>;\r\n    filePath: ko.Observable<string>;\r\n    category: ko.Observable<string>;\r\n    label: ko.Observable<string>;\r\n    message: ko.Observable<string>;\r\n    clientTimestamp: ko.Observable<string>;\r\n    clientTimezone: ko.Observable<string>;\r\n\r\n    FIELDS: TwoWayReadonlyMap = new TwoWayReadonlyMap({\r\n        \"date_modified\": \"dateModified\",\r\n        \"date_created\": \"dateCreated\",\r\n        \"assignment_id\": \"assignmentId\",\r\n        \"assignment_version\": \"assignmentVersion\",\r\n        \"course_id\": \"courseId\",\r\n        \"subject_id\": \"subjectId\",\r\n        \"event_type\": \"eventType\",\r\n        \"file_path\": \"filePath\",\r\n        \"category\": \"category\",\r\n        \"label\": \"label\",\r\n        \"message\": \"message\",\r\n        \"client_timestamp\": \"clientTimestamp\",\r\n        \"client_timezone\": \"clientTimezone\"\r\n    });\r\n\r\n    constructor(data: LogJson) {\r\n        super(data);\r\n        this.koFromJson(data);\r\n    }\r\n\r\n    getAsSubmissionKey() {\r\n        return [this.courseId(), this.subjectId(), this.assignmentId()].join(\",\");\r\n    }\r\n\r\n    isEditEvent() {\r\n        return (this.eventType() === \"File.Edit\" || this.eventType() === \"File.Create\");\r\n    }\r\n\r\n    when() {\r\n        return this.clientTimestamp() || this.dateCreated();\r\n    }\r\n}\r\n\r\n// TODO: Finish processing all event types\r\nexport const REMAP_EVENT_TYPES: Record<string, string> = {\r\n    \"Session.Start\": \"Began session\",\r\n    \"X-IP.Change\": \"Changed IP address\",\r\n    \"File.Edit\": \"Edited code\",\r\n    \"File.Create\": \"Started assignment\",\r\n    \"Run.Program\": \"Ran program\",\r\n    \"Compile.Error\": \"Syntax error\",\r\n    \"X-Submission.LMS\": \"Updated grade\"\r\n};","import * as ko from 'knockout';\r\nimport {Model, ModelJson, ModelStore} from \"../models/model\";\r\nimport {User, UserJson, UserStore} from \"../models/user\";\r\nimport {areArraysEqualSets, pushObservableArray} from \"./plugins\";\r\nimport {Assignment, AssignmentJson} from \"../models/assignment\";\r\n\r\n// TODO: \"Add all\" and \"Remove all\" buttons for Set menu\r\n// TODO: If only one available, then collapse everything to just the one\r\n// TODO: Preload all groups/roles as default groups\r\n\r\ninterface ModelSetJson {\r\n    name: string;\r\n    ids: number[];\r\n    default: boolean;\r\n}\r\n\r\nexport class ModelSet {\r\n    name: KnockoutObservable<string>;\r\n    ids: KnockoutObservableArray<number>;\r\n    default: KnockoutObservable<boolean>;\r\n\r\n    constructor(params: ModelSetJson) {\r\n        this.name = ko.observable(params.name);\r\n        this.ids = ko.observableArray<number>(params.ids);\r\n        this.default = ko.observable(params.default);\r\n    }\r\n\r\n    getIds(): string {\r\n        return this.ids().join(\",\");\r\n    }\r\n\r\n    toJson(): ModelSetJson {\r\n        return {\r\n            name: this.name(),\r\n            ids: this.ids(),\r\n            default: this.default()\r\n        }\r\n    }\r\n\r\n    getStored() {\r\n        if (this.default()) {\r\n            return \"\";\r\n        } else {\r\n            return this.getIds();\r\n        }\r\n    }\r\n}\r\n\r\ninterface ModelSetSelectorJson<J extends ModelJson, T extends Model<J>> {\r\n    store: ModelStore<J, T>;\r\n    modelSet: KnockoutObservable<ModelSet>;\r\n    default: string;\r\n}\r\n\r\nexport enum SelectMode {\r\n    ALL=\"ALL\", SINGLE=\"SINGLE\", SET=\"SET\"\r\n}\r\n\r\n\r\nexport class ModelSetSelector<J extends ModelJson, T extends Model<J>> {\r\n    protected store: ModelStore<J, T>;\r\n    sets: KnockoutObservableArray<ModelSet>;\r\n    currentSet: KnockoutObservable<ModelSet>;\r\n\r\n    private readonly editorVisible: KnockoutObservable<boolean>;\r\n    private readonly selectMode: KnockoutObservable<SelectMode>;\r\n    protected readonly available: KnockoutObservableArray<T>;\r\n    private readonly selectedOptions: KnockoutObservableArray<number>;\r\n    private readonly singleSet: KnockoutObservable<ModelSet>;\r\n    private readonly singleOption: KnockoutObservable<number>;\r\n    private readonly showAll: KnockoutObservable<boolean>;\r\n    private readonly showAllThreshold: number = 7;\r\n    private bulkEditor: KnockoutObservable<string>;\r\n    protected prettyResult: KnockoutReadonlyComputed<T[]>;\r\n    private readonly isLoading: KnockoutObservable<boolean>;\r\n    protected nameAttr: string = \"name\";\r\n    protected getItemGroups: KnockoutReadonlyComputed<ModelSelectorItemGroup<J, T>[]>;\r\n\r\n    constructor(params: ModelSetSelectorJson<J, T>) {\r\n        // Create the complete list of users\r\n        this.store = params.store;\r\n        this.available = ko.observableArray<T>([]);\r\n        this.isLoading = ko.observable(true);\r\n        this.store.getAllAvailable().then((models: T[]) => {\r\n            pushObservableArray(this.available, models);\r\n            // Set first set to be ALL models\r\n            this.sets()[0].ids(models.map((u: T) => u.id));\r\n            // Load any custom user sets\r\n            this.loadDefault(params.default);\r\n            // Load in any grouped sets from the DB\r\n            this.loadGroups();\r\n            this.isLoading(false);\r\n        });\r\n\r\n        // Create single person model\r\n        this.selectMode = ko.observable<SelectMode>(SelectMode.ALL);\r\n        this.singleSet = ko.observable<ModelSet>(new ModelSet({default: false, ids: [], name: \"Just this one\"}))\r\n        this.singleOption = ko.observable<number>(null);\r\n        // Load in existing user sets, or create default one\r\n        let sets = this.loadFromLocalStorage().map((item:ModelSetJson)=> new ModelSet(item));\r\n        this.sets = ko.observableArray<ModelSet>(sets);\r\n        // Set the current user set to be the default user set\r\n        this.currentSet = params.modelSet;\r\n        this.currentSet(this.sets()[0]);\r\n        // Hide the editor\r\n        this.editorVisible = ko.observable(false);\r\n\r\n        // MultiSelect of selectable users\r\n        this.selectedOptions = ko.observableArray<number>([]);\r\n        // Bulk add emails/IDs\r\n        this.bulkEditor = ko.observable<string>(\"\");\r\n        // Default to not show all names\r\n        this.showAll = ko.observable(false);\r\n\r\n        this.currentSet.subscribe(() => {\r\n            if (this.editorVisible()) {\r\n                this.selectedOptions(this.currentSet().ids());\r\n            }\r\n        });\r\n\r\n        this.singleOption.subscribe(() => {\r\n            this.singleSet().ids([this.singleOption()]);\r\n            this.currentSet(this.singleSet());\r\n        });\r\n\r\n        this.selectMode.subscribe(() => {\r\n            switch (this.selectMode()) {\r\n                case SelectMode.ALL: case SelectMode.SET:\r\n                    this.currentSet(this.sets()[0]);\r\n                    break;\r\n                case SelectMode.SINGLE:\r\n                    this.currentSet(this.singleSet());\r\n            }\r\n        }, this);\r\n\r\n        this.selectedOptions.subscribe((changes) => {\r\n            if (this.currentSet().default()) {\r\n                let anyDeletions = changes.some((change) => change.status === \"deleted\");\r\n                if (anyDeletions) {\r\n                    let newOptions = this.selectedOptions();\r\n                    this.startAdding(newOptions);\r\n                }\r\n            }\r\n        }, this, \"arrayChange\");\r\n\r\n        this.prettyResult = ko.pureComputed<T[]>( () => {\r\n            let ids = this.currentSet().ids();\r\n            if (!this.showAll()) {\r\n                ids = ids.slice(0, this.showAllThreshold);\r\n            }\r\n            return ids.map((id: number) => this.store.getInstance(id));\r\n        }, this);\r\n    }\r\n\r\n    getDefaultGroupSetName(): string {\r\n        return \"Everything\";\r\n    }\r\n\r\n    getNewGroupSetName(): string {\r\n        return \"New set\";\r\n    }\r\n\r\n    loadFromLocalStorage(): ModelSetJson[] {\r\n        // Need CourseID for this too\r\n        let sets = localStorage.getItem(this.store.getLocalStorageKey());\r\n        if (sets === null) {\r\n            return [{name: this.getDefaultGroupSetName(), default: true, ids: []}];\r\n        } else {\r\n            return JSON.parse(sets);\r\n        }\r\n    }\r\n\r\n    startEditing() {\r\n        this.editorVisible(true);\r\n        this.selectedOptions(this.currentSet().ids());\r\n    }\r\n\r\n    startAdding(ids?: number[]): ModelSet {\r\n        let newSet = new ModelSet({name: this.getNewGroupSetName(), default: false, ids: ids || []});\r\n        this.sets.push(newSet);\r\n        this.currentSet(newSet);\r\n        this.editorVisible(true);\r\n        return newSet;\r\n    }\r\n\r\n    addAsEmails() {\r\n        // Parse the bulkEditor for emails\r\n        // Add them to the currently selectedOptions\r\n        // Clear the bulkEditor for any identified people\r\n    }\r\n\r\n    loadDefault(value: string) {\r\n        if (value === \"first\") {\r\n            this.selectMode(SelectMode.SINGLE);\r\n            this.singleOption(this.available()[0].id);\r\n        } else if (value === \"all\" || value.trim() === \"\") {\r\n            this.selectMode(SelectMode.ALL);\r\n            this.currentSet(this.sets()[0]);\r\n        } else {\r\n            let ids = value.split(\",\").map((id: string) => parseInt(id, 10));\r\n            switch (ids.length) {\r\n                case 0: case this.available().length:\r\n                    this.selectMode(SelectMode.ALL);\r\n                    this.currentSet(this.sets()[0]);\r\n                    break;\r\n                case 1:\r\n                    if (this.available().some((model: T) => model.id === ids[0])) {\r\n                        this.selectMode(SelectMode.SINGLE);\r\n                        this.singleOption(ids[0]);\r\n                    }\r\n                    break;\r\n                default:\r\n                    this.sets().forEach((modelSet: ModelSet) => {\r\n                        if (areArraysEqualSets(modelSet.ids(), ids)) {\r\n                            this.selectMode(SelectMode.SET);\r\n                            this.currentSet(modelSet);\r\n                        }\r\n                    });\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    loadGroups() {\r\n        this.getItemGroups().forEach((group: ModelSelectorItemGroup<J, T>) => {\r\n            this.sets().push(new ModelSet({\r\n                name: group.name,\r\n                default: true,\r\n                ids: group.children.map((model: T) => model.id)\r\n            }));\r\n        });\r\n    }\r\n\r\n    deleteSet(): boolean {\r\n        if (this.currentSet().default()) {\r\n            this.editorVisible(false);\r\n            return false;\r\n        }\r\n        if (confirm(\"Are you sure you want to delete this set?\")) {\r\n            let deleted = this.currentSet();\r\n            this.currentSet(this.sets()[0]);\r\n            this.sets.remove(deleted);\r\n            this.saveToLocalStorage();\r\n            this.editorVisible(false);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    saveSet() {\r\n        this.currentSet().ids(this.selectedOptions());\r\n        this.saveToLocalStorage();\r\n        this.editorVisible(false);\r\n    }\r\n\r\n    cancelEdit() {\r\n        this.editorVisible(false);\r\n    }\r\n\r\n    private saveToLocalStorage() {\r\n        let modelSetJson = JSON.stringify(this.sets().map((m: ModelSet) => m.toJson()));\r\n        localStorage.setItem(this.store.getLocalStorageKey(), modelSetJson);\r\n    }\r\n}\r\n\r\nexport const MODEL_SET_SELECTOR_HTML = (setName: string) => `\r\n    <div>\r\n        <!-- Mode Select -->\r\n        <div class=\"form-check form-check-inline\">\r\n            <input class=\"form-check-input\"\r\n                   data-bind=\"checked: selectMode, disable: isLoading\"\r\n                   type=\"radio\" name=\"${setName}\" id=\"${setName}1\" value=\"ALL\">\r\n            <label class=\"form-check-label\" for=\"${setName}1\">\r\n                All\r\n            </label>\r\n        </div>\r\n        <div class=\"form-check form-check-inline\">\r\n            <input class=\"form-check-input\"\r\n                   data-bind=\"checked: selectMode, disable: isLoading\"\r\n                   type=\"radio\" name=\"${setName}\" id=\"${setName}2\" value=\"SINGLE\">\r\n            <label class=\"form-check-label\" for=\"${setName}2\">\r\n                Only\r\n            </label>\r\n        </div>\r\n        <div class=\"form-check form-check-inline\">\r\n            <input class=\"form-check-input\"\r\n                   data-bind=\"checked: selectMode, disable: isLoading\"\r\n                   type=\"radio\" name=\"${setName}\" id=\"${setName}3\" value=\"SET\">\r\n            <label class=\"form-check-label\" for=\"${setName}3\">\r\n                ${setName} set\r\n            </label>\r\n        </div>\r\n        \r\n        <!-- Single Person -->\r\n        <div data-bind=\"if: selectMode()==='SINGLE'\">\r\n        <form class=\"form-inline\">\r\n        <select data-bind=\"foreach: getItemGroups(), value: singleOption, optionsText: 'title', optionsValue: 'id'\"\r\n                class=\"form-control custom-select ml-2 custom-select-sm\">\r\n            <optgroup data-bind=\"attr: {label: name}, foreach: children\">\r\n                <option data-bind=\"text: $data.title(), option: $data.id\"></option>\r\n            </optgroup>\r\n        </select>\r\n        </form>\r\n        </div>\r\n        \r\n        <!-- Subset -->\r\n        <div data-bind=\"if: selectMode()==='SET'\">\r\n        <form class=\"form-inline\">\r\n            Show ${setName} set:\r\n            <select data-bind=\"options: sets,\r\n                               optionsText: 'name',\r\n                               valueAllowUnset: true,\r\n                               value: currentSet\"\r\n                    class=\"form-control custom-select ml-2 custom-select-sm\">\r\n            </select>\r\n            <button type=\"button\" class=\"btn btn-sm btn-outline-secondary ml-2\"\r\n                    data-bind=\"click: startEditing, visible: !editorVisible()\">\r\n                    <span class=\"fas fa-edit\"></span>\r\n                    Edit this ${setName} set</button>\r\n            <button type=\"button\" class=\"btn btn-sm btn-outline-secondary ml-2\"\r\n                    data-bind=\"click: () => startAdding(), visible: !editorVisible()\">\r\n                    <span class=\"fas fa-plus\"></span>\r\n                    Add new ${setName} set</button>\r\n                                             \r\n        </form>\r\n        <div data-bind=\"if: editorVisible\">\r\n            <label>Current ${setName} set name:\r\n                <input type=\"text\" data-bind=\"value: currentSet().name, disable: currentSet().default\">\r\n            </label><br>\r\n           <select multiple=multiple style=\"width: 100%\"\r\n                 data-bind=\"selectedOptions: selectedOptions, valueAllowUnset: true,\r\n                              options: available, optionsText: 'title', optionsValue: 'id', \r\n                              select2: { placeholder: '${setName}', allowClear: true }\"></select>\r\n\r\n            <!-- Incomplete\r\n            <label style=\"min-width: 100%\">Bulk Editor (separated by commas):\r\n                <button type=\"button\" class=\"btn btn-outline-secondary btn-sm\"\r\n                    data-bind=\"click: addAsEmails\">Add as Emails</button>\r\n                <br>\r\n                <textarea data-bind=\"value: currentSet().emails,\r\n                                     disable: currentSet().default\"\r\n                 style=\"min-width: 100%\"></textarea></label><br>\r\n             -->\r\n            <button type=\"button\" class=\"btn btn-danger btn-sm float-right mt-2\"\r\n                    data-bind=\"click: deleteSet\">Delete current ${setName} set</button>\r\n            <button type=\"button\" class=\"btn btn-success btn-sm mt-2\"\r\n                    data-bind=\"click: saveSet\">Save ${setName} set</button>\r\n            <button type=\"button\" class=\"btn btn-outline-secondary btn-sm mt-2 ml-4\"\r\n                    data-bind=\"click: cancelEdit\">Cancel changes</button>\r\n        </div>\r\n        </div>\r\n        <div data-bind=\"ifnot: editorVisible\">\r\n            <div data-bind=\"if: isLoading\">\r\n                <div class=\"spinner-loader\" role=\"status\">\r\n                    <span class=\"sr-only\">Loading...</span>\r\n                </div>\r\n            </div>\r\n            <div data-bind=\"ifnot: isLoading\">\r\n                Included ${setName}(s): \r\n                <span data-bind=\"foreach: prettyResult\">\r\n                    <span data-bind=\"text: title\"></span>, \r\n                </span>\r\n                <!-- ko if: currentSet().ids().length > showAllThreshold -->\r\n                <button type=\"button\" class=\"btn btn-primary btn-sm\" data-bind=\"click: () => showAll(!showAll())\">\r\n                    <span data-bind=\"if: showAll\">\r\n                        Hide all\r\n                    </span>\r\n                    <span data-bind=\"ifnot: showAll\">\r\n                        Show more <span class=\"badge badge-light\" data-bind=\"text: currentSet().ids().length - showAllThreshold\"></span>\r\n                    </span>\r\n                </button>\r\n                <!-- /ko -->\r\n            </div>\r\n        </div>\r\n    </div>`\r\n\r\nexport class UserSetSelector extends ModelSetSelector<UserJson, User> {\r\n\r\n    constructor(params: ModelSetSelectorJson<UserJson, User>) {\r\n        super(params);\r\n\r\n        this.getItemGroups = ko.pureComputed(()=> {\r\n            let groups: Record<string, ModelSelectorItemGroup<UserJson, User>> = {};\r\n            this.available().forEach((u: User) => {\r\n                if (!(u.primaryRole() in groups)) {\r\n                    groups[u.primaryRole()] = new ModelSelectorItemGroup<UserJson, User>(u.primaryRole(), u.roles);\r\n                }\r\n                groups[u.primaryRole()].children.push(u);\r\n            });\r\n            return Object.values(groups);\r\n        }, this);\r\n\r\n        (<UserStore>this.store).sortMode.subscribe(() => {\r\n            this.available.sort(this.store.sortMethod.bind(this.store));\r\n        });\r\n    }\r\n\r\n    getDefaultGroupSetName(): string {\r\n        return \"All students\";\r\n    }\r\n\r\n    getNewGroupSetName(): string {\r\n        return \"New user set\";\r\n    }\r\n}\r\n\r\nexport class ModelSelectorItemGroup<J extends ModelJson, T extends Model<J>> {\r\n    name: string;\r\n    model: any;\r\n    children: T[];\r\n\r\n    constructor(name: string, model: any) {\r\n        this.name = name;\r\n        this.model = model;\r\n        this.children = [];\r\n    }\r\n}\r\n\r\nexport class AssignmentSetSelector extends ModelSetSelector<AssignmentJson, Assignment> {\r\n    constructor(params: ModelSetSelectorJson<AssignmentJson, Assignment>) {\r\n        super(params);\r\n\r\n        this.getItemGroups = ko.pureComputed(()=> {\r\n            let groups: Record<number, ModelSelectorItemGroup<AssignmentJson, Assignment>> = {};\r\n            this.available().forEach((a: Assignment) => {\r\n                let id, name;\r\n                if (a.group() === null) {\r\n                    id = -2;\r\n                    name = \"Ungrouped Assignments\";\r\n                } else {\r\n                    id = a.group().id;\r\n                    name = a.group().name();\r\n                }\r\n                if (!(id in groups)) {\r\n                    groups[id] = new ModelSelectorItemGroup<AssignmentJson, Assignment>(name, a.group());\r\n                }\r\n                groups[id].children.push(a);\r\n            });\r\n            return Object.values(groups);\r\n        }, this);\r\n    }\r\n\r\n    protected nameAttr: string = \"title\";\r\n\r\n    getDefaultGroupSetName(): string {\r\n        return \"All assignments\";\r\n    }\r\n\r\n    getNewGroupSetName(): string {\r\n        return \"New assignment set\";\r\n    }\r\n}\r\n\r\nko.components.register(\"user-set-selector\", {\r\n    viewModel: UserSetSelector,\r\n    template: MODEL_SET_SELECTOR_HTML(\"User\")\r\n});\r\nko.components.register(\"assignment-set-selector\", {\r\n    viewModel: AssignmentSetSelector,\r\n    template: MODEL_SET_SELECTOR_HTML(\"Assignment\")\r\n});","import {Assignment} from \"../models/assignment\";\r\nimport {GradingStatus, Submission, SubmissionStatus} from \"../models/submission\";\r\n\r\n\r\nexport function launchEditor(assignment: Assignment, submission: Submission) {\r\n    var form = document.createElement(\"form\");\r\n    form.setAttribute(\"method\", \"post\");\r\n    form.setAttribute(\"action\", window[\"$URL_ROOT\"]+\"blockpy/load_readonly\");\r\n    form.setAttribute(\"target\", \"_blank\");\r\n\r\n    let formData = {\r\n        user: {\r\n            role: \"instructor\"\r\n        },\r\n        assignment: assignment ? assignment.toJson(): null,\r\n        submission: submission ? submission.toJson(): null\r\n    };\r\n\r\n    formData.assignment.forked_id = assignment.id;\r\n    formData.assignment.forked_version = assignment.version();\r\n    formData.assignment.id = null;\r\n    formData.assignment.url = \"\";\r\n    formData.assignment.course_id = null;\r\n    formData.submission.id = null;\r\n    formData.submission.endpoint = \"\";\r\n    formData.submission.url = \"\";\r\n    formData.submission.user_id = null;\r\n    formData.submission.course_id = null;\r\n    formData.submission.assignment_id = null;\r\n    formData.submission.grading_status = GradingStatus.NOT_READY;\r\n    formData.submission.submission_status = SubmissionStatus.IN_PROGRESS;\r\n\r\n    var hiddenField = document.createElement(\"input\");\r\n    hiddenField.setAttribute(\"type\", \"hidden\");\r\n    hiddenField.setAttribute(\"name\", \"assignment_data\");\r\n    hiddenField.setAttribute(\"value\", JSON.stringify(formData, null, 2));\r\n    form.appendChild(hiddenField);\r\n    document.body.appendChild(form);\r\n\r\n    //window.open('', '_blank');\r\n\r\n    form.submit();\r\n}","/**\r\n * Watch grouping mode to combine assignments xor users\r\n * Live polling mode\r\n * Show recent events\r\n */\r\n\r\nimport * as ko from 'knockout';\r\nimport {Log, LogJson, REMAP_EVENT_TYPES} from \"../models/log\";\r\nimport {ajax_get} from \"./ajax\";\r\nimport {User, UserStore} from \"../models/user\";\r\nimport {\r\n    formatDuration,\r\n    prettyPrintDate,\r\n    prettyPrintDateTime,\r\n    prettyPrintDateTimeString,\r\n    prettyPrintTime\r\n} from \"./dates\";\r\nimport {Assignment, AssignmentStore} from \"../models/assignment\";\r\nimport {last, pushObservableArray} from \"./plugins\";\r\nimport './model_selector';\r\nimport {ModelSet} from \"./model_selector\";\r\nimport {launchEditor} from \"./editor\";\r\nimport {Submission, SubmissionJson} from \"../models/submission\";\r\nimport {Server} from \"./server\";\r\n\r\n// TODO: Load events on page load, mode or setting\r\n// TODO: Prevent both All from being loaded if SxA is too big?\r\n\r\n// TODO: Global Watch Mode buttons (tied to state of their respective set of buttons)\r\nexport enum WatchMode {\r\n    SUMMARY, FULL\r\n}\r\n\r\nexport enum FeedbackMode {\r\n    FEEDBACK=\"Feedback\",\r\n    SYSTEM=\"System\",\r\n    BOTH=\"Both\",\r\n    HIDE=\"Hidden\"\r\n}\r\n\r\n// TODO: Feedback | Last compile error | Hide\r\nexport class SubmissionState {\r\n    loaded: boolean;\r\n    friendly: string;\r\n    code: string;\r\n    feedback: string;\r\n    system: string;\r\n    lastRan: string;\r\n    lastEdit: string;\r\n    lastOpened: string;\r\n    completed: boolean;\r\n    score: number;\r\n    mode: string;\r\n    fullscreen: boolean;\r\n    log: Log;\r\n\r\n    constructor(current: SubmissionState, log: Log) {\r\n        this.makeNextState(current, log);\r\n    }\r\n\r\n    getPrettyTime(): string {\r\n        return prettyPrintDateTimeString(this.log.when());\r\n    }\r\n\r\n    getPrettyLastEdit(watchMode?: WatchMode): string {\r\n        let current = watchMode !== WatchMode.SUMMARY ? this.log.when() : null;\r\n        return formatDuration(this.lastEdit, current);\r\n    }\r\n\r\n    getPrettyLastRan(watchMode?: WatchMode): string {\r\n        let current = watchMode !== WatchMode.SUMMARY ? this.log.when() : null;\r\n        return formatDuration(this.lastRan, current);\r\n    }\r\n\r\n    getPrettyLastOpened(watchMode?: WatchMode): string {\r\n        let current = watchMode !== WatchMode.SUMMARY ? this.log.when() : null;\r\n        return formatDuration(this.lastOpened, current);\r\n    }\r\n\r\n    copyState(other: SubmissionState) {\r\n        if (other === null) {\r\n            this.code = \"\";\r\n            this.friendly = \"Not Loaded\";\r\n            this.feedback = \"Not yet executed\";\r\n            this.system = \"\";\r\n            this.lastRan = null;\r\n            this.lastEdit = null;\r\n            this.lastOpened = null;\r\n            this.completed = false;\r\n            this.score = 0;\r\n            this.mode = \"unknown\";\r\n            this.fullscreen = false;\r\n            this.log = null;\r\n        } else {\r\n            this.code = other.code;\r\n            this.feedback = other.feedback;\r\n            this.system = other.system;\r\n            this.lastRan = other.lastRan;\r\n            this.lastEdit = other.lastEdit;\r\n            this.lastOpened = other.lastOpened;\r\n            this.completed = other.completed;\r\n            this.score = other.score;\r\n            this.mode = other.mode;\r\n            this.fullscreen = other.fullscreen;\r\n            this.log = null;\r\n        }\r\n    }\r\n\r\n    makeNextState(current: SubmissionState, log: Log) {\r\n        this.copyState(current);\r\n        this.log = log;\r\n        this.friendly = REMAP_EVENT_TYPES[log.eventType()];\r\n        //this.system = `<strong>${this.friendly || log.eventType()}</strong><div>${log.message()}</div>`;\r\n        switch (log.eventType()) {\r\n            case \"File.Create\":\r\n                this.code = log.message();\r\n                this.lastEdit = log.when();\r\n                break;\r\n            case \"File.Edit\":\r\n                this.code = log.message();\r\n                this.lastEdit = log.when();\r\n                this.system = \"<strong>Edited code</strong>\";\r\n                break;\r\n            case \"Session.Start\":\r\n                this.lastOpened = log.when();\r\n                this.system = `<strong>New Session</strong>`;\r\n                break;\r\n            case \"Compile\":\r\n                this.system = `<strong>Compiling</strong>`;\r\n                break;\r\n            case \"Run.Program\":\r\n                this.lastRan = log.when();\r\n                this.system = `<strong>Run</strong><div>${log.message()}</div>`;\r\n                break;\r\n            case \"Compile.Error\":\r\n                this.system = `<strong>Compiler Error</strong><div>${log.message()}</div>`;\r\n                break;\r\n            case \"Intervention\":\r\n                this.completed = this.completed || log.category() === \"Complete\";\r\n                this.feedback = `<strong>${log.label()}</strong><div>${log.message()}</div>`;\r\n                break;\r\n            case \"X-View.Change\":\r\n                this.mode = log.message();\r\n                this.system = `<strong>Changed Editing Mode</strong><div>${this.mode}</div>`;\r\n                break;\r\n            case \"X-Submission.LMS\":\r\n                this.score = parseInt(log.message(), 10);\r\n                this.system = `<strong>Submitted Score</strong><div>${this.score}</div>`;\r\n                break;\r\n        }\r\n    }\r\n}\r\n\r\nexport class SubmissionHistory {\r\n    // Past history of all submission states, timed on logs\r\n    states: KnockoutObservableArray<SubmissionState>;\r\n    // Identity information\r\n    user: User;\r\n    assignment: Assignment;\r\n    submission: Submission;\r\n\r\n    // Current viewing state\r\n    watchMode: KnockoutObservable<WatchMode>;\r\n    feedbackMode: KnockoutObservable<FeedbackMode>;\r\n    currentStateIndex: KnockoutObservable<string|number>;\r\n\r\n    // Cosmetic functions\r\n    private currentState: KnockoutReadonlyComputed<SubmissionState>;\r\n    private isVcrActive: KnockoutReadonlyComputed<boolean>;\r\n    private getWatchModeClass: KnockoutReadonlyComputed<string>;\r\n    // Visuals\r\n    private isSummary: KnockoutReadonlyComputed<boolean>;\r\n    private isFull: KnockoutReadonlyComputed<boolean>;\r\n    private hideFeedback: KnockoutReadonlyComputed<boolean>;\r\n\r\n    constructor(user: User, assignment: Assignment) {\r\n        this.states = ko.observableArray<SubmissionState>([]);\r\n        this.currentStateIndex = ko.observable(0);\r\n        this.user = user;\r\n        this.assignment = assignment;\r\n        this.watchMode = ko.observable(WatchMode.SUMMARY);\r\n        this.feedbackMode = ko.observable(FeedbackMode.FEEDBACK);\r\n        this.isVcrActive = ko.pureComputed(() => {\r\n            return this.watchMode() !== WatchMode.SUMMARY;\r\n        }, this);\r\n        this.getWatchModeClass = ko.pureComputed(() => {\r\n            switch (this.watchMode()) {\r\n                case WatchMode.SUMMARY:\r\n                    return \"fa-eye\";\r\n                case WatchMode.FULL:\r\n                    return \"fa-eye-slash\";\r\n            }\r\n        }, this);\r\n        this.currentState = ko.pureComputed(() => {\r\n            if (this.states().length > 0) {\r\n                if (this.watchMode() !== WatchMode.SUMMARY) {\r\n                    return this.states()[this.getCurrentStateIndex()];\r\n                } else {\r\n                    return last(this.states());\r\n                }\r\n            } else {\r\n                console.error(\"No states are currently loaded!\");\r\n            }\r\n        }, this);\r\n        this.isSummary = ko.pureComputed(() => {\r\n            return this.watchMode() === WatchMode.SUMMARY;\r\n        }, this);\r\n        this.isFull = ko.pureComputed(() => {\r\n            return this.watchMode() === WatchMode.FULL;\r\n        }, this);\r\n    }\r\n\r\n    private getCurrentStateIndex(): number {\r\n        return parseInt(<string>this.currentStateIndex(), 10);\r\n    }\r\n\r\n    addLogs(logs: Log[]) {\r\n        let states: SubmissionState[] = [];\r\n        let latestState: SubmissionState = this.states().length ? last(this.states()) : null;\r\n        for (let i=0; i< logs.length; i+=1) {\r\n            let nextState = new SubmissionState(latestState, logs[i]);\r\n            states.push(nextState);\r\n            latestState = nextState;\r\n        }\r\n        pushObservableArray(this.states, states);\r\n        //console.log(states);\r\n    }\r\n\r\n    reload() {\r\n        ajax_get(\"blockpy/load_history\", {\r\n            assignment_id: this.submission.assignmentId(),\r\n            course_id: this.submission.courseId(),\r\n            user_id: this.submission.userId(),\r\n            with_submission: true\r\n        }).then((data) => {\r\n            if (data.success) {\r\n                let latestLogId = this.states.length>0 ? this.states()[this.states.length-1].log.id : -1;\r\n                this.addLogs(data.history.filter((log: LogJson) => latestLogId < log.id).map((log: LogJson) => new Log(log)));\r\n                this.submission.fromJson(data.submissions[0]);\r\n            } else {\r\n                console.error(data);\r\n            }\r\n        });\r\n        console.log(\"Need to update myself!\");\r\n    }\r\n\r\n    // Map CodeStates to event IDs so we can quickly get code? Or playback history to status at each step...\r\n\r\n    loadHistorySelector(event: Event) {\r\n        let selector = this.getSelector(event);\r\n        selector.empty();\r\n        let i;\r\n        let optGroup: JQuery<JQuery.Node> = null;\r\n        for (i=0; i <this.states().length; i+= 1) {\r\n            let entry: Log = this.states()[i].log;\r\n            let formattedDate = prettyPrintDate(entry.clientTimestamp());\r\n            if (optGroup === null || optGroup.attr(\"label\") != formattedDate) {\r\n                optGroup = $(\"<optgroup></optgroup>\");\r\n                optGroup.attr(\"label\", formattedDate);\r\n                selector.append(optGroup);\r\n            }\r\n            let eventType = REMAP_EVENT_TYPES[entry.eventType()] || entry.eventType();\r\n            let displayed = prettyPrintTime(entry.clientTimestamp()) +\" - \"+eventType;\r\n            let option = $(\"<option></option>\", {text: displayed});\r\n            option.attr(\"value\", i);\r\n            optGroup.append(option);\r\n        }\r\n        this.currentStateIndex(i-1);\r\n        //selector.val(Math.max(0, i-1));\r\n    }\r\n\r\n    switchWatchMode(data: any, event: Event) {\r\n        switch (this.watchMode()) {\r\n            case WatchMode.FULL:\r\n                this.watchMode(WatchMode.SUMMARY);\r\n                break;\r\n            case WatchMode.SUMMARY:\r\n                this.loadHistorySelector(event);\r\n                this.watchMode(WatchMode.FULL);\r\n                break;\r\n        }\r\n    }\r\n\r\n    switchFeedbackMode(data: any, event: Event) {\r\n        switch (this.feedbackMode()) {\r\n            case FeedbackMode.FEEDBACK:\r\n                this.feedbackMode(FeedbackMode.SYSTEM);\r\n                break;\r\n            case FeedbackMode.SYSTEM:\r\n                this.feedbackMode(FeedbackMode.BOTH);\r\n                break;\r\n            case FeedbackMode.BOTH:\r\n                this.feedbackMode(FeedbackMode.HIDE);\r\n                break;\r\n            case FeedbackMode.HIDE:\r\n                this.feedbackMode(FeedbackMode.FEEDBACK);\r\n                break;\r\n        }\r\n    }\r\n\r\n    getSelector(event: Event) {\r\n        return $(event.target).closest(\"div\").find(\".history-select\");\r\n    }\r\n\r\n    moveToMostRecent(data: any, event: Event) {\r\n        console.log(this.states().length-1);\r\n        this.currentStateIndex(this.states().length-1);\r\n    }\r\n\r\n    moveToBack(data: any, event: Event) {\r\n        this.currentStateIndex(Math.max(0, this.getCurrentStateIndex()-1));\r\n    }\r\n\r\n    seekToBack(data: any, event: Event) {\r\n        let currentId = this.getCurrentStateIndex();\r\n        let currentState: SubmissionState;\r\n        do {\r\n            currentId -= 1;\r\n            currentState = this.states()[currentId];\r\n        } while (currentId>0 && !currentState.log.isEditEvent());\r\n        this.currentStateIndex(currentId);\r\n    }\r\n\r\n    moveToNext(data: any, event: Event) {\r\n        this.currentStateIndex(Math.min(this.states().length-1, this.getCurrentStateIndex()+1));\r\n    }\r\n\r\n    seekToNext(data: any, event: Event) {\r\n        let currentId = this.getCurrentStateIndex();\r\n        let currentState: SubmissionState;\r\n        do {\r\n            currentId += 1;\r\n            currentState = this.states()[currentId];\r\n        } while (currentId<this.states().length-1 && !currentState.log.isEditEvent());\r\n        this.currentStateIndex(currentId);\r\n    }\r\n\r\n    moveToStart(data: any, event: Event) {\r\n        /*this.getSelector(event).val(0);\r\n        this.viewLog(event);*/\r\n        this.currentStateIndex(0);\r\n    }\r\n\r\n    launchEditor() {\r\n        launchEditor(this.assignment, this.submission);\r\n    }\r\n}\r\n\r\n// TODO: Open all of students' submissions\r\n// TODO: Open all of assignment's submissions\r\n// TODO: \"Last Logged Event\" -> \"This log event: \"\r\nexport const SubmissionHistoryCard = `\r\n<!-- ko if: grouping() !== 'None' -->\r\n<h4 data-bind=\"text: grouping() === 'User' ? user.title() : assignment.title()\"></h4>\r\n<!-- /ko -->\r\n<div class=\"\">\r\n    <!-- ko if: submissionHistory.states().length>0 -->\r\n    <div class=\"row\">\r\n        <div class=\"col-md-6\">\r\n            <div data-bind=\"component: {name: 'user-short', params: user}\"></div>\r\n            <div data-bind=\"component: {name: 'assignment-short', params: assignment}\"></div>\r\n            <div>Score: <span data-bind=\"text: currentState().completed ? 'Correct' : 'Incomplete'\"></span> (<span data-bind=\"text: currentState().score\"></span>)</div>\r\n            <div>Open submission in <a href=\"#\" data-bind=\"click: $parent.launchEditor.bind($parent)\">Readonly Editor</a></div>\r\n        </div>\r\n        <div class=\"col-md-6\">\r\n            <div>Last Logged Event: <span data-bind=\"text: currentState().getPrettyTime()\"></span></div>\r\n            <div>Last Edited: <span data-bind=\"text: currentState().getPrettyLastEdit(watchMode())\"></span></div>\r\n            <div>Last Ran: <span data-bind=\"text: currentState().getPrettyLastRan(watchMode())\"></span></div>\r\n            <div>Last Opened: <span data-bind=\"text: currentState().getPrettyLastOpened(watchMode())\"></span></div>    \r\n        </div>\r\n        <div class=\"col-md-12\">\r\n            <submission-history-vcr params=\"submissionHistory: submissionHistory\"></submission-history-vcr>\r\n        </div>\r\n        <div class=\"mt-2\" data-bind=\"css: { 'col-md-6': submissionHistory.feedbackMode() !== 'Hidden',\r\n                                            'col-md-11': submissionHistory.feedbackMode() === 'Hidden' },\r\n                                     ifnot: submissionHistory.isSummary()\">\r\n            <pre class=\"python-code-block\">\r\n                <code data-bind=\"highlightedCode: currentState().code\" class=\"python\" style=\"height: 200px; overflow: scroll\"></code>\r\n            </pre>\r\n        </div>\r\n        <div class=\"mt-2\" data-bind=\"css: { 'col-md-6': submissionHistory.feedbackMode() !== 'Hidden',\r\n                                            'col-md-1': submissionHistory.feedbackMode() === 'Hidden' },\r\n                                     if: submissionHistory.isFull()\">\r\n            <buton class=\"float-right btn btn-outline-secondary btn-sm\"\r\n                   data-bind=\"text: submissionHistory.feedbackMode(),\r\n                              click: submissionHistory.switchFeedbackMode.bind(submissionHistory)\"></buton>\r\n            <!-- ko if: submissionHistory.feedbackMode() === 'Feedback' || submissionHistory.feedbackMode() === 'Both' -->\r\n            <div data-bind=\"html: currentState().feedback\"></div>\r\n            <!-- /ko -->\r\n            <!-- ko if: submissionHistory.feedbackMode() === 'System' || submissionHistory.feedbackMode() === 'Both' -->\r\n            <div data-bind=\"html: currentState().system\"></div>\r\n            <!-- /ko -->\r\n        </div>\r\n    </div>\r\n    <!-- /ko -->\r\n    <!-- ko ifnot: submissionHistory.states().length>0 -->\r\n    <div class=\"row\">\r\n        <div class=\"col-md-6\">\r\n            <div data-bind=\"component: {name: 'user-short', params: user}\"></div>\r\n            <div data-bind=\"component: {name: 'assignment-short', params: assignment}\"></div>\r\n            <div>Not yet started!</div>\r\n        </div>\r\n    </div>\r\n    <!-- /ko -->\r\n</div>\r\n`;\r\n\r\nko.components.register(\"submission-history-card\", {\r\n    template: SubmissionHistoryCard\r\n});\r\n\r\nexport const SubmissionHistoryVCR = `\r\n    <form class=\"form-inline\">\r\n        <button class=\"btn btn-outline-secondary mr-2 btn-sm\" type=\"button\"\r\n            data-bind=\"click: submissionHistory.switchWatchMode.bind(submissionHistory)\">\r\n            <span class='fas' data-bind=\"class: submissionHistory.getWatchModeClass()\"></span>\r\n        </button>\r\n        <button class=\"btn btn-outline-secondary mr-2 btn-sm\"\r\n                data-bind=\"click: submissionHistory.reload.bind(submissionHistory)\">\r\n                <span class=\"fas fa-sync\"></span> Sync\r\n        </button>\r\n        <div data-bind=\"visible: submissionHistory.isVcrActive()\">\r\n            <button class=\"btn btn-outline-secondary mr-2 btn-sm\" type=\"button\"\r\n                data-bind=\"click: submissionHistory.moveToStart.bind(submissionHistory)\">\r\n                <span class='fas fa-step-backward'></span> Start\r\n            </button>\r\n            <button class=\"btn btn-outline-secondary mr-2 btn-sm\" type=\"button\"\r\n                data-bind=\"click: submissionHistory.seekToBack.bind(submissionHistory)\">\r\n                <span class='fas fa-fast-backward'></span>\r\n            </button>\r\n            <button class=\"btn btn-outline-secondary mr-2 btn-sm\" type=\"button\"\r\n                data-bind=\"click: submissionHistory.moveToBack.bind(submissionHistory)\">\r\n                <span class='fas fa-backward'></span> Back\r\n            </button>\r\n            <select class=\"history-select form-control custom-select mr-2 custom-select-sm\"\r\n                data-bind=\"value: submissionHistory.currentStateIndex\"\r\n                aria-title=\"History Selector\">\r\n            </select>\r\n            <button class=\"btn btn-outline-secondary mr-2 btn-sm\" type=\"button\"\r\n                data-bind=\"click: submissionHistory.moveToNext.bind(submissionHistory)\">\r\n                <span class='fas fa-forward'></span> Next\r\n            </button>\r\n            <button class=\"btn btn-outline-secondary mr-2 btn-sm\" type=\"button\"\r\n                data-bind=\"click: submissionHistory.seekToNext.bind(submissionHistory)\">\r\n                <span class='fas fa-fast-forward'></span>\r\n            </button>\r\n            <button class=\"btn btn-outline-secondary mr-2 btn-sm\" type=\"button\"\r\n                data-bind=\"click: submissionHistory.moveToMostRecent.bind(submissionHistory)\">\r\n                <span class='fas fa-step-forward'></span> Most Recent\r\n            </button>\r\n        </div>\r\n    </form>\r\n`;\r\n\r\nko.components.register(\"submission-history-vcr\", {\r\n    template: SubmissionHistoryVCR\r\n});\r\n\r\nexport enum WatchGroupingMode {\r\n    NONE=\"None\", ASSIGNMENT=\"Assignment\", USER=\"User\"\r\n}\r\n\r\n\r\nexport class Watcher {\r\n    // Search options\r\n    courseId: KnockoutObservable<number>;\r\n    assignmentIds: string;\r\n    userIds: string;\r\n    userSet: KnockoutObservable<ModelSet>;\r\n    assignmentSet: KnockoutObservable<ModelSet>;\r\n\r\n    // Stores\r\n    server: Server;\r\n\r\n    // Actual data\r\n    submissions: KnockoutObservableArray<SubmissionHistory>;\r\n    cauToSubmission: { [cau: string]: SubmissionHistory};\r\n\r\n    // Cosmetics\r\n    grouping: KnockoutObservable<WatchGroupingMode>;\r\n    isLoading: KnockoutObservable<boolean>;\r\n    hasFailed: KnockoutObservable<boolean>;\r\n\r\n\r\n    constructor(data: any) {\r\n        // TODO: Handle userIds to default load some students in a new set\r\n        this.courseId = ko.observable<number>(data.courseId);\r\n        this.userIds = data.userIds;\r\n        this.assignmentIds = data.assignmentIds;\r\n        this.userSet = ko.observable<ModelSet>(null);\r\n        this.assignmentSet = ko.observable<ModelSet>(null);\r\n        this.grouping = ko.observable<WatchGroupingMode>(WatchGroupingMode.NONE);\r\n        this.submissions = ko.observableArray<SubmissionHistory>([]);\r\n        this.cauToSubmission = {};\r\n        this.server = data.server;\r\n        this.isLoading = ko.observable(false);\r\n        this.hasFailed = ko.observable(false);\r\n\r\n        this.server.userStore.sortMode.subscribe(() => {\r\n            this.submissions.sort((left, right) => {\r\n                return this.server.userStore.sortMethod(left.user, right.user);\r\n            });\r\n        });\r\n        //$(this.getLatest.bind(this));\r\n    }\r\n\r\n    addLogs(logJsons: LogJson[]) {\r\n        let sortedLogs: Record<string, Log[]> = {};\r\n        for (let i=0; i<logJsons.length; i+=1) {\r\n            let log: Log = new Log(logJsons[i]);\r\n            let submissionId = log.getAsSubmissionKey();\r\n            if (!(submissionId in this.cauToSubmission)) {\r\n                let user = this.server.userStore.getInstance(log.subjectId());\r\n                let assignment = this.server.assignmentStore.getInstance(log.assignmentId());\r\n                this.cauToSubmission[submissionId] = new SubmissionHistory(user, assignment);\r\n                this.submissions.push(this.cauToSubmission[submissionId]);\r\n            }\r\n            if (!(submissionId in sortedLogs)) {\r\n                sortedLogs[submissionId] = [];\r\n            }\r\n            sortedLogs[submissionId].push(log);\r\n        }\r\n        for (let submissionId in sortedLogs) {\r\n            this.cauToSubmission[submissionId].addLogs(sortedLogs[submissionId]);\r\n        }\r\n    }\r\n\r\n    addSubmissions(submissionJsons: SubmissionJson[]) {\r\n        for (let i=0; i<submissionJsons.length; i+=1) {\r\n            let submission: Submission = new Submission(submissionJsons[i]);\r\n            let submissionId = submission.getAsSubmissionKey();\r\n            if (!(submissionId in this.cauToSubmission)) {\r\n                let user = this.server.userStore.getInstance(submission.userId());\r\n                let assignment = this.server.assignmentStore.getInstance(submission.assignmentId());\r\n                this.cauToSubmission[submissionId] = new SubmissionHistory(user, assignment);\r\n                this.submissions.push(this.cauToSubmission[submissionId]);\r\n            }\r\n            this.cauToSubmission[submissionId].submission = submission;\r\n        }\r\n    }\r\n\r\n    clearData() {\r\n        this.cauToSubmission = {};\r\n        this.submissions.removeAll();\r\n    }\r\n\r\n    // TODO: Get latest for just a single submission\r\n    getLatest() {\r\n        localStorage.setItem(\"BLOCKPY_SERVER_USERIDS\", this.userSet().getStored());\r\n        localStorage.setItem(\"BLOCKPY_SERVER_ASSIGNMENTIDS\", this.assignmentSet().getStored());\r\n        this.isLoading(true);\r\n        this.hasFailed(false);\r\n        this.setGroupingMode();\r\n        ajax_get(\"blockpy/load_history\", {\r\n            assignment_id: this.assignmentSet().getIds(),\r\n            course_id: this.courseId(),\r\n            user_id: this.userSet().getIds(),\r\n            with_submission: true\r\n        }).then((data) => {\r\n            this.isLoading(false);\r\n            this.hasFailed(!data.success);\r\n            if (data.success) {\r\n                this.clearData();\r\n                this.addLogs(data.history);\r\n                this.addSubmissions(data.submissions);\r\n            } else {\r\n                console.error(\"Loading history failed!\", data);\r\n            }\r\n        }).fail(() => {\r\n            console.error(\"Loading history failed to get data!\", arguments);\r\n            this.hasFailed(true);\r\n            this.isLoading(false);\r\n        });\r\n    }\r\n\r\n    setGroupingMode() {\r\n        let assignmentCount = this.assignmentSet().getIds().length;\r\n        let userCount = this.userSet().getIds().length;\r\n        if (userCount > assignmentCount) {\r\n            this.grouping(WatchGroupingMode.USER);\r\n        } else if (userCount < assignmentCount) {\r\n            this.grouping(WatchGroupingMode.ASSIGNMENT);\r\n        } else {\r\n            this.grouping(WatchGroupingMode.NONE);\r\n        }\r\n    }\r\n}\r\n\r\nexport const WatcherTemplate = `\r\n    <div>\r\n    <user-display-settings-editor params=\"options: server.userStore.displayOptions, sortMode: server.userStore.sortMode, displayMode: server.userStore.displayMode\"></user-display-settings-editor>\r\n    User(s):\r\n        <user-set-selector params=\"store: server.userStore, modelSet: userSet, default: userIds\"></user-set-selector>\r\n    </div>\r\n    <div class=\"mt-4 mb-4\">\r\n    Assignment(s):\r\n        <assignment-set-selector params=\"store: server.assignmentStore, modelSet: assignmentSet, default: assignmentIds\"></assignment-set-selector>\r\n    </div>\r\n    <div class=\"mb-4 mt-4\">\r\n        <button class=\"btn btn-primary\" data-bind=\"click: getLatest\">Load Events</button>\r\n    </div>\r\n    <div data-bind=\"if: isLoading\">\r\n        <div class=\"spinner-loader\" role=\"status\">\r\n            <span class=\"sr-only\">Loading...</span>\r\n        </div>\r\n    </div>\r\n    <!-- ko if: hasFailed -->\r\n    <div class=\"alert alert-danger\" role=\"alert\">\r\n        Loading these events has failed; more details in JS console.\r\n    </div>\r\n    <!-- /ko -->\r\n    <div data-bind=\"ifnot: isLoading\">\r\n        <div data-bind=\"foreach: submissions\" class=\"row\">\r\n            <submission-history-card params=\"submissionHistory: $data, currentState: currentState, watchMode: watchMode,\r\n                                             user: user, assignment: assignment, grouping: $parent.grouping\"\r\n                                     class=\"col-md-12 mb-4 rounded bg-light\"></submission-history-card>    \r\n        </div>\r\n    </div>\r\n`;\r\n\r\nko.components.register(\"watcher\", {\r\n    viewModel: Watcher,\r\n    template: WatcherTemplate\r\n});\r\n\r\n","import {Server} from \"./server\";\r\nimport {Course} from \"../models/course\";\r\nimport {User} from \"../models/user\";\r\nimport * as ko from 'knockout';\r\nimport {AssignmentGroup} from \"../models/assignment_group\";\r\nimport {Assignment} from \"../models/assignment\";\r\nimport {ajax_get} from \"./ajax\";\r\nimport {Submission} from \"../models/submission\";\r\n\r\n// TODO: Add bookmarking\r\n// TODO: Add progress bar at top\r\n// TODO: Event logging\r\n\r\nexport interface QuizzerJson {\r\n    server: Server;\r\n    courseId: number;\r\n    user: User;\r\n    currentAssignmentId: ko.Observable<number>;\r\n    assignmentGroupId: number;\r\n}\r\n\r\nexport enum QuizQuestionTypes {\r\n    multiple_choice_question=\"multiple_choice_question\",\r\n    multiple_answers_question=\"multiple_answers_question\",\r\n    true_false_question=\"true_false_question\",\r\n    text_only_question=\"text_only_question\",\r\n    matching_question=\"matching_question\",\r\n    multiple_dropdowns_question=\"multiple_dropdowns_question\",\r\n    short_answer_question=\"short_answer_question\",\r\n    fill_in_multiple_blanks_question=\"fill_in_multiple_blanks_question\",\r\n\r\n    calculated_question=\"calculated_question\",\r\n    essay_question=\"essay_question\",\r\n    file_upload_question=\"file_upload_question\",\r\n\r\n    numerical_question=\"numerical_question\"\r\n}\r\n\r\nexport const getDefaultValue = (question: Question, answer: any): any => {\r\n    switch (question.type) {\r\n        case QuizQuestionTypes.multiple_answers_question:\r\n            return ko.observable(answer && answer.length ? answer: []);\r\n        case QuizQuestionTypes.matching_question:\r\n            return answer && answer.length\r\n                ? question.statements.map((v: any, i: number) => ko.observable(answer[i]))\r\n                : question.statements.map((v: any) => ko.observable(undefined));\r\n        case QuizQuestionTypes.multiple_dropdowns_question:\r\n            let mdqResult: {[key: string]: ko.Observable} = {};\r\n            Object.entries(question.answers).forEach(([key, value])=> {\r\n                mdqResult[key] = ko.observable(answer ? answer[key] || '' : '')\r\n            });\r\n            return mdqResult;\r\n        case QuizQuestionTypes.fill_in_multiple_blanks_question:\r\n            let fimbResult: {[key: string]: ko.Observable} = {};\r\n            getBracketed(question.body).map((key: string) => {\r\n                fimbResult[key] = ko.observable(answer ? answer[key] || '' : \"\")\r\n            });\r\n            return fimbResult;\r\n        default:\r\n            return ko.observable(answer || \"\");\r\n    }\r\n}\r\n\r\nexport const getBracketed = (body: string): string[] => {\r\n    return body.split(SQUARE_BRACKETS)\r\n        .filter((part: string) => part.startsWith('[') && part.endsWith(']'))\r\n        .map((part: string) => part.slice(1, -1));\r\n}\r\n\r\nexport const subscribeToStudent = (question: Question): ko.Observable[] => {\r\n    ///console.log(question.id, question.student);\r\n    switch (question.type) {\r\n        case QuizQuestionTypes.matching_question:\r\n            return question.student;\r\n        case QuizQuestionTypes.multiple_dropdowns_question:\r\n        case QuizQuestionTypes.fill_in_multiple_blanks_question:\r\n            return Object.values(question.student);\r\n        case QuizQuestionTypes.multiple_answers_question:\r\n        default:\r\n            return [question.student];\r\n    }\r\n}\r\n\r\nexport const getValue = (question: Question): any => {\r\n    switch (question.type) {\r\n        case QuizQuestionTypes.matching_question:\r\n            return question.student.map((value: ko.Observable) => value());\r\n        case QuizQuestionTypes.multiple_dropdowns_question:\r\n        case QuizQuestionTypes.fill_in_multiple_blanks_question:\r\n            let result: {[key: string]: string} = {};\r\n            Object.entries(question.student).forEach(([key, value]: [string, ko.Observable])=> {\r\n                result[key] = value();\r\n            });\r\n            return result;\r\n        case QuizQuestionTypes.multiple_answers_question:\r\n        default:\r\n            return question.student();\r\n    }\r\n}\r\n\r\nexport interface Question {\r\n    body: string\r\n    id: string\r\n    title: string\r\n    type: string\r\n    points: number\r\n    student: any\r\n    answers?: string[] | {[key: string]: string[]}\r\n    statements?: string[]\r\n}\r\n\r\nexport const matchKeyInBrackets = (key: string) => new RegExp(`(?<!\\\\\\))(\\\\[${key}\\\\])(?!\\\\()`);\r\nexport const SQUARE_BRACKETS = /(?<!\\\\)(\\[.*?\\])(?!\\()/\r\n\r\nexport class Quiz {\r\n    questionMap: Record<string, Question>;\r\n    questions: ko.ObservableArray<Question>;\r\n\r\n    constructor(assignment: Assignment, submission: Submission) {\r\n        this.questions = ko.observableArray([]);\r\n        this.questionMap = {};\r\n        this.loadAssignment(assignment, submission);\r\n    }\r\n\r\n    loadAssignment(assignment: Assignment, submission: Submission) {\r\n        this.questions.removeAll();\r\n        this.questionMap = {};\r\n        let currentAnswer = JSON.parse(submission.code() || \"{}\");\r\n        if (!(\"studentAnswers\" in currentAnswer)) {\r\n            currentAnswer.studentAnswers = {};\r\n        }\r\n        //console.log(\"Loading Answer:\", currentAnswer);\r\n        let instructions = JSON.parse(assignment.instructions());\r\n        for (const questionId in instructions.questions) {\r\n            let answer = currentAnswer.studentAnswers[questionId];\r\n            let question = {...instructions.questions[questionId], id: questionId} as Question;\r\n            question.student = getDefaultValue(question, answer);\r\n            this.questionMap[questionId] = question;\r\n            this.questions.push(question);\r\n        }\r\n    }\r\n\r\n    submissionAsJson(): string {\r\n        // Build up the fields that need to be edited to save the submission\r\n        let result = {studentAnswers: {}};\r\n        this.questions().forEach((question: Question) => {\r\n            // @ts-ignore\r\n            result.studentAnswers[question.id] = getValue(question);\r\n        });\r\n        return JSON.stringify(result, null, 2);\r\n    }\r\n\r\n    makeBody(question: Question, index: number): string {\r\n        let body = question.body;\r\n        if (question.type === 'multiple_dropdowns_question') {\r\n            let answers = question.answers as {[key: string]: string[]};\r\n            for (let key in answers) {\r\n                let options: string[] = [\"\", ...answers[key]];\r\n                let optionsStr = options.map((option: string) => (`<option>${option}</option>`)).join(\"\")\r\n                body = body.replace(matchKeyInBrackets(key), `<select id=\"question-md-${index}\" data-bind=\"value: student['${key}']\">${optionsStr}</select>`)\r\n            }\r\n        } else if (question.type === 'fill_in_multiple_blanks_question') {\r\n            body = body.split(SQUARE_BRACKETS).map((part: string) => {\r\n                if (part.startsWith('[') && part.endsWith(']')) {\r\n                    const key = part.slice(1, -1);\r\n                    return `<span class=\"d-inline-block\"><input id=\"question-fimb-${index}-${part}\" type=\"text\" class=\"form-control\" data-bind=\"value: student['${key}']\"></span>`;\r\n                } else {\r\n                    return part;\r\n                }\r\n            }).join('');\r\n        }\r\n        return body\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class Quizzer {\r\n    server: Server;\r\n    courseId: number;\r\n    user: User;\r\n    assignmentGroupId: number;\r\n\r\n    currentAssignmentId: ko.Observable<number>;\r\n    assignment: ko.Observable<Assignment>;\r\n    quiz: ko.Observable<Quiz>;\r\n    submission: ko.Observable<Submission>;\r\n\r\n    forceQuiz: ko.Observable<boolean>;\r\n    currentQuestion: ko.Observable<Question>;\r\n\r\n    constructor(params: QuizzerJson) {\r\n        this.server = params.server;\r\n        this.courseId = params.courseId;\r\n        this.user = params.user;\r\n        this.currentAssignmentId = params.currentAssignmentId;\r\n        this.assignmentGroupId = params.assignmentGroupId;\r\n        this.assignment = ko.observable(null);\r\n        this.submission = ko.observable(null);\r\n        this.quiz = ko.observable(null);\r\n\r\n        this.currentAssignmentId.subscribe((newId) => {\r\n            this.loadQuiz(newId);\r\n        }, this);\r\n        this.loadQuiz(this.currentAssignmentId());\r\n        this.quiz.subscribe((quiz) => {\r\n            this.quiz().questions().map((question: Question) => {\r\n                subscribeToStudent(question).map((subscribable) => {\r\n                    subscribable.subscribe((value: any) => {\r\n                        this.onChange();\r\n                    })\r\n                })\r\n            });\r\n        });\r\n    }\r\n\r\n    loadQuiz(assignmentId: number) {\r\n        if (assignmentId != null) {\r\n            let BlockPyServer = window['$MAIN_BLOCKPY_EDITOR'].components.server;\r\n            let data = BlockPyServer.createServerData();\r\n            data[\"assignment_id\"] = assignmentId;\r\n            BlockPyServer._postBlocking(\"loadAssignment\", data, 4,\r\n                (response: any) => {\r\n                    if (response.success) {\r\n                        let assignment = this.server.assignmentStore.newInstance(response.assignment);\r\n                        let submission = this.server.submissionStore.newInstance(response.submission);\r\n                        this.assignment(assignment);\r\n                        this.submission(submission);\r\n                        this.quiz(new Quiz(assignment, submission));\r\n                    } else {\r\n                        console.error(\"Failed to load\", response);\r\n                        this.assignment(null);\r\n                    }\r\n                },\r\n                (e: any, textStatus: string, errorThrown: any) => {\r\n                    console.error(\"Failed to load (HTTP LEVEL)\", e, textStatus, errorThrown);\r\n                    this.assignment(null);\r\n                });\r\n        } else {\r\n            this.assignment(null);\r\n        }\r\n    }\r\n\r\n    onChange() {\r\n        this.saveFile(\"answer.py\", this.quiz().submissionAsJson(), false);\r\n    }\r\n\r\n    saveSubmission() {\r\n        this.saveFile(\"answer.py\", this.quiz().submissionAsJson(), true);\r\n    }\r\n\r\n    saveSubmissionRaw() {\r\n        this.saveFile(\"answer.py\", this.submission().code(), true);\r\n    }\r\n\r\n    saveAssignment() {\r\n        this.quiz().loadAssignment(this.assignment(), this.submission());\r\n        this.saveFile(\"!instructions.md\", this.assignment().instructions(), true);\r\n        this.saveFile(\"!on_run.py\", this.assignment().onRun(), true);\r\n    }\r\n\r\n    saveFile(filename: string, contents: string, block: boolean) {\r\n        let BlockPyServer = window['$MAIN_BLOCKPY_EDITOR'].components.server;\r\n        let now = new Date();\r\n        let data = {\r\n            assignment_id: this.assignment().id,\r\n            assignment_group_id: this.assignmentGroupId,\r\n            course_id: this.courseId,\r\n            submission_id: this.submission().id,\r\n            user_id: this.user.id,\r\n            version: this.assignment().version,\r\n            timestamp: now.getTime(),\r\n            timezone: now.getTimezoneOffset(),\r\n            passcode: window['$MAIN_BLOCKPY_EDITOR'].model.display.passcode(),\r\n            filename: filename,\r\n            code: contents\r\n        };\r\n        const onError = (e: any, textStatus: string, errorThrown: any) => {\r\n            console.error(\"Failed to load (HTTP LEVEL)\", e, textStatus, errorThrown);\r\n            this.assignment(null);\r\n        };\r\n        const onSuccess = (response: any) => response.success && console.log(response);\r\n        if (block) {\r\n            BlockPyServer._postBlocking(\"saveFile\", data, 3, () => 0, onSuccess, onError);\r\n        } else {\r\n            BlockPyServer._postLatestRetry(data, filename, \"saveFile\", 300, onError);\r\n        }\r\n\r\n    }\r\n\r\n    submit() {\r\n        let BlockPyServer = window['$MAIN_BLOCKPY_EDITOR'].components.server;\r\n        let now = new Date();\r\n        let data = {\r\n            assignment_id: this.assignment().id,\r\n            assignment_group_id: this.assignmentGroupId,\r\n            course_id: this.courseId,\r\n            submission_id: this.submission().id,\r\n            user_id: this.user.id,\r\n            status: 0,\r\n            correct: false,\r\n            timestamp: now.getTime(),\r\n            timezone: now.getTimezoneOffset(),\r\n            passcode: window['$MAIN_BLOCKPY_EDITOR'].model.display.passcode(),\r\n        };\r\n        BlockPyServer._postBlocking(\"updateSubmission\", data, 3,\r\n               (response: any) => {\r\n                    //console.log(response.message.feedbacks);\r\n                    if (response.success) {\r\n                        console.log(response);\r\n                    }\r\n               },\r\n               (e: any, textStatus: string, errorThrown: any) => {\r\n                    console.error(\"Failed to load (HTTP LEVEL)\", e, textStatus, errorThrown);\r\n                    this.assignment(null);\r\n                });\r\n    }\r\n}\r\n\r\n\r\nexport const QUIZZER_HTML = `\r\n<div data-bind=\"if: assignment\">\r\n    <div>\r\n    <p>\r\n        Please complete all the questions below. Then, click Submit. You have multiple attempts.\r\n    </p>\r\n    </div>\r\n    <div data-bind=\"foreach: quiz()?.questions()\">\r\n        <div class=\"quizzer-question border border-secondary rounded p-4 m-4\">\r\n            <quizzer-question-status params=\"status: student, question: $data\"></quizzer-question-status>\r\n            <span class=\"font-weight-bold\">Question <span data-bind=\"text: 1+$index()\"></span></span>\r\n            <span>- <small data-bind=\"text: id\"></small></span>\r\n            <div data-bind=\"markdowned: $parent.quiz().makeBody($data, $index())\"></div>\r\n            \r\n            <div data-bind=\"switch: type\">\r\n                <!-- True/False Question -->\r\n                <div data-bind=\"case: 'true_false_question'\">\r\n                    <div class=\"form-check\">\r\n                      <input data-bind=\"checked: student,\r\n                                    attr: {name: 'question-tf-'+$index(),\r\n                                           id: 'question-tf-'+$index()+'-t'}\"\r\n                        class=\"form-check-input\" type=\"radio\" value=\"true\">\r\n                      <label class=\"form-check-label\" data-bind=\"attr: {for: 'question-mcq-'+$index()+'t'}\">\r\n                        True\r\n                      </label>\r\n                    </div>\r\n                    <div class=\"form-check\">\r\n                      <input data-bind=\"checked: student,\r\n                                    attr: {name: 'question-tf-'+$index(),\r\n                                           id: 'question-tf-'+$index()+'-f'}\"\r\n                        class=\"form-check-input\" type=\"radio\" value=\"false\">\r\n                      <label class=\"form-check-label\" data-bind=\"attr: {for: 'question-mcq-'+$index()+'f'}\">\r\n                        False\r\n                      </label>\r\n                    </div>\r\n                </div>\r\n                <!-- Multiple Choice -->\r\n                <div data-bind=\"case: 'multiple_choice_question'\">\r\n                    <!-- ko foreach: answers -->\r\n                    <div class=\"form-check\">\r\n                      <input data-bind=\"checked: $parent.student,\r\n                                        value: $data,\r\n                                        attr: {name: 'question-mcq-'+$parentContext.$index(),\r\n                                               id: 'question-mcq-'+$index()}\"\r\n                        class=\"form-check-input\" type=\"radio\">\r\n                      <label data-bind=\"text: $data, attr: {for: 'question-mcq-'+$index()}\" class=\"form-check-label\">\r\n                      </label>\r\n                    </div>\r\n                    <!-- /ko -->\r\n                </div>\r\n                <!-- Multiple Answers Question -->\r\n                <div data-bind=\"case: 'multiple_answers_question'\">\r\n                    <!-- ko foreach: answers -->\r\n                    <div class=\"form-check\">\r\n                      <input data-bind=\"checked: $parent.student,\r\n                                        checkedValue: $data,\r\n                                        attr: {id: 'question-maq-'+$parentContext.$index()+'-'+$index(),\r\n                                               name: 'question-maq-'+$parentContext.$index()+'-'+$index()}\"\r\n                        class=\"form-check-input\" type=\"checkbox\">\r\n                      <label data-bind=\"text: $data, attr: {for: 'question-maq-'+$parentContext.$index()+'-'+$index()}\" class=\"form-check-label\">\r\n                      </label>\r\n                    </div>\r\n                    <!-- /ko -->\r\n                </div>\r\n                <!-- Text Only Question -->\r\n                <div data-bind=\"case: 'text_only_question'\"></div>\r\n                <!-- Matching Question -->\r\n                <div data-bind=\"case: 'matching_question'\" class=\"container\">\r\n                    <!-- ko foreach: statements -->\r\n                    <div class=\"row justify-content-between mb-3\">\r\n                        <div class=\"col\" data-bind=\"text: $data\"></div>\r\n                        <div class=\"col\">\r\n                            <select class=\"custom-select\"\r\n                                data-bind=\"options: $parent.answers,\r\n                                           optionsCaption: '',\r\n                                           value: $parent.student[$index()],\r\n                                           attr: {id: 'question-mat-'+$parentContext.$index()+'-'+$index()}\"></select>\r\n                        </div>\r\n                    </div>\r\n                    <!-- /ko -->\r\n                </div>\r\n                <!-- Multiple Dropdown Question -->\r\n                <div data-bind=\"case: 'multiple_dropdowns_question'\">\r\n                </div>\r\n                <!-- Short Answer -->\r\n                <div data-bind=\"case: 'short_answer_question'\">\r\n                    <div class=\"form-group\">\r\n                        <input type=\"text\" class=\"form-control\"\r\n                            data-bind=\"value: student, attr: {id: 'question-sa-'+$index()}\">\r\n                    </div>\r\n                </div>\r\n                <!-- Numerical Input -->\r\n                <div data-bind=\"case: 'numerical_question'\">\r\n                    <div class=\"form-group\">\r\n                        <input type=\"number\" class=\"form-control\"\r\n                            data-bind=\"value: student, attr: {id: 'question-num-'+$index()}\">\r\n                    </div>\r\n                </div>\r\n                <!-- Multiple Fill in the Blank Question -->\r\n                <div data-bind=\"case: 'fill_in_multiple_blanks_question'\">\r\n                </div>\r\n                <!-- Else -->\r\n                <div data-bind=\"case: $default\">\r\n                    I have no idea what this is!\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <button data-bind=\"click: saveSubmission\">SAVE</button><br>\r\n    <button data-bind=\"click: submit\">Submit answer</button><br>\r\n    <button data-bind=\"click: saveAssignment\">Save Assignment</button><br>\r\n    <h6>Instructions</h6>\r\n    <textarea data-bind=\"textInput: assignment().instructions\" style=\"width: 100%; height: 300px\"></textarea><br>\r\n    <h6>On Run</h6>\r\n    <textarea data-bind=\"textInput: assignment().onRun\" style=\"width: 100%; height: 300px\"></textarea><br>\r\n    <h6>Submission</h6>\r\n    <!-- ko if: submission -->\r\n    <textarea data-bind=\"textInput: submission().code\" style=\"width: 100%; height: 300px\"></textarea><br>\r\n    <button data-bind=\"click: saveSubmissionRaw\">Save code changes</button>\r\n    <!-- /ko -->\r\n</div>\r\n<div data-bind=\"if: server.isLoading()\">\r\n    Loading!\r\n</div>\r\n\r\n`;\r\n\r\nko.components.register(\"quizzer\", {\r\n    viewModel: Quizzer,\r\n    template: QUIZZER_HTML\r\n});\r\n\r\nexport const QUIZZER_QUESTION_STATUS_HTML = `\r\n<div data-bind=\"switch: statusCode\" class=\"float-right\">\r\n    <!-- ko case: 'answered' -->\r\n        <i class=\"far fa-square color-primary\"></i>\r\n    <!-- /ko -->\r\n    <!-- ko case: 'unanswered' -->\r\n        <i class=\"fas fa-square color-primary\"></i>\r\n    <!-- /ko -->\r\n</div>\r\n`;\r\n\r\ninterface QuizzerQuestionStatusJson {\r\n    status: ko.Observable<string>[];\r\n    question: Question;\r\n}\r\n\r\nclass QuizzerQuestionStatus {\r\n    private status: ko.Observable<string>[];\r\n    private question: Question;\r\n    private statusCode: ko.PureComputed<string>;\r\n    constructor(params: QuizzerQuestionStatusJson) {\r\n        this.status = params.status;\r\n        this.question = params.question\r\n        this.statusCode = ko.pureComputed<string>(() => {\r\n            const value = this.question && subscribeToStudent(this.question);\r\n            const answered = value && value.filter((answer: ko.Observable<string>) => !answer()).length;\r\n            if (answered) {\r\n                return 'answered';\r\n            } else {\r\n                return 'unanswered';\r\n            }\r\n        }, this);\r\n    }\r\n}\r\n\r\nko.components.register(\"quizzer-question-status\", {\r\n    viewModel: QuizzerQuestionStatus,\r\n    template: QUIZZER_QUESTION_STATUS_HTML\r\n});","import {Server} from \"./server\";\r\nimport {Course} from \"../models/course\";\r\nimport {User} from \"../models/user\";\r\nimport * as ko from 'knockout';\r\nimport {Watcher, WatcherTemplate} from \"./watcher\";\r\nimport {prettyPrintDateTime} from \"./dates\";\r\n\r\nexport interface CourseListInterfaceJson {\r\n    server: Server;\r\n    courses: Course[];\r\n    user: User;\r\n}\r\n\r\nexport class CourseListInterface {\r\n    server: Server;\r\n    courses: Course[];\r\n    user: User;\r\n\r\n    constructor(params: CourseListInterfaceJson) {\r\n        this.server = params.server;\r\n        this.courses = params.courses;\r\n        this.user = params.user;\r\n        console.log(\"TEST\");\r\n    }\r\n\r\n    getRole(id: number): string {\r\n        let roles = this.user.roles();\r\n        for (let i=0; i<roles.length; i+=1) {\r\n            let role = roles[i];\r\n            if (role.courseId() === id) {\r\n                return role.name();\r\n            }\r\n        }\r\n        return \"No Role\";\r\n    }\r\n}\r\n\r\nexport const COURSE_LIST_HTML = `\r\n<ul class=\"list-unstyled\">\r\n<!-- ko foreach: courses -->\r\n    <li class=\"media mt-2 border-bottom\">\r\n        <a data-bind=\"attr: {href: id}\" class=\"btn btn-primary mr-3\">\r\n            <span class=\"fas fa-eye\"></span> Open\r\n        </a>\r\n        <div class=\"media-body\">\r\n            <div class=\"d-flex w-100 justify-content-between\">\r\n                <h5 class=\"mb-1\" data-bind=\"text: name\"></h5>\r\n                <small class=\"text-muted\" data-bind=\"text: prettyDateCreated\"></small>\r\n            </div>\r\n            <p class=\"mb-1\">\r\n                Role: <span data-bind=\"text: $parent.getRole(id)\" class=\"text-capitalize\"></span><br>\r\n                <p data-bind=\"text: term\"></p>\r\n            </p>\r\n            <small class=\"text-muted\" data-bind=\"if: url\">\r\n                Course URL: <span data-bind=\"text: url\"></span>,\r\n            </small>\r\n            <small class=\"text-muted\" data-bind=\"if: service()!=='native'\">\r\n                LMS: <span data-bind=\"text: service\"></span>,\r\n            </small>\r\n            <small class=\"text-muted\">\r\n                Course ID: <span data-bind=\"text: id\"></span>\r\n            </small>\r\n        </div>\r\n    </li>\r\n<!-- /ko -->\r\n</ul>\r\n`;\r\n\r\nko.components.register(\"course-list\", {\r\n    viewModel: CourseListInterface,\r\n    template: COURSE_LIST_HTML\r\n});\r\n\r\n","import {Server} from \"./server\";\r\nimport {Course} from \"../models/course\";\r\nimport {User} from \"../models/user\";\r\nimport * as ko from 'knockout';\r\nimport {AssignmentGroup} from \"../models/assignment_group\";\r\nimport {Assignment} from \"../models/assignment\";\r\n\r\nexport interface AssignmentManagerInterfaceJson {\r\n    server: Server;\r\n    course: Course;\r\n    user: User;\r\n}\r\n\r\nexport class AssignmentManagerInterface {\r\n    server: Server;\r\n    course: Course;\r\n    user: User;\r\n\r\n    assignments: KnockoutObservableArray<Assignment>;\r\n    groups: KnockoutObservableArray<AssignmentGroup>;\r\n\r\n    assignmentToGroup: Record<number, AssignmentGroup>;\r\n    groupToAssignment: Record<number, Assignment>;\r\n\r\n    constructor(params: AssignmentManagerInterfaceJson) {\r\n        this.server = params.server;\r\n        this.course = params.course;\r\n        this.user = params.user;\r\n        this.assignments = ko.observableArray<Assignment>([]);\r\n        this.groups = ko.observableArray<AssignmentGroup>([]);\r\n        this.server.assignmentStore.getAllAvailable({assignment_ids: \"\", course_id: this.course.id}).then((created: Assignment[]) => {\r\n            this.assignments.push(...created);\r\n            created.map(assignment => {\r\n                if (assignment.group() != null) {\r\n                    // TODO: Figure this all out\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n}\r\n\r\n\r\nconst NEW_ASSIGNMENT_MODAL = `<div class=\"modal fade\" id=\"assignment-create\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"assignment-create-label\">\r\n  <div class=\"modal-dialog\" role=\"document\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>\r\n        <h4 class=\"modal-title\" id=\"assignment-create-label\">Create Assignment</h4>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <div class=\"form-group\">\r\n            <label for=\"assignment-name\">Type:\r\n            <select class=\"form-control\" data-bind=\"value: createAssignmentType\">\r\n                <option>BlockPy</option>\r\n                <option>Reading</option>\r\n                <option value=\"quiz\">Quiz Question</option>\r\n                <option>TypeScript</option>\r\n            </select></label>\r\n        </div>\r\n        <div class=\"form-group\" data-bind=\"visible: createAssignmentType() != 'Maze'\">\r\n            <label for=\"assignment-name\">Student-facing Name:\r\n            <input type=\"text\" class=\"form-control\" id=\"assignment-name\"\r\n                   data-bind=\"value: createAssignmentName\" placeholder=\"Day 1 - #1.1\">\r\n            </label>\r\n        </div>\r\n        <div class=\"form-group\" data-bind=\"visible: createAssignmentType() != 'Maze'\">\r\n            <label for=\"assignment-url\">Unique Internal URL:\r\n            <input type=\"text\" class=\"form-control\" id=\"assignment-url\"\r\n                   data-bind=\"value: createAssignmentUrl\" placeholder=\"assignment_url\">\r\n            </label>\r\n        </div>\r\n        <div class=\"form-group\" data-bind=\"visible: createAssignmentType() == 'Maze'\">\r\n            <label for=\"assignment-name\">Maze Level:\r\n            <select class=\"form-control\" data-bind=\"value: createAssignmentLevel\">\r\n                <option value='1'>Level 1</option>\r\n                <option value='2'>Level 2</option>\r\n                <option value='3'>Level 3</option>\r\n                <option value='4'>Level 4</option>\r\n                <option value='5'>Level 5</option>\r\n                <option value='6'>Level 6</option>\r\n                <option value='7'>Level 7</option>\r\n                <option value='8'>Level 8</option>\r\n                <option value='9'>Level 9</option>\r\n                <option value='10'>Level 10</option>\r\n            </select>\r\n            </label>\r\n        </div>\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">Cancel</button>\r\n        <button type=\"button\" class=\"btn btn-primary\" data-bind=\"click: $root.addAssignment\">Create</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"modal fade\" id=\"group-create\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"group-create-label\">\r\n  <div class=\"modal-dialog\" role=\"document\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>\r\n        <h4 class=\"modal-title\" id=\"group-create-label\">Create Assignment Group</h4>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <div class=\"form-group\">\r\n            <label for=\"group-name\">Name:\r\n            <input type=\"text\" class=\"form-control\" id=\"group-name\"\r\n                   data-bind=\"value: createGroupName\" placeholder=\"Day X - \">\r\n            </label>\r\n        </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"group-url\">Internal Unique Url:\r\n            <input type=\"text\" class=\"form-control\" id=\"group-url\"\r\n                   data-bind=\"value: createGroupUrl\" placeholder=\"unique_group\">\r\n            </label>\r\n        </div>\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">Cancel</button>\r\n        <button type=\"button\" class=\"btn btn-primary\" data-bind=\"click: $root.addGroup\">Create</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>`;\r\n\r\n\r\nexport const ASSIGNMENT_MANAGER_HTML = `\r\n\r\nBulk edit assignments/groups\r\n\r\nThen list the actual groups/assignments\r\n\r\nGroup by?\r\n\r\nSort by name, date, url, points\r\n\r\nYes/No: Show assignments used by this course\r\n\r\n<div>\r\n    <a href=\"#\" data-toggle=\"modal\" data-target=\"#assignment-create\" class=\"btn btn-outline-secondary btn-sm\">\r\n        Create Assignment <span class=\"fas fa-plus\" aria-hidden=\"true\"></span></a>\r\n    \r\n    <a href=\"#\" data-toggle=\"modal\" data-target=\"#group-create\" class=\"btn btn-outline-secondary btn-sm\">\r\n        Create Group <span class=\"fas fa-folder-plus\" aria-hidden=\"true\"></span></a>\r\n    \r\n    <a href=\"#\" data-toggle=\"modal\" data-target=\"#assignment-import\" class=\"btn btn-outline-secondary btn-sm\">\r\n        Import from another course <span class=\"fas fa-file-import\" aria-hidden=\"true\"></span></a>\r\n        \r\n    <a href=\"#\" data-toggle=\"modal\" data-target=\"#assignment-upload\" class=\"btn btn-outline-secondary btn-sm\">\r\n        Import from file <span class=\"fas fa-file-upload\" aria-hidden=\"true\"></span></a>\r\n</div>\r\n\r\n<table class=\"table table-condensed table-hover\">\r\n<caption>Assignments</caption>\r\n<tbody>\r\n   <!-- ko foreach: assignments -->\r\n   <tr class='hover-movers-rows'>\r\n        <td style='width: 25%'>\r\n            <strong data-bind=\"text: title\"></strong><br>\r\n            <span data-bind=\"text: url\" class=\"small\"></span><br>\r\n            <span data-bind=\"text: prettyDateModified, attr: {title: dateModified}\"></span>\r\n        </td>\r\n        <td style='width: 42%'>\r\n            <span data-bind=\"text: instructions\"></span>\r\n        </td>\r\n        <td style='width: 16%'>\r\n            <div class=\"mover-buttons btn-group\">\r\n              <button type=\"button\" class=\"btn btn-outline-secondary btn-sm dropdown-toggle\"\r\n                      data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                      Move Group<span class=\"caret\"></span>\r\n              </button>\r\n              <div class=\"dropdown-menu dropdown-menu-right\" data-bind=\"foreach: $parents.groups\">\r\n                  <a href=\"#\" class=\"dropdown-item\" data-bind=\"click: $root.moveMembership.bind($data, $parent, $parents[1]), text: name\"></a>\r\n              </div>\r\n            </div>\r\n        </td>\r\n        <td style='width: 17%'>\r\n            <div class=\"btn-group\">\r\n                <!-- Select button -->\r\n                <a target=\"_blank\" data-bind=\"attr: { href: editUrl }\" class=\"btn btn-primary btn-sm\">Edit</a>\r\n                <!-- Dropdown -->\r\n                <button type=\"button\" class=\"btn btn-primary dropdown-toggle btn-sm\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                    <span class=\"caret\"></span>\r\n                    <span class=\"sr-only\">Toggle Dropdown</span>\r\n                </button>\r\n                <!-- Extended buttons -->\r\n                <div class=\"dropdown-menu\">\r\n                    <a class=\"dropdown-item\" href=\"#\" data-bind=\"click: null /*$root.removeAssignment.bind($data, $parent)*/\">Delete</a>\r\n                </div>\r\n            </div>\r\n        </td>\r\n    </tr>\r\n    <!-- /ko -->\r\n</tbody>\r\n</table>\r\n\r\n\r\n\r\n`;\r\n\r\nko.components.register(\"assignment-manager\", {\r\n    viewModel: AssignmentManagerInterface,\r\n    template: ASSIGNMENT_MANAGER_HTML\r\n});\r\n\r\n","import * as ko from 'knockout';\r\nimport {Server} from \"./server\";\r\nimport {User} from \"../models/user\";\r\nimport {Assignment} from \"../models/assignment\";\r\nimport {Submission} from \"../models/submission\";\r\n\r\nexport interface ReaderJson {\r\n    server: Server;\r\n    courseId: number;\r\n    user: User;\r\n    currentAssignmentId: ko.Observable<number>;\r\n    assignmentGroupId: number;\r\n}\r\n\r\nexport class Reader {\r\n    server: Server;\r\n    courseId: number;\r\n    user: User;\r\n    assignmentGroupId: number;\r\n\r\n    currentAssignmentId: ko.Observable<number>;\r\n    assignment: ko.Observable<Assignment>;\r\n    submission: ko.Observable<Submission>;\r\n\r\n    constructor(params: ReaderJson) {\r\n        this.server = params.server;\r\n        this.courseId = params.courseId;\r\n        this.user = params.user;\r\n        this.currentAssignmentId = params.currentAssignmentId;\r\n        this.assignmentGroupId = params.assignmentGroupId;\r\n        this.assignment = ko.observable(null);\r\n        this.submission = ko.observable(null);\r\n\r\n        this.currentAssignmentId.subscribe((newId) => {\r\n            this.loadReading(newId);\r\n        }, this);\r\n        this.loadReading(this.currentAssignmentId());\r\n    }\r\n\r\n    loadReading(assignmentId: number) {\r\n        if (assignmentId != null) {\r\n            let BlockPyServer = window['$MAIN_BLOCKPY_EDITOR'].components.server;\r\n            let data = BlockPyServer.createServerData();\r\n            data[\"assignment_id\"] = assignmentId;\r\n            BlockPyServer._postBlocking(\"loadAssignment\", data, 4,\r\n                (response: any) => {\r\n                    if (response.success) {\r\n                        let assignment = this.server.assignmentStore.newInstance(response.assignment);\r\n                        let submission = this.server.submissionStore.newInstance(response.submission);\r\n                        this.assignment(assignment);\r\n                        this.submission(submission);\r\n                        console.log(this.assignment());\r\n                    } else {\r\n                        console.error(\"Failed to load\", response);\r\n                        this.assignment(null);\r\n                    }\r\n                },\r\n                (e: any, textStatus: string, errorThrown: any) => {\r\n                    console.error(\"Failed to load (HTTP LEVEL)\", e, textStatus, errorThrown);\r\n                    this.assignment(null);\r\n                });\r\n        } else {\r\n            this.assignment(null);\r\n        }\r\n    }\r\n}\r\n\r\n// TODO: Pop out button to put into another frame\r\n// TODO: Log all youtube and scrolling\r\n\r\n\r\nexport const READER_HTML = `\r\n<div data-bind=\"if: assignment\">\r\n<div data-bind=\"markdowned: assignment().instructions()\" style=\"background: #FBFAF7\"\r\n    class=\"p-4\"></div>\r\n</div>\r\n`\r\n\r\nko.components.register(\"reader\", {\r\n    viewModel: Reader,\r\n    template: READER_HTML\r\n});\r\n","module.exports=/[\\0-\\x1F\\x7F-\\x9F]/","module.exports=/[\\xAD\\u0600-\\u0605\\u061C\\u06DD\\u070F\\u08E2\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u2066-\\u206F\\uFEFF\\uFFF9-\\uFFFB]|\\uD804[\\uDCBD\\uDCCD]|\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]/","module.exports=/[!-#%-\\*,-\\/:;\\?@\\[-\\]_\\{\\}\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4E\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD803[\\uDF55-\\uDF59]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDC4B-\\uDC4F\\uDC5B\\uDC5D\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDE60-\\uDE6C\\uDF3C-\\uDF3E]|\\uD806[\\uDC3B\\uDE3F-\\uDE46\\uDE9A-\\uDE9C\\uDE9E-\\uDEA2]|\\uD807[\\uDC41-\\uDC45\\uDC70\\uDC71\\uDEF7\\uDEF8]|\\uD809[\\uDC70-\\uDC74]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD81B[\\uDE97-\\uDE9A]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]|\\uD83A[\\uDD5E\\uDD5F]/","module.exports=/[ \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/","'use strict';\n\nexports.Any = require('./properties/Any/regex');\nexports.Cc  = require('./categories/Cc/regex');\nexports.Cf  = require('./categories/Cf/regex');\nexports.P   = require('./categories/P/regex');\nexports.Z   = require('./categories/Z/regex');\n","module.exports=/[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/","module.exports = ko;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(9259);\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};"],"sourceRoot":""}