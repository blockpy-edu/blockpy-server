[
  {
    "body": {
      "questions": {
        "Survey - Project Progress - Coverage": {
          "type": "multiple_choice_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Reflecting on the code coverage of your unit tests, how well tested is your game?</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "My game is completely tested",
            "I've tested most of the functionality",
            "I've tested some of the functionality",
            "I have not started writing tests yet"
          ]
        },
        "Survey - Project Progress - Features": {
          "type": "multiple_choice_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>How many of your game features do you feel you have completed?</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "All of the features",
            "Most but not all of the features",
            "At least half of the features",
            "At least one feature",
            "I have not completed any features yet"
          ]
        },
        "Survey - Project Progress - Game Choice": {
          "type": "multiple_choice_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Which game did you pick?</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "Tic-Tac-Toe",
            "Rock-Paper-Scissors",
            "Whack-a-mole",
            "Tamagotchi",
            "Concentration",
            "Cellular Automata",
            "Coloring Squares",
            "Top-down Adventurer",
            "Asteroids",
            "Checkers",
            "Go Fish with AI",
            "2D Platformer with Editor"
          ]
        },
        "Survey - Project Progress - Self-Reflection": {
          "type": "essay_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>If you do not believe that you will be able to earn a satisfactory grade on this project, what do you think will prevent you from doing so?</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "Survey - Project Progress - Trajectory": {
          "type": "multiple_choice_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>The due date is now one week away. How do you think you will do?</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "I am already basically done the project",
            "I am confident that I will be done the project in time.",
            "I am confident that I will be done a reasonable version of the project that I can submit in time",
            "I am not confident that I will be able to earn a passing grade on this project"
          ]
        }
      }
    },
    "checks": {
      "questions": {
        "Survey - Project Progress - Coverage": {
          "correct": "My game is completely tested",
          "feedback": {}
        },
        "Survey - Project Progress - Features": {
          "correct": "All of the features",
          "feedback": {}
        },
        "Survey - Project Progress - Game Choice": {
          "correct": "Tic-Tac-Toe",
          "feedback": {}
        },
        "Survey - Project Progress - Self-Reflection": {},
        "Survey - Project Progress - Trajectory": {
          "correct": "I am already basically done the project",
          "feedback": {}
        }
      }
    }
  },
  {
    "body": {
      "questions": {}
    },
    "checks": {
      "questions": {}
    }
  },
  {
    "body": {
      "questions": {
        "DetermineAppropriateDataFlow": {
          "type": "multiple_answers_question",
          "points": 3.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>Given the program below,</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #008000; font-weight: bold;\">def</span> <span style=\"color: #0000FF;\">output_answer</span>(response):\n    <span style=\"color: #008000; font-weight: bold;\">print</span>(<span style=\"color: #BA2121;\">\"My favorite number is\"</span>, response<span style=\"color: #666666;\">+1</span>)\n\n<span style=\"color: #008000; font-weight: bold;\">def</span> <span style=\"color: #0000FF;\">convert_to_number</span>(response):\n    <span style=\"color: #008000; font-weight: bold;\">return</span> <span style=\"color: #008000;\">int</span>(response)\n\nresponse <span style=\"color: #666666;\">=</span> <span style=\"color: #008000;\">input</span>(<span style=\"color: #BA2121;\">\"What is your favorite number?\"</span>)\n</pre></div>\n\n\n<p>The user will type in:</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>8\n</pre></div>\n\n\n<p>And expect the output:</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>My favorite number is 9\n</pre></div>\n\n\n<p>Which of the following lines of code will have the data flow correctly through\nboth functions in order to print the message with the result?</p>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>convert_to_number(response)\noutput_answer(response)\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>output_answer(convert_to_number(response))\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>convert_to_number()\noutput_answer()\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #008000; font-weight: bold;\">print</span>(convert_to_number(response))\n<span style=\"color: #008000; font-weight: bold;\">print</span>(output_answer(response))\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>response <span style=\"color: #666666;\">=</span> convert_to_number(response)\noutput_answer(response)\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "No extra code is necessary, because the variables share the same name.",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">It's not possible to have the data flow, because of the order the functions were defined in.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
          ]
        },
        "DetermineNestedDataLength_1": {
          "type": "fill_in_multiple_blanks_question",
          "points": 3.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>Given the following code:</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>sizes <span style=\"color: #666666;\">=</span> [{<span style=\"color: #BA2121;\">\"Width\"</span>: <span style=\"color: #666666;\">5</span>, <span style=\"color: #BA2121;\">\"Height\"</span>: <span style=\"color: #666666;\">7</span>},\n         {<span style=\"color: #BA2121;\">\"Width\"</span>: <span style=\"color: #666666;\">3</span>, <span style=\"color: #BA2121;\">\"Height\"</span>: <span style=\"color: #666666;\">12</span>},\n         {<span style=\"color: #BA2121;\">\"Width\"</span>: <span style=\"color: #666666;\">4</span>, <span style=\"color: #BA2121;\">\"Height\"</span>: <span style=\"color: #666666;\">4</span>},\n         {<span style=\"color: #BA2121;\">\"Width\"</span>: <span style=\"color: #666666;\">6</span>, <span style=\"color: #BA2121;\">\"Height\"</span>: <span style=\"color: #666666;\">1</span>}]\n</pre></div>\n\n\n<p>How many:</p>\n<ul>\n<li>Elements are in the list? [elements_in_list]</li>\n<li>Keys are in the first dictionary? [keys_in_first_dictionary]</li>\n</ul>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "DetermineNestedDataLength_2": {
          "type": "fill_in_multiple_blanks_question",
          "points": 3.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>Given the following code:</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>positions <span style=\"color: #666666;\">=</span> [{<span style=\"color: #BA2121;\">\"Left\"</span>: <span style=\"color: #666666;\">5</span>, <span style=\"color: #BA2121;\">\"Top\"</span>: <span style=\"color: #666666;\">7</span>},\n             {<span style=\"color: #BA2121;\">\"Left\"</span>: <span style=\"color: #666666;\">3</span>, <span style=\"color: #BA2121;\">\"Top\"</span>: <span style=\"color: #666666;\">12</span>},\n             {<span style=\"color: #BA2121;\">\"Left\"</span>: <span style=\"color: #666666;\">4</span>, <span style=\"color: #BA2121;\">\"Top\"</span>: <span style=\"color: #666666;\">4</span>},\n             {<span style=\"color: #BA2121;\">\"Left\"</span>: <span style=\"color: #666666;\">6</span>, <span style=\"color: #BA2121;\">\"Top\"</span>: <span style=\"color: #666666;\">1</span>}]\n</pre></div>\n\n\n<p>How many:</p>\n<ul>\n<li>Elements are in the list? [elements_in_list]</li>\n<li>Keys are in the first dictionary? [keys_in_first_dictionary]</li>\n</ul>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "DictionaryVsListIndexing": {
          "type": "matching_question",
          "points": 3.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>dct <span style=\"color: #666666;\">=</span> {<span style=\"color: #666666;\">3</span>: <span style=\"color: #666666;\">2</span>, <span style=\"color: #666666;\">1</span>: <span style=\"color: #666666;\">0</span>}\nlst <span style=\"color: #666666;\">=</span> [<span style=\"color: #666666;\">3</span>, <span style=\"color: #666666;\">2</span>, <span style=\"color: #666666;\">1</span>]\n</pre></div>\n\n\n<p>For each expression, determine the value or error produced.</p>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "0",
            "KeyError",
            "2",
            "1",
            "IndexError",
            "3"
          ],
          "statements": [
            "dct[1]",
            "dct[2]",
            "dct[3]",
            "lst[1]",
            "lst[2]",
            "lst[3]"
          ]
        },
        "EvaluateConditionals_1": {
          "type": "matching_question",
          "points": 3.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Evaluate each conditional expression as either True, False, or Causes an Error. Apply the rules of Truthiness where appropriate.</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "True",
            "False",
            "Causes an error"
          ],
          "statements": [
            "\"               \"",
            "\"\"",
            "\"0\"",
            "False",
            "\"False\"",
            "\"banana\"[0] == \"b\"",
            "\"Ada\"[-1] == \"A\"",
            "3.5 < 8",
            "\"2\" < 4",
            "\"5\" == 5"
          ]
        },
        "EvaluateConditionals_2": {
          "type": "matching_question",
          "points": 3.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Evaluate each conditional expression as either True, False, or Causes an Error. Apply the rules of Truthiness where appropriate.</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "True",
            "False",
            "Causes an error"
          ],
          "statements": [
            "\"          \"",
            "\"\"",
            "\"0\"",
            "False",
            "\"False\"",
            "\"doggo\"[0] == \"d\"",
            "\"Radar\"[-1] == \"R\"",
            "9.5 < 8",
            "\"5\" < 3",
            "\"6\" == 6"
          ]
        },
        "EvaluateFunctionMisconceptions_1": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Every function created with the <code>def</code> keyword <em>must</em> have AT LEAST ONE parameter.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "EvaluateFunctionMisconceptions_2": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Generally speaking, a function created with the <code>def</code> keyword can have any number of parameters.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "EvaluateListDictionaryMisconceptions_1": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Summing all the values of a dictionary is faster than summing all the elements of a list because you can look-up items instantly.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "EvaluateListDictionaryMisconceptions_2": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Summing all the elements of a list is faster than summing all the values of a dictionary because you can access elements by position.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "EvaluatePrintMisconceptions_1": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">A function can either print or return, but not both.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "EvaluatePrintMisconceptions_2": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">A single function can both print and return.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "IdentifyIterationVariableType_1": {
          "type": "matching_question",
          "points": 3.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>Given the following code:</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\">\n<pre style=\"line-height: 125%;\"><span></span>my_sites <span style=\"color: #666666;\">=</span> [{<span style=\"color: #ba2121;\">'name'</span>: <span style=\"color: #ba2121;\">'Facebook'</span>, <span style=\"color: #ba2121;\">'users'</span>: <span style=\"color: #666666;\">543</span>},\n            {<span style=\"color: #ba2121;\">'name'</span>: <span style=\"color: #ba2121;\">'Myspace'</span>, <span style=\"color: #ba2121;\">'users'</span>: <span style=\"color: #666666;\">7</span>},\n            {<span style=\"color: #ba2121;\">'name'</span>: <span style=\"color: #ba2121;\">'Twitter'</span>, <span style=\"color: #ba2121;\">'users'</span>: <span style=\"color: #666666;\">1024</span>}]\n<span style=\"color: #008000; font-weight: bold;\">for</span> site <span style=\"color: #aa22ff; font-weight: bold;\">in</span> my_sites:\n    <span style=\"color: #008000; font-weight: bold;\">print</span>(site)\n</pre>\n</div>\n<p>Identify the type of each of the following expressions, or \"Causes an error\" if the expression is invalid.</p>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "Dictionary",
            "List",
            "String",
            "Causes an error",
            "Integer"
          ],
          "statements": [
            "site",
            "my_sites",
            "site['name']",
            "my_sites['users']",
            "site['Twitter']",
            "my_sites[0]",
            "name"
          ]
        },
        "IdentifyIterationVariableType_2": {
          "type": "matching_question",
          "points": 3.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>Given the following code:</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\">\n<pre style=\"line-height: 125%;\"><span></span>the_airlines <span style=\"color: #666666;\">=</span> [{<span style=\"color: #ba2121;\">'name'</span>: <span style=\"color: #ba2121;\">'Delta'</span>, <span style=\"color: #ba2121;\">'employees'</span>: <span style=\"color: #666666;\">543</span>},\n                {<span style=\"color: #ba2121;\">'name'</span>: <span style=\"color: #ba2121;\">'American'</span>, <span style=\"color: #ba2121;\">'employees'</span>: <span style=\"color: #666666;\">512</span>},\n                {<span style=\"color: #ba2121;\">'name'</span>: <span style=\"color: #ba2121;\">'Alaska'</span>, <span style=\"color: #ba2121;\">'employees'</span>: <span style=\"color: #666666;\">47</span>}]\n<span style=\"color: #008000; font-weight: bold;\">for</span> airline <span style=\"color: #aa22ff; font-weight: bold;\">in</span> the_airlines:\n    <span style=\"color: #008000; font-weight: bold;\">print</span>(airline)\n</pre>\n</div>\n<p>Identify the type of each of the following expressions, or \"Causes an error\" if the expression is invalid.</p>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "Dictionary",
            "List",
            "String",
            "Causes an error",
            "Integer"
          ],
          "statements": [
            "airline",
            "the_airlines",
            "airline['name']",
            "the_airlines['employees']",
            "airline['Delta']",
            "the_airlines[0]",
            "name"
          ]
        },
        "IdentifyLiteralType_1": {
          "type": "matching_question",
          "points": 3.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Identify the type of each literal value.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "Integer",
            "Boolean",
            "Float",
            "String",
            "None",
            "Not a literal value",
            "Dictionary",
            "List"
          ],
          "statements": [
            "10",
            "False",
            "4.0",
            "\"4\"",
            "\"\"",
            "None",
            "0",
            "\"False\"",
            "\"Boolean\"",
            "Integer",
            "{}",
            "[]",
            "[0, 4, 3]",
            "{\"Key\": [5, 3]}"
          ]
        },
        "IdentifyLiteralType_2": {
          "type": "matching_question",
          "points": 3.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Identify the type of each literal value.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "Integer",
            "Boolean",
            "Float",
            "String",
            "None",
            "Not a literal value",
            "Dictionary",
            "List"
          ],
          "statements": [
            "17",
            "True",
            "5.0",
            "\"2\"",
            "\"\"",
            "None",
            "0",
            "\"True\"",
            "\"Boolean\"",
            "Float",
            "{}",
            "[]",
            "[2.0, 3.7, 6.5]",
            "{\"Banana\": [0]}"
          ]
        },
        "IdentifyPrintAsOneWay": {
          "type": "multiple_answers_question",
          "points": 3.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">After data is printed to the console, which of the following will retrieve the data later in the program from the console? Mark all that are correct.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Using the <code>input</code> function<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Using the <code>unprint</code> statement<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Use a <code>return</code> statement<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Use a <code>pass</code> statement to \"pass the data back\".<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "Using parameters",
            "None of the other possibilities"
          ]
        },
        "IdentifyVariablesScope_1": {
          "type": "matching_question",
          "points": 3.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>Identify each variable as local to the function <code>add_emphasis</code> or global:</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>alpha <span style=\"color: #666666;\">=</span> <span style=\"color: #BA2121;\">\"Here is a \"</span>\n<span style=\"color: #008000; font-weight: bold;\">def</span> <span style=\"color: #0000FF;\">add_emphasis</span>(beta):\n    gamma <span style=\"color: #666666;\">=</span> <span style=\"color: #BA2121;\">\"*\"</span><span style=\"color: #666666;\">+</span>beta<span style=\"color: #666666;\">+</span><span style=\"color: #BA2121;\">\"*\"</span>\n    <span style=\"color: #008000; font-weight: bold;\">return</span> gamma\ndelta <span style=\"color: #666666;\">=</span> <span style=\"color: #BA2121;\">\"story.\"</span>\nepsilon <span style=\"color: #666666;\">=</span> add_emphasis(alpha<span style=\"color: #666666;\">+</span>delta)\n</pre></div>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "global",
            "local"
          ],
          "statements": [
            "alpha",
            "beta",
            "gamma",
            "delta",
            "epsilon"
          ]
        },
        "LookupCalculation_1": {
          "type": "fill_in_multiple_blanks_question",
          "points": 3.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>Given the following dictionary,</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\">\n<pre style=\"line-height: 125%;\"><span></span>scores <span style=\"color: #666666;\">=</span> { <span style=\"color: #666666;\">2</span>: <span style=\"color: #666666;\">4</span>, <span style=\"color: #666666;\">4</span>: <span style=\"color: #666666;\">2</span> }\n</pre>\n</div>\n<p>What is the value of the following expressions?</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\">\n<pre style=\"line-height: 125%;\"><span></span><span style=\"color: #666666;\">&gt;&gt;&gt;</span> scores[<span style=\"color: #666666;\">2</span>]\n</pre>\n</div>\n<p>[regular]</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\">\n<pre style=\"line-height: 125%;\"><span></span><span style=\"color: #666666;\">&gt;&gt;&gt;</span> scores[<span style=\"color: #666666;\">2+2</span>]\n</pre>\n</div>\n<p>[inner]</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\">\n<pre style=\"line-height: 125%;\"><span></span><span style=\"color: #666666;\">&gt;&gt;&gt;</span> scores[<span style=\"color: #666666;\">2</span>]<span style=\"color: #666666;\">+2</span>\n</pre>\n</div>\n<p>[outer]</p>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "LookupCalculation_2": {
          "type": "fill_in_multiple_blanks_question",
          "points": 3.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>Given the following dictionary,</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\">\n<pre style=\"line-height: 125%;\"><span></span>scores <span style=\"color: #666666;\">=</span> { <span style=\"color: #666666;\">3</span>: <span style=\"color: #666666;\">1</span>, <span style=\"color: #666666;\">1</span>: <span style=\"color: #666666;\">3</span>}\n</pre>\n</div>\n<p>What is the value of the following expressions?</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\">\n<pre style=\"line-height: 125%;\"><span></span><span style=\"color: #666666;\">&gt;&gt;&gt;</span> scores[<span style=\"color: #666666;\">1</span>]\n</pre>\n</div>\n<p>[regular]</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\">\n<pre style=\"line-height: 125%;\"><span></span><span style=\"color: #666666;\">&gt;&gt;&gt;</span> scores[<span style=\"color: #666666;\">1+2</span>]\n</pre>\n</div>\n<p>[inner]</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\">\n<pre style=\"line-height: 125%;\"><span></span><span style=\"color: #666666;\">&gt;&gt;&gt;</span> scores[<span style=\"color: #666666;\">3</span>]<span style=\"color: #666666;\">+1</span>\n</pre>\n</div>\n<p>[outer]</p>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "LoopTracing_1": {
          "type": "fill_in_multiple_blanks_question",
          "points": 3.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>Assume the following code is executed:</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #008000; font-weight: bold;\">def</span> <span style=\"color: #0000FF;\">check</span>(a_number):\n    <span style=\"color: #008000; font-weight: bold;\">if</span> a_number <span style=\"color: #666666;\">!=</span> <span style=\"color: #BA2121;\">'_'</span>:\n        <span style=\"color: #008000; font-weight: bold;\">return</span> <span style=\"color: #008000;\">int</span>(a_number)\n    <span style=\"color: #008000; font-weight: bold;\">else</span>:\n        <span style=\"color: #008000; font-weight: bold;\">return</span> <span style=\"color: #666666;\">0</span>\n\nsize <span style=\"color: #666666;\">=</span> <span style=\"color: #008000;\">input</span>()\ntotal <span style=\"color: #666666;\">=</span> <span style=\"color: #666666;\">0</span>\n<span style=\"color: #008000; font-weight: bold;\">for</span> character <span style=\"color: #AA22FF; font-weight: bold;\">in</span> size:\n    total <span style=\"color: #666666;\">=</span> total <span style=\"color: #666666;\">+</span> check(character)\n\n<span style=\"color: #008000; font-weight: bold;\">print</span>(total)\n</pre></div>\n\n\n<p>And that the user types in <code>12_3</code>.</p>\n<ul>\n<li>How many times will the loop iterate? [first]</li>\n<li>How many times will the function <code>check</code> be called? [second]</li>\n<li>What will be printed at the end? [third]</li>\n</ul>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "LoopTracing_2": {
          "type": "fill_in_multiple_blanks_question",
          "points": 3.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>Assume the following code is executed:</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #008000; font-weight: bold;\">def</span> <span style=\"color: #0000FF;\">check</span>(a_number):\n    <span style=\"color: #008000; font-weight: bold;\">if</span> a_number <span style=\"color: #666666;\">!=</span> <span style=\"color: #BA2121;\">'?'</span>:\n        <span style=\"color: #008000; font-weight: bold;\">return</span> <span style=\"color: #008000;\">int</span>(a_number)\n    <span style=\"color: #008000; font-weight: bold;\">else</span>:\n        <span style=\"color: #008000; font-weight: bold;\">return</span> <span style=\"color: #666666;\">0</span>\n\nsize <span style=\"color: #666666;\">=</span> <span style=\"color: #008000;\">input</span>()\ntotal <span style=\"color: #666666;\">=</span> <span style=\"color: #666666;\">0</span>\n<span style=\"color: #008000; font-weight: bold;\">for</span> character <span style=\"color: #AA22FF; font-weight: bold;\">in</span> size:\n    total <span style=\"color: #666666;\">=</span> total <span style=\"color: #666666;\">+</span> check(character)\n\n<span style=\"color: #008000; font-weight: bold;\">print</span>(total)\n</pre></div>\n\n\n<p>And that the user types in <code>2?4?</code>.</p>\n<ul>\n<li>How many times will the loop iterate? [first]</li>\n<li>How many times will the function <code>check</code> be called? [second]</li>\n<li>What will be printed at the end? [third]</li>\n</ul>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "ModifyDictionaryAlias_1": {
          "type": "multiple_answers_question",
          "points": 3.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>Given the following code:</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\">\n<pre style=\"line-height: 125%;\"><span></span><span style=\"color: #008000; font-weight: bold;\">def</span> <span style=\"color: #0000ff;\">decrease_cost</span>(a_book):\n    a_book[<span style=\"color: #ba2121;\">'price'</span>] <span style=\"color: #666666;\">=</span> <span style=\"color: #666666;\">0</span>\nthe_book <span style=\"color: #666666;\">=</span> {<span style=\"color: #ba2121;\">'title'</span>: <span style=\"color: #ba2121;\">'Monte Cristo'</span>, <span style=\"color: #ba2121;\">'price'</span>: <span style=\"color: #666666;\">5.99</span>}\nfavorite <span style=\"color: #666666;\">=</span> the_book\nbook_copy <span style=\"color: #666666;\">=</span> {<span style=\"color: #ba2121;\">'title'</span>: <span style=\"color: #ba2121;\">'Monte Cristo'</span>, <span style=\"color: #ba2121;\">'price'</span>: <span style=\"color: #666666;\">5.99</span>}\ndecrease_cost(the_book)\n</pre>\n</div>\n<p>Mark any of the following expressions that produce the value <code>0</code></p>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>the_book[<span style=\"color: #BA2121;\">'price'</span>]\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>book_copy[<span style=\"color: #BA2121;\">'price'</span>]\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\">\n<pre style=\"line-height: 125%;\"><span></span>favorite[<span style=\"color: #ba2121;\">'price'</span>]\n</pre>\n</div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
          ]
        },
        "ModifyDictionaryAlias_2": {
          "type": "multiple_answers_question",
          "points": 3.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>Given the following code:</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #008000; font-weight: bold;\">def</span> <span style=\"color: #0000FF;\">increase_cost</span>(a_movie):\n    a_movie[<span style=\"color: #BA2121;\">'cost'</span>] <span style=\"color: #666666;\">=</span> <span style=\"color: #666666;\">10</span>\nthe_movie <span style=\"color: #666666;\">=</span> {<span style=\"color: #BA2121;\">'title'</span>: <span style=\"color: #BA2121;\">'Avengers'</span>, <span style=\"color: #BA2121;\">'cost'</span>: <span style=\"color: #666666;\">4</span>}\nwatching <span style=\"color: #666666;\">=</span> the_movie\nmovie_copy <span style=\"color: #666666;\">=</span> {<span style=\"color: #BA2121;\">'title'</span>: <span style=\"color: #BA2121;\">'Avengers'</span>, <span style=\"color: #BA2121;\">'cost'</span>: <span style=\"color: #666666;\">4</span>}\nincrease_cost(the_movie)\n</pre></div>\n\n\n<p>Mark any of the following expressions that produce the value <code>10</code></p>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>the_movie[<span style=\"color: #BA2121;\">'cost'</span>]\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>movie_copy[<span style=\"color: #BA2121;\">'cost'</span>]\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>watching[<span style=\"color: #BA2121;\">'cost'</span>]\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
          ]
        },
        "TraceFunctionDefinition_1": {
          "type": "fill_in_multiple_blanks_question",
          "points": 3.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>Read the following code, and then fill in the blanks below.</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #666666;\">1|</span> <span style=\"color: #008000; font-weight: bold;\">def</span> <span style=\"color: #0000FF;\">alpha</span>(banana):\n<span style=\"color: #666666;\">2|</span>     <span style=\"color: #008000; font-weight: bold;\">return</span> (banana<span style=\"color: #666666;\">+8</span>)<span style=\"color: #666666;\">/3</span>\n<span style=\"color: #666666;\">3|</span> carol <span style=\"color: #666666;\">=</span> alpha(<span style=\"color: #666666;\">9</span>)\n<span style=\"color: #666666;\">4|</span> <span style=\"color: #008000; font-weight: bold;\">print</span>(carol)\n</pre></div>\n\n\n<ul>\n<li>What line is executed first? [first]</li>\n<li>What line is executed second? [second]</li>\n<li>What line is executed third? [third]</li>\n<li>What line is executed fourth? [fourth]</li>\n</ul>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "TraceFunctionDefinition_2": {
          "type": "fill_in_multiple_blanks_question",
          "points": 3.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>Read the following code, and then fill in the blanks below.</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #666666;\">1|</span> <span style=\"color: #008000; font-weight: bold;\">def</span> <span style=\"color: #0000FF;\">beta</span>(canon):\n<span style=\"color: #666666;\">2|</span>     <span style=\"color: #008000; font-weight: bold;\">return</span> (canon<span style=\"color: #666666;\">+8</span>)<span style=\"color: #666666;\">/3</span>\n<span style=\"color: #666666;\">3|</span> denver <span style=\"color: #666666;\">=</span> beta(<span style=\"color: #666666;\">9</span>)\n<span style=\"color: #666666;\">4|</span> <span style=\"color: #008000; font-weight: bold;\">print</span>(denver)\n</pre></div>\n\n\n<ul>\n<li>What line is executed first? [first]</li>\n<li>What line is executed second? [second]</li>\n<li>What line is executed third? [third]</li>\n<li>What line is executed fourth? [fourth]</li>\n</ul>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "TraceIfStatement_1": {
          "type": "fill_in_multiple_blanks_question",
          "points": 3.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>Read the following code, and then fill in the blanks below.</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\">\n<pre style=\"line-height: 125%;\"><span></span>name <span style=\"color: #666666;\">=</span> <span style=\"color: #ba2121;\">\"Ada\"</span>\n<span style=\"color: #008000; font-weight: bold;\">if</span> name<span style=\"color: #666666;\">.</span>lower() <span style=\"color: #666666;\">==</span> <span style=\"color: #ba2121;\">\"ada\"</span>:\n    me <span style=\"color: #666666;\">=</span> name\n<span style=\"color: #008000; font-weight: bold;\">else</span>:\n    me <span style=\"color: #666666;\">=</span> <span style=\"color: #ba2121;\">\"Missing\"</span>\nhas_a <span style=\"color: #666666;\">=</span> <span style=\"color: #ba2121;\">\"A\"</span> <span style=\"color: #aa22ff; font-weight: bold;\">in</span> me\n<span style=\"color: #008000; font-weight: bold;\">print</span>(name)\n<span style=\"color: #008000; font-weight: bold;\">print</span>(me)\n<span style=\"color: #008000; font-weight: bold;\">print</span>(has_a)\n</pre>\n</div>\n<ul>\n<li>What will be printed first? [first]</li>\n<li>What will be printed second? [second]</li>\n<li>What will be printed third? [third]</li>\n</ul>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "TraceIfStatement_2": {
          "type": "fill_in_multiple_blanks_question",
          "points": 3.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>Read the following code, and then fill in the blanks below.</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\">\n<pre style=\"line-height: 125%;\"><span></span>name <span style=\"color: #666666;\">=</span> <span style=\"color: #ba2121;\">\"Alpha\"</span>\n<span style=\"color: #008000; font-weight: bold;\">if</span> name<span style=\"color: #666666;\">.</span>lower() <span style=\"color: #666666;\">==</span> <span style=\"color: #ba2121;\">\"alpha\"</span>:\n    me <span style=\"color: #666666;\">=</span> name\n<span style=\"color: #008000; font-weight: bold;\">else</span>:\n    me <span style=\"color: #666666;\">=</span> <span style=\"color: #ba2121;\">\"Missing\"</span>\nhas_a <span style=\"color: #666666;\">=</span> <span style=\"color: #ba2121;\">\"A\"</span> <span style=\"color: #aa22ff; font-weight: bold;\">in</span> me\n<span style=\"color: #008000; font-weight: bold;\">print</span>(name)\n<span style=\"color: #008000; font-weight: bold;\">print</span>(me)\n<span style=\"color: #008000; font-weight: bold;\">print</span>(has_a)\n</pre>\n</div>\n<ul>\n<li>What will be printed first? [first]</li>\n<li>What will be printed second? [second]</li>\n<li>What will be printed third? [third]</li>\n</ul>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "WriteFunctionCall_1": {
          "type": "short_answer_question",
          "points": 3.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">How would you call a function named <code>print_dog</code> passing in the value <code>1</code> as an argument?<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "WriteFunctionCall_2": {
          "type": "short_answer_question",
          "points": 3.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">How would you call a function named <code>increase</code> passing in the value <code>1</code> as an argument?<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        }
      }
    },
    "checks": {
      "questions": {
        "DetermineAppropriateDataFlow": {
          "correct": [
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>output_answer(convert_to_number(response))\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>response <span style=\"color: #666666;\">=</span> convert_to_number(response)\noutput_answer(response)\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
          ]
        },
        "DetermineNestedDataLength_1": {
          "correct": {
            "elements_in_list": [
              "4",
              "4.0"
            ],
            "keys_in_first_dictionary": [
              "2",
              "2.0"
            ]
          }
        },
        "DetermineNestedDataLength_2": {
          "correct": {
            "elements_in_list": [
              "4",
              "4.0"
            ],
            "keys_in_first_dictionary": [
              "2",
              "2.0"
            ]
          }
        },
        "DictionaryVsListIndexing": {
          "correct": [
            "0",
            "KeyError",
            "2",
            "2",
            "1",
            "IndexError"
          ],
          "wrong": [
            "",
            "",
            "",
            "",
            "",
            ""
          ]
        },
        "EvaluateConditionals_1": {
          "correct": [
            "True",
            "False",
            "True",
            "False",
            "True",
            "True",
            "False",
            "True",
            "Causes an error",
            "False"
          ],
          "wrong": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ]
        },
        "EvaluateConditionals_2": {
          "correct": [
            "True",
            "False",
            "True",
            "False",
            "True",
            "True",
            "False",
            "False",
            "Causes an error",
            "False"
          ],
          "wrong": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ]
        },
        "EvaluateFunctionMisconceptions_1": {
          "correct": false
        },
        "EvaluateFunctionMisconceptions_2": {
          "correct": true
        },
        "EvaluateListDictionaryMisconceptions_1": {
          "correct": false
        },
        "EvaluateListDictionaryMisconceptions_2": {
          "correct": false
        },
        "EvaluatePrintMisconceptions_1": {
          "correct": false
        },
        "EvaluatePrintMisconceptions_2": {
          "correct": true
        },
        "IdentifyIterationVariableType_1": {
          "correct": [
            "Dictionary",
            "List",
            "String",
            "Causes an error",
            "Causes an error",
            "Dictionary",
            "Causes an error"
          ],
          "wrong": [
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ]
        },
        "IdentifyIterationVariableType_2": {
          "correct": [
            "Dictionary",
            "List",
            "String",
            "Causes an error",
            "Causes an error",
            "Dictionary",
            "Causes an error"
          ],
          "wrong": [
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ]
        },
        "IdentifyLiteralType_1": {
          "correct": [
            "Integer",
            "Boolean",
            "Float",
            "String",
            "String",
            "None",
            "Integer",
            "String",
            "String",
            "Not a literal value",
            "Dictionary",
            "List",
            "List",
            "Dictionary"
          ],
          "wrong": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ]
        },
        "IdentifyLiteralType_2": {
          "correct": [
            "Integer",
            "Boolean",
            "Float",
            "String",
            "String",
            "None",
            "Integer",
            "String",
            "String",
            "Not a literal value",
            "Dictionary",
            "List",
            "List",
            "Dictionary"
          ],
          "wrong": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ]
        },
        "IdentifyPrintAsOneWay": {
          "correct": [
            "None of the other possibilities"
          ]
        },
        "IdentifyVariablesScope_1": {
          "correct": [
            "global",
            "local",
            "local",
            "global",
            "global"
          ],
          "wrong": [
            "",
            "",
            "",
            "",
            ""
          ]
        },
        "LookupCalculation_1": {
          "correct": {
            "regular": [
              "4"
            ],
            "inner": [
              "2"
            ],
            "outer": [
              "6"
            ]
          }
        },
        "LookupCalculation_2": {
          "correct": {
            "regular": [
              "3"
            ],
            "inner": [
              "1"
            ],
            "outer": [
              "2"
            ]
          }
        },
        "LoopTracing_1": {
          "correct": {
            "first": [
              "4"
            ],
            "second": [
              "4"
            ],
            "third": [
              "6"
            ]
          }
        },
        "LoopTracing_2": {
          "correct": {
            "first": [
              "4"
            ],
            "second": [
              "4"
            ],
            "third": [
              "6"
            ]
          }
        },
        "ModifyDictionaryAlias_1": {
          "correct": [
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>the_book[<span style=\"color: #BA2121;\">'price'</span>]\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\">\n<pre style=\"line-height: 125%;\"><span></span>favorite[<span style=\"color: #ba2121;\">'price'</span>]\n</pre>\n</div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
          ]
        },
        "ModifyDictionaryAlias_2": {
          "correct": [
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>the_movie[<span style=\"color: #BA2121;\">'cost'</span>]\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>watching[<span style=\"color: #BA2121;\">'cost'</span>]\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
          ]
        },
        "TraceFunctionDefinition_1": {
          "correct": {
            "first": [
              "1"
            ],
            "second": [
              "3"
            ],
            "third": [
              "2"
            ],
            "fourth": [
              "3",
              "4"
            ]
          }
        },
        "TraceFunctionDefinition_2": {
          "correct": {
            "first": [
              "1"
            ],
            "second": [
              "3"
            ],
            "third": [
              "2"
            ],
            "fourth": [
              "3",
              "4"
            ]
          }
        },
        "TraceIfStatement_1": {
          "correct": {
            "first": [
              "Ada",
              "\"Ada\"",
              "'Ada'",
              "\"\"\"Ada\"\"\"",
              "'''Ada'''"
            ],
            "second": [
              "Ada",
              "\"Ada\"",
              "'Ada'",
              "\"\"\"Ada\"\"\"",
              "'''Ada'''"
            ],
            "third": [
              "True"
            ]
          }
        },
        "TraceIfStatement_2": {
          "correct": {
            "first": [
              "Alpha",
              "\"Alpha\"",
              "'Alpha'",
              "\"\"\"Alpha\"\"\"",
              "'''Alpha'''"
            ],
            "second": [
              "Alpha",
              "\"Alpha\"",
              "'Alpha'",
              "\"\"\"Alpha\"\"\"",
              "'''Alpha'''"
            ],
            "third": [
              "True"
            ]
          }
        },
        "WriteFunctionCall_1": {
          "correct_exact": [
            "print_dog(1)",
            "print_dog( 1)",
            "print_dog( 1 )",
            "print_dog(1 )"
          ]
        },
        "WriteFunctionCall_2": {
          "correct_exact": [
            "increase(1)",
            "increase( 1)",
            "increase( 1 )",
            "increase(1 )"
          ]
        }
      }
    }
  },
  {
    "body": {
      "questions": {
        "Survey - Changed": {
          "type": "fill_in_multiple_blanks_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>Very briefly but clearly, what 1-3 things would you change about this course?</p>\n<p>[Response1]</p>\n<p>[Response2]</p>\n<p>[Response3]</p>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "Survey - Contexts": {
          "type": "multiple_answers_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Looking back on the projects and assignments, which of them did you feel were engaging and made you want to work on them?</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "Turtle Alphabet (drawing letters with turtles)",
            "Functional Magic (goblin banking program)",
            "Crypto Corgi Company (simple cryptography on strings)",
            "Monster Mash (Halloween-themed questions about nested data)",
            "Final game with Arcade (game development)",
            "Using BlockPy to complete programming problems",
            "Solving quiz questions in Canvas"
          ]
        },
        "Survey - Course Overall So Far": {
          "type": "multiple_answers_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Overall, this course has...<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "... been fun.",
            "... been useful to my long-term career.",
            "... given me opportunities to express myself creatively.",
            "... had an appropriate level of difficulty.",
            "... given me an opportunity to earn a satisfactory grade.",
            "... helped me learn about programming.",
            "... helped me learn about Computer Science.",
            "... helped me learn about problem solving."
          ]
        },
        "Survey - Course Resources So Far": {
          "type": "multiple_answers_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Which of the following were very helpful for your learning?<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "Watching the video lessons on Canvas.",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Reading the video lessons' PowerPoint slides.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Reading the video lessons' transcripts on Canvas.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "Watching/Rewatching the Course Capture videos.",
            "Experimenting with code in Thonny.",
            "Reading the optional online textbook.",
            "Working with my partner on assignments.",
            "Attending class.",
            "Attending course staff office hours.",
            "Asking for help from the TAs in lab.",
            "Getting feedback from my TAs.",
            "Visiting the Academic Enrichment Center for tutoring.",
            "Googling for help.",
            "Reading the feedback and error messages in Thonny and BlockPy.",
            "Asking questions on the course piazza."
          ]
        },
        "Survey - Domain Identification So Far": {
          "type": "multiple_answers_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>After this course, ...</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "... I am more interested in careers in Computer Science.",
            "... I am interested in taking more classes in Computer Science.",
            "... I plan to take CISC181 and/or CISC210.",
            "... I would like to do some programming side-projects.",
            "... I want to work more in Python",
            "... I liked Python.",
            "... I felt I did well in this course.",
            "... I felt that I struggled in this course.",
            "... I felt that I usually knew how well I was doing in this course.",
            "... I felt that I had enough help resources in this course."
          ]
        },
        "Survey - Help Seeking": {
          "type": "multiple_answers_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>When you were struggling on a problem, what were your reasons for not going to office hours?</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "I did not know where the office hours would be located",
            "I did not know when the office hours would be",
            "I never needed office hours.",
            "I did not have the time available",
            "The location was too inconvenient to get to.",
            "I did not think that the TAs could help me",
            "I did not think that Dr. Bart could help me",
            "I did not know that I could go to any TA, I thought I had to only go to my lab sections' TAs",
            "There were never office hours when I needed help"
          ]
        },
        "Survey - Subgroup Identification": {
          "type": "multiple_answers_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Please mark all of the following that you feel are true for yourself.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "I identify as a woman.",
            "I intend to take more Computer Science classes.",
            "I am not a native English speaker."
          ]
        },
        "Survey - TA Suggestions": {
          "type": "essay_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Teaching Assistants are an important part of this course. They are responsible for hosting office hours, running lab sessions, grading assignments, and helping design the curriculum.</p>\n<p>Please use the space below to recommend the names of existing TAs, classmates, or yourself for a TA position in the future. The more you can say why you recommend someone, the better. Feel free to recommend more than one person!</p>\n<p>We are not necessarily looking for the best students academically, but those who can balance their knowledge with empathy and communication skills!</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "Survey - Unchanged": {
          "type": "fill_in_multiple_blanks_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>Very briefly but clearly, what 1-3 things would you want to keep the same about this course?</p>\n<p>[Response1]</p>\n<p>[Response2]</p>\n<p>[Response3]</p>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        }
      }
    },
    "checks": {
      "questions": {
        "Survey - Changed": {
          "correct": {
            "Response1": [
              "Please respond"
            ],
            "Response2": [
              "Please respond"
            ],
            "Response3": [
              "Please respond"
            ]
          }
        },
        "Survey - Contexts": {
          "correct": [
            "Turtle Alphabet (drawing letters with turtles)",
            "Functional Magic (goblin banking program)",
            "Crypto Corgi Company (simple cryptography on strings)",
            "Monster Mash (Halloween-themed questions about nested data)",
            "Final game with Arcade (game development)",
            "Using BlockPy to complete programming problems"
          ]
        },
        "Survey - Course Overall So Far": {
          "correct": [
            "... been fun.",
            "... been useful to my long-term career.",
            "... given me opportunities to express myself creatively.",
            "... had an appropriate level of difficulty.",
            "... given me an opportunity to earn a satisfactory grade.",
            "... helped me learn about programming.",
            "... helped me learn about Computer Science.",
            "... helped me learn about problem solving."
          ]
        },
        "Survey - Course Resources So Far": {
          "correct": [
            "Watching the video lessons on Canvas.",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Reading the video lessons' PowerPoint slides.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Reading the video lessons' transcripts on Canvas.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "Watching/Rewatching the Course Capture videos.",
            "Experimenting with code in Thonny.",
            "Reading the optional online textbook.",
            "Working with my partner on assignments.",
            "Attending class.",
            "Attending course staff office hours.",
            "Asking for help from the TAs in lab.",
            "Getting feedback from my TAs.",
            "Visiting the Academic Enrichment Center for tutoring.",
            "Googling for help.",
            "Reading the feedback and error messages in Thonny and BlockPy.",
            "Asking questions on the course piazza."
          ]
        },
        "Survey - Domain Identification So Far": {
          "correct": [
            "... I am more interested in careers in Computer Science.",
            "... I am interested in taking more classes in Computer Science.",
            "... I plan to take CISC181 and/or CISC210.",
            "... I would like to do some programming side-projects."
          ]
        },
        "Survey - Help Seeking": {
          "correct": [
            "I did not know where the office hours would be located"
          ]
        },
        "Survey - Subgroup Identification": {
          "correct": [
            "I identify as a woman.",
            "I intend to take more Computer Science classes.",
            "I am not a native English speaker."
          ]
        },
        "Survey - TA Suggestions": {},
        "Survey - Unchanged": {
          "correct": {
            "Response1": [
              "Please respond"
            ],
            "Response2": [
              "Please respond"
            ],
            "Response3": [
              "Please respond"
            ]
          }
        }
      }
    }
  },
  {
    "body": {
      "questions": {
        "ComponentsOfFunctionCall": {
          "type": "multiple_answers_question",
          "points": 4.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Which of the following components are <em>always</em> required when calling a function?</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "Function name",
            "Parentheses",
            "Parameters",
            "Arguments",
            "Colon"
          ]
        },
        "DetermineAppropriateDataFlow": {
          "type": "multiple_answers_question",
          "points": 2.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Given the program below,</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\">\n<pre style=\"line-height: 125%;\"><span></span>response <span style=\"color: #666666;\">=</span> <span style=\"color: #008000;\">input</span>(<span style=\"color: #ba2121;\">\"Do you have a pet?\"</span>)\n<span style=\"color: #008000; font-weight: bold;\">def</span> <span style=\"color: #0000ff;\">test_pet</span>(response):\n    <span style=\"color: #008000; font-weight: bold;\">return</span> response<span style=\"color: #666666;\">.</span>lower() <span style=\"color: #666666;\">==</span> <span style=\"color: #ba2121;\">\"yes\"</span>\n<span style=\"color: #008000; font-weight: bold;\">def</span> <span style=\"color: #0000ff;\">print_message</span>(response):\n    <span style=\"color: #008000; font-weight: bold;\">print</span>(<span style=\"color: #ba2121;\">\"Do they have a pet?\"</span>, response)\n</pre>\n</div>\n<p>The user will type in:</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\">\n<pre style=\"line-height: 125%;\"><span></span>Yes\n</pre>\n</div>\n<p>And expect the output:</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\">\n<pre style=\"line-height: 125%;\"><span></span>Do they have a pet? True\n</pre>\n</div>\n<p>Which of the following lines of code will have the data flow correctly through both functions in order to print the message with the result?</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>test_pet(response)\nprint_message(response)\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>print_message(test_pet(response))\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>test_pet()\nprint_message()\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #008000; font-weight: bold;\">print</span>(test_pet(response))\n<span style=\"color: #008000; font-weight: bold;\">print</span>(print_message(response))\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>response <span style=\"color: #666666;\">=</span> test_pet(response)\nprint_message(response)\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "None are necessary, because the variables share the same name."
          ]
        },
        "EvaluateCommonMisconceptions_1": {
          "type": "multiple_answers_question",
          "points": 5.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Mark all of the following statements that are correct.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>my_string_value <span style=\"color: #666666;\">=</span> <span style=\"color: #BA2121;\">\"my_string_variable\"</span>\n</pre></div>\n\n\n<p><code>my_string_variable</code> is a string literal value.</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "A variable in Python is useful because it automatically is solved for an unknown value on the right hand side of an assignment statement.",
            "Variable names are important because computers understand the meaning of names and change their value accordingly.",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Every function created with the \"def\" keyword must have AT LEAST ONE parameter.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Every function defined with the \"def\" keyword MUST have a name.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
          ]
        },
        "EvaluateCommonMisconceptions_2": {
          "type": "multiple_answers_question",
          "points": 5.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Mark all of the following statements that are correct.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Every function created with the \"def\" keyword must have AT LEAST ONE parameter.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Every function defined with the \"def\" keyword MUST have a name.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "Normally, program statements are executed from top to bottom, unless function definitions and calls interrupt the flow.",
            "print is used to put data on the console, and return is used to take data from the console.",
            "A function can either print or return, but not both."
          ]
        },
        "EvaluateCommonMisconceptions_3": {
          "type": "multiple_answers_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Mark all of the following statements that are correct.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "The print function is necessary to call a function.",
            "A variable defined INSIDE of a function cannot be used OUTSIDE of the function.",
            "A function can either print or return, but not both.",
            "Variable names are important because computers understand the meaning of names and change their value accordingly.",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>my_string_value <span style=\"color: #666666;\">=</span> <span style=\"color: #BA2121;\">\"my_string_variable\"</span>\n</pre></div>\n\n\n<p><code>my_string_variable</code> is a string literal value.</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
          ]
        },
        "EvaluateCommonMisconceptions_4": {
          "type": "multiple_answers_question",
          "points": 5.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Mark all of the following statements that are correct.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "print is used to put data on the console, and return is used to take data from the console.",
            "A function can either print or return, but not both.",
            "The print function is necessary to call a function.",
            "Normally, program statements are executed from top to bottom, unless function definitions and calls interrupt the flow.",
            "A variable defined INSIDE of a function cannot be used OUTSIDE of the function."
          ]
        },
        "EvaluateConditional_1": {
          "type": "matching_question",
          "points": 5.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>Assume the following code is run:</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>apple <span style=\"color: #666666;\">=</span> <span style=\"color: #666666;\">5</span>\n</pre></div>\n\n\n<p>Evaluate whether each expression is True, False, or causes an error.</p>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "True",
            "False",
            "Causes an error"
          ],
          "statements": [
            "apple < 10",
            "False",
            "apple == \"10\"",
            "apple == 5.5",
            "apple != 5",
            "apple < \"8\"",
            "not False",
            "1 < apple and apple < 7",
            "8 < apple or 3 == 3",
            "(apple == 3) == False"
          ]
        },
        "EvaluateConditional_2": {
          "type": "matching_question",
          "points": 5.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>Assume the following code is run:</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>orange <span style=\"color: #666666;\">=</span> <span style=\"color: #666666;\">6</span>\n</pre></div>\n\n\n<p>Evaluate whether each expression is True, False, or causes an error.</p>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "True",
            "False",
            "Causes an error"
          ],
          "statements": [
            "orange < 10",
            "False",
            "orange == \"10\"",
            "orange == 6.5",
            "orange != 6",
            "orange < \"8\"",
            "not False",
            "1 < orange and orange < 7",
            "8 < orange or 3 == 3",
            "(orange == 3) == False"
          ]
        },
        "EvaluateFunctionCall_1": {
          "type": "short_answer_question",
          "points": 2.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>The function <code>add2</code> below returns the number 2 added to the argument. What\nvalue will the variable \"height\" hold after the line is executed?</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>height <span style=\"color: #666666;\">=</span> add2(<span style=\"color: #666666;\">1</span>) <span style=\"color: #666666;\">*</span> add2(<span style=\"color: #666666;\">2</span>)\n</pre></div>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "EvaluateFunctionCall_2": {
          "type": "short_answer_question",
          "points": 2.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>The function <code>add3</code> below returns the number 3 added to the argument. What\nvalue will the variable \"width\" hold after the line is executed?</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>width <span style=\"color: #666666;\">=</span> add3(<span style=\"color: #666666;\">1</span>) <span style=\"color: #666666;\">*</span> add3(<span style=\"color: #666666;\">2</span>)\n</pre></div>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "EvaluateOperations_1": {
          "type": "matching_question",
          "points": 5.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Identify the type of each expression.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "Integer",
            "Float",
            "Causes an error",
            "String",
            "Boolean",
            "None"
          ],
          "statements": [
            "1 + 25 * 5",
            "60 / 30 - 5",
            "\"2\"+2",
            "\"2\"+\"2\"",
            "2 + 2"
          ]
        },
        "EvaluateOperations_2": {
          "type": "matching_question",
          "points": 5.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Identify the type of each expression.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "Integer",
            "Float",
            "Causes an error",
            "String",
            "Boolean",
            "None"
          ],
          "statements": [
            "5 + 50 * 2",
            "40 / 20 - 3",
            "\"6\"+6",
            "\"6\"+\"6\"",
            "6 + 6"
          ]
        },
        "EvaluateOperations_3": {
          "type": "matching_question",
          "points": 5.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Identify the type of each expression.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "Integer",
            "Float",
            "Causes an error",
            "String",
            "Boolean",
            "None"
          ],
          "statements": [
            "5 + 3 * 70",
            "100 / 50 - 50",
            "\"4\"+4",
            "\"4\"+\"4\"",
            "4 + 4"
          ]
        },
        "EvaluateStringConditionals_1": {
          "type": "multiple_answers_question",
          "points": 3.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>Assume that the following code is executed:</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>name <span style=\"color: #666666;\">=</span> <span style=\"color: #BA2121;\">\"Pumpkin\"</span>\n</pre></div>\n\n\n<p>Mark each of the following expressions if they evaluate to True. </p>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #BA2121;\">\"kin\"</span> <span style=\"color: #AA22FF; font-weight: bold;\">in</span> name\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #BA2121;\">\"N\"</span> <span style=\"color: #AA22FF; font-weight: bold;\">in</span> name\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #BA2121;\">\"am\"</span> <span style=\"color: #AA22FF; font-weight: bold;\">in</span> name\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #BA2121;\">\" \"</span> <span style=\"color: #AA22FF; font-weight: bold;\">in</span> name\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #BA2121;\">\"Alabama\"</span> <span style=\"color: #666666;\">&lt;</span> name\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>name <span style=\"color: #666666;\">==</span> <span style=\"color: #BA2121;\">'Pumpkin'</span>\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
          ]
        },
        "EvaluateStringConditionals_2": {
          "type": "multiple_answers_question",
          "points": 7.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>Assume that the following code is executed:</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>name <span style=\"color: #666666;\">=</span> <span style=\"color: #BA2121;\">\"Marshall\"</span>\n</pre></div>\n\n\n<p>Mark each of the following expressions if they evaluate to True. </p>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #BA2121;\">\"all\"</span> <span style=\"color: #AA22FF; font-weight: bold;\">in</span> name\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #BA2121;\">\"H\"</span> <span style=\"color: #AA22FF; font-weight: bold;\">in</span> name\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #BA2121;\">\"am\"</span> <span style=\"color: #AA22FF; font-weight: bold;\">in</span> name\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #BA2121;\">\" \"</span> <span style=\"color: #AA22FF; font-weight: bold;\">in</span> name\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>name <span style=\"color: #666666;\">&lt;</span> <span style=\"color: #BA2121;\">\"Zebra\"</span>\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>name <span style=\"color: #666666;\">==</span> <span style=\"color: #BA2121;\">'Marshall'</span>\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
          ]
        },
        "HandleParameterScope_1": {
          "type": "short_answer_question",
          "points": 2.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>What is printed after the code below is executed?</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\">\n<pre style=\"line-height: 125%;\"><span></span><span style=\"color: #008000; font-weight: bold;\">def</span> <span style=\"color: #0000ff;\">change_value</span>(a_variable):\n    a_variable <span style=\"color: #666666;\">=</span> <span style=\"color: #666666;\">0</span>\n    <span style=\"color: #008000; font-weight: bold;\">return</span> a_variable\n\na <span style=\"color: #666666;\">=</span> <span style=\"color: #666666;\">5</span>\nchange_value(a)\n<span style=\"color: #008000; font-weight: bold;\">print</span>(a)\n</pre>\n</div>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "HandleParameterScope_2": {
          "type": "short_answer_question",
          "points": 2.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>What is the second value printed after the code below is executed?</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\">\n<pre style=\"line-height: 125%;\"><span></span><span style=\"color: #008000; font-weight: bold;\">def</span> <span style=\"color: #0000ff;\">triple</span>(value):\n    value <span style=\"color: #666666;\">=</span> value <span style=\"color: #666666;\">*</span> <span style=\"color: #666666;\">3</span>\n    <span style=\"color: #008000; font-weight: bold;\">print</span>(value)\n\nvalue <span style=\"color: #666666;\">=</span> <span style=\"color: #666666;\">1</span>\n<span style=\"color: #008000; font-weight: bold;\">print</span>(triple(value))\n</pre>\n</div>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "IdentifyLiteralType_1": {
          "type": "matching_question",
          "points": 5.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Identify the type of each literal value.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "Integer",
            "Boolean",
            "Float",
            "String",
            "None"
          ],
          "statements": [
            "4",
            "False",
            "4.0",
            "\"Four\"",
            "\"4\"",
            "\"\"",
            "None",
            "0",
            "\"True\"",
            "\"Boolean\""
          ]
        },
        "IdentifyLiteralType_2": {
          "type": "matching_question",
          "points": 5.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Identify the type of each literal value.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "Integer",
            "Boolean",
            "Float",
            "String",
            "None"
          ],
          "statements": [
            "2",
            "False",
            "2.0",
            "\"Two\"",
            "\"2\"",
            "\"\"",
            "None",
            "0",
            "\"True\"",
            "\"Integer\""
          ]
        },
        "IdentifyLiteralType_3": {
          "type": "matching_question",
          "points": 5.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Identify the type of each literal value.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "Integer",
            "Boolean",
            "Float",
            "String",
            "None"
          ],
          "statements": [
            "3",
            "False",
            "3.0",
            "\"Three\"",
            "\"3\"",
            "\"\"",
            "None",
            "0",
            "\"True\"",
            "\"Float\""
          ]
        },
        "IdentifyPrintAsOneWay": {
          "type": "multiple_choice_question",
          "points": 2.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>After data is sent to the console, how do we get it back later in the program?</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "",
            "",
            "",
            "",
            "",
            "Using parameters"
          ]
        },
        "IdentifyVariablesScope_1": {
          "type": "matching_question",
          "points": 5.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>Identify each variable as local to the function <code>fix_sentence</code> or global:</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>first_part <span style=\"color: #666666;\">=</span> <span style=\"color: #BA2121;\">\"I will pet the \"</span>\n<span style=\"color: #008000; font-weight: bold;\">def</span> <span style=\"color: #0000FF;\">fix_sentence</span>(a_string):\n    modified <span style=\"color: #666666;\">=</span> a_string<span style=\"color: #666666;\">.</span>replace(<span style=\"color: #BA2121;\">\"dog\"</span>, <span style=\"color: #BA2121;\">\"doggo\"</span>)\n    <span style=\"color: #008000; font-weight: bold;\">return</span> modified\nsecond_part <span style=\"color: #666666;\">=</span> <span style=\"color: #BA2121;\">\"dog.\"</span>\nfull_phrase <span style=\"color: #666666;\">=</span> fix_sentence(first_part<span style=\"color: #666666;\">+</span>second_part)\n</pre></div>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "global",
            "local"
          ],
          "statements": [
            "first_part",
            "second_part",
            "full_phrase",
            "a_string",
            "modified"
          ]
        },
        "IdentifyVariablesScope_2": {
          "type": "matching_question",
          "points": 5.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>Identify each variable as local to the function <code>fix_phrasing</code> or global:</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>part1 <span style=\"color: #666666;\">=</span> <span style=\"color: #BA2121;\">\"I will pet the \"</span>\n<span style=\"color: #008000; font-weight: bold;\">def</span> <span style=\"color: #0000FF;\">fix_phrasing</span>(words):\n    modified <span style=\"color: #666666;\">=</span> words<span style=\"color: #666666;\">.</span>replace(<span style=\"color: #BA2121;\">\"cat\"</span>, <span style=\"color: #BA2121;\">\"kitty\"</span>)\n    <span style=\"color: #008000; font-weight: bold;\">return</span> modified\npart2 <span style=\"color: #666666;\">=</span> <span style=\"color: #BA2121;\">\"cat.\"</span>\ncomplete <span style=\"color: #666666;\">=</span> fix_phrasing(part1<span style=\"color: #666666;\">+</span>part2)\n</pre></div>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "global",
            "local"
          ],
          "statements": [
            "part1",
            "part2",
            "complete",
            "words",
            "modified"
          ]
        },
        "Part 2 Reminder": {
          "type": "text_only_question",
          "points": 0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Remember: there is a part 2 to this exam. Once you submit, return to the Module view and complete part 2.</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "PredictStringIndexingOutput_1": {
          "type": "fill_in_multiple_blanks_question",
          "points": 4.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Assume the following code is executed.</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\">\n<pre style=\"line-height: 125%;\"><span></span>name <span style=\"color: #666666;\">=</span> <span style=\"color: #ba2121;\">\"Father\"</span>\n</pre>\n</div>\n<p>Predict the output for each print statement. Recall that output does not require quotes.</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\">\n<pre style=\"line-height: 125%;\"><span></span><span style=\"color: #666666;\">&gt;&gt;&gt;</span> name[<span style=\"color: #666666;\">0</span>]\n</pre>\n</div>\n<p>[nameFirst]</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\">\n<pre style=\"line-height: 125%;\"><span></span><span style=\"color: #666666;\">&gt;&gt;&gt;</span> name[<span style=\"color: #666666;\">-1</span>]\n</pre>\n</div>\n<p>[nameLast]</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\">\n<pre style=\"line-height: 125%;\"><span></span><span style=\"color: #666666;\">&gt;&gt;&gt;</span> name[<span style=\"color: #666666;\">2</span>]\n</pre>\n</div>\n<p>[nameThird]</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\">\n<pre style=\"line-height: 125%;\"><span></span><span style=\"color: #666666;\">&gt;&gt;&gt;</span> name[:<span style=\"color: #666666;\">2</span>]\n</pre>\n</div>\n<p>[nameFirstTwo]</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\">\n<pre style=\"line-height: 125%;\"><span></span><span style=\"color: #666666;\">&gt;&gt;&gt;</span> name[<span style=\"color: #666666;\">1</span>:<span style=\"color: #666666;\">-1</span>]\n</pre>\n</div>\n<p>[nameRange]</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "PredictStringIndexingOutput_2": {
          "type": "fill_in_multiple_blanks_question",
          "points": 4.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Assume the following code is executed.</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\">\n<pre style=\"line-height: 125%;\"><span></span>word <span style=\"color: #666666;\">=</span> <span style=\"color: #ba2121;\">\"Mother\"</span>\n</pre>\n</div>\n<p>Predict the output for each print statement. Recall that output does not require quotes.</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\">\n<pre style=\"line-height: 125%;\"><span></span><span style=\"color: #666666;\">&gt;&gt;&gt;</span> word[<span style=\"color: #666666;\">0</span>]\n</pre>\n</div>\n<p>[wordFirst]</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\">\n<pre style=\"line-height: 125%;\"><span></span><span style=\"color: #666666;\">&gt;&gt;&gt;</span> word[<span style=\"color: #666666;\">-1</span>]\n</pre>\n</div>\n<p>[wordLast]</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\">\n<pre style=\"line-height: 125%;\"><span></span><span style=\"color: #666666;\">&gt;&gt;&gt;</span> word[<span style=\"color: #666666;\">2</span>]\n</pre>\n</div>\n<p>[wordThird]</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\">\n<pre style=\"line-height: 125%;\"><span></span><span style=\"color: #666666;\">&gt;&gt;&gt;</span> word[:<span style=\"color: #666666;\">2</span>]\n</pre>\n</div>\n<p>[wordFirstTwo]</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\">\n<pre style=\"line-height: 125%;\"><span></span><span style=\"color: #666666;\">&gt;&gt;&gt;</span> word[<span style=\"color: #666666;\">1</span>:<span style=\"color: #666666;\">-1</span>]\n</pre>\n</div>\n<p>[wordRange]</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "TraceFunctionDefinition_1": {
          "type": "fill_in_multiple_blanks_question",
          "points": 3.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>Read the following code, and then fill in the blanks below.</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #666666;\">1|</span> <span style=\"color: #008000; font-weight: bold;\">def</span> <span style=\"color: #0000FF;\">increase</span>(number):\n<span style=\"color: #666666;\">2|</span>     number <span style=\"color: #666666;\">=</span> number <span style=\"color: #666666;\">+</span> <span style=\"color: #666666;\">1</span>\n<span style=\"color: #666666;\">3|</span>     <span style=\"color: #008000; font-weight: bold;\">print</span>(number)\n<span style=\"color: #666666;\">4|</span>     <span style=\"color: #008000; font-weight: bold;\">return</span> number\n<span style=\"color: #666666;\">5|</span> age <span style=\"color: #666666;\">=</span> <span style=\"color: #666666;\">0</span>\n<span style=\"color: #666666;\">6|</span> age <span style=\"color: #666666;\">=</span> increase(age)\n<span style=\"color: #666666;\">7|</span> <span style=\"color: #008000; font-weight: bold;\">print</span>(age)\n</pre></div>\n\n\n<ul>\n<li>What line is executed first? [first]</li>\n<li>What line is executed second? [second]</li>\n<li>After line 4 is executed, what will be the next line executed? [last]</li>\n</ul>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "TraceFunctionDefinition_2": {
          "type": "fill_in_multiple_blanks_question",
          "points": 3.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>Read the following code, and then fill in the blanks below.</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #666666;\">1|</span> <span style=\"color: #008000; font-weight: bold;\">def</span> <span style=\"color: #0000FF;\">decrease</span>(number):\n<span style=\"color: #666666;\">2|</span>     number <span style=\"color: #666666;\">=</span> number <span style=\"color: #666666;\">-</span> <span style=\"color: #666666;\">1</span>\n<span style=\"color: #666666;\">3|</span>     <span style=\"color: #008000; font-weight: bold;\">print</span>(number)\n<span style=\"color: #666666;\">4|</span>     <span style=\"color: #008000; font-weight: bold;\">return</span> number\n<span style=\"color: #666666;\">5|</span> age <span style=\"color: #666666;\">=</span> <span style=\"color: #666666;\">0</span>\n<span style=\"color: #666666;\">6|</span> age <span style=\"color: #666666;\">=</span> decrease(age)\n<span style=\"color: #666666;\">7|</span> <span style=\"color: #008000; font-weight: bold;\">print</span>(age)\n</pre></div>\n\n\n<ul>\n<li>What line is executed first? [first]</li>\n<li>What line is executed second? [second]</li>\n<li>After line 4 is executed, what will be the next line executed? [last]</li>\n</ul>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "TraceIfStatement_1": {
          "type": "fill_in_multiple_blanks_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Read the following code, and then fill in the blanks below.</p>\n<div class=\"codehilite\">\n<pre>def judge_rock(stone: str, quality: bool) -&gt; int:\n    if stone == \"Emerald\" and quality:\n        return 50\n     elif stone == \"Diamond\":\n        return 100\n    elif stone == \"Emerald\":\n        return 10\n    else:\n        return 0\nprint(judge_rock(\"Diamond\", True))\nprint(judge_rock(\"Emerald\", False))\n</pre>\n</div>\n<ul>\n<li>What will be printed first? [first]</li>\n<li>What will be printed second? [second]</li>\n</ul><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "TraceIfStatement_2": {
          "type": "fill_in_multiple_blanks_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Read the following code, and then fill in the blanks below.</p>\n<div class=\"codehilite\">\n<pre>def judge_coin(size: str, rare: bool) -&gt; int:\n    if size == \"Quarter\" and rare:\n        return 50\n     elif size == \"Dollar\":\n        return 100\n    elif size == \"Quarter\":\n        return 25\n    else:\n        return 0\nprint(judge_coin(\"Dollar\", True))\nprint(judge_coin(\"Quarter\", False))\n</pre>\n</div>\n<ul>\n<li>What will be printed first? [first]</li>\n<li>What will be printed second? [second]</li>\n</ul><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "TraceSequentialAssignment_1": {
          "type": "fill_in_multiple_blanks_question",
          "points": 4.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>Trace the value of the two variables by filling out the table below.\nIf a value has not been assigned to a variable, write <code>X</code> in the box.</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #666666;\">1|</span> left <span style=\"color: #666666;\">=</span> <span style=\"color: #666666;\">3</span>\n<span style=\"color: #666666;\">2|</span> right <span style=\"color: #666666;\">=</span> <span style=\"color: #666666;\">10</span> <span style=\"color: #666666;\">-</span> left\n<span style=\"color: #666666;\">3|</span> left <span style=\"color: #666666;\">=</span> <span style=\"color: #666666;\">2</span>\n<span style=\"color: #666666;\">4|</span> right <span style=\"color: #666666;\">=</span> left <span style=\"color: #666666;\">+</span> left\n</pre></div>\n\n\n<table class=\"table table-striped table-bordered\">\n<thead>\n<tr>\n<th>step</th>\n<th>left</th>\n<th>right</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>[left1]</td>\n<td>[right1]</td>\n</tr>\n<tr>\n<td>2</td>\n<td>[left2]</td>\n<td>[right2]</td>\n</tr>\n<tr>\n<td>3</td>\n<td>[left3]</td>\n<td>[right3]</td>\n</tr>\n<tr>\n<td>4</td>\n<td>[left4]</td>\n<td>[right4]</td>\n</tr>\n</tbody>\n</table>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "TraceSequentialAssignment_2": {
          "type": "fill_in_multiple_blanks_question",
          "points": 4.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>Trace the value of the two variables by filling out the table below.\nIf a value has not been assigned to a variable, write <code>X</code> in the box.</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #666666;\">1|</span> up <span style=\"color: #666666;\">=</span> <span style=\"color: #666666;\">4</span>\n<span style=\"color: #666666;\">2|</span> down <span style=\"color: #666666;\">=</span> <span style=\"color: #666666;\">20</span> <span style=\"color: #666666;\">-</span> up\n<span style=\"color: #666666;\">3|</span> up <span style=\"color: #666666;\">=</span> <span style=\"color: #666666;\">3</span>\n<span style=\"color: #666666;\">4|</span> down <span style=\"color: #666666;\">=</span> up<span style=\"color: #666666;\">+</span>up\n</pre></div>\n\n\n<table class=\"table table-striped table-bordered\">\n<thead>\n<tr>\n<th>step</th>\n<th>up</th>\n<th>down</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>[up1]</td>\n<td>[down1]</td>\n</tr>\n<tr>\n<td>2</td>\n<td>[up2]</td>\n<td>[down2]</td>\n</tr>\n<tr>\n<td>3</td>\n<td>[up3]</td>\n<td>[down3]</td>\n</tr>\n<tr>\n<td>4</td>\n<td>[up4]</td>\n<td>[down4]</td>\n</tr>\n</tbody>\n</table>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "UnitTestIdentification": {
          "type": "multiple_answers_question",
          "points": 2.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Given this function, which of the following are correct unit tests?</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\">\n<pre style=\"line-height: 125%;\"><span></span><span style=\"color: #008000; font-weight: bold;\">from</span> <span style=\"color: #0000ff; font-weight: bold;\">cisc108</span> <span style=\"color: #008000; font-weight: bold;\">import</span> assert_equal\n<span style=\"color: #008000; font-weight: bold;\">def</span> <span style=\"color: #0000ff;\">calculate</span>(x):\n    <span style=\"color: #008000; font-weight: bold;\">return</span> <span style=\"color: #666666;\">2</span> <span style=\"color: #666666;\">*</span> x <span style=\"color: #666666;\">+</span> <span style=\"color: #666666;\">1</span>\n</pre>\n</div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>assert_equal(<span style=\"color: #666666;\">4</span>, <span style=\"color: #666666;\">9</span>)\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>calculate(<span style=\"color: #666666;\">4</span>) <span style=\"color: #666666;\">==</span> <span style=\"color: #666666;\">9</span>\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>assert_equal(calculate(<span style=\"color: #666666;\">4</span>), <span style=\"color: #666666;\">9</span>)\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>calculate(assert_equal(<span style=\"color: #666666;\">4</span>), <span style=\"color: #666666;\">9</span>)\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>assert_equal(calculate, <span style=\"color: #666666;\">0</span>, <span style=\"color: #666666;\">1</span>)\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>assert_equal(calculate(<span style=\"color: #666666;\">0</span>), <span style=\"color: #666666;\">1</span>)\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
          ]
        },
        "WriteFunctionCall_1": {
          "type": "short_answer_question",
          "points": 2.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">How would you call a function named <code>bark_loudly</code>? Assume it takes no arguments.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "WriteFunctionCall_2": {
          "type": "short_answer_question",
          "points": 2.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">How would you call a function named <code>meow_softly</code>? Assume it takes no arguments.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "WriteFunctionCall_3": {
          "type": "short_answer_question",
          "points": 2.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">How would you call a function named <code>jump_joyfully</code>? Assume it takes no arguments.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        }
      }
    },
    "checks": {
      "questions": {
        "ComponentsOfFunctionCall": {
          "correct": [
            "Function name",
            "Parentheses"
          ]
        },
        "DetermineAppropriateDataFlow": {
          "correct": [
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>print_message(test_pet(response))\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>response <span style=\"color: #666666;\">=</span> test_pet(response)\nprint_message(response)\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
          ]
        },
        "EvaluateCommonMisconceptions_1": {
          "correct": [
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>my_string_value <span style=\"color: #666666;\">=</span> <span style=\"color: #BA2121;\">\"my_string_variable\"</span>\n</pre></div>\n\n\n<p><code>my_string_variable</code> is a string literal value.</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Every function defined with the \"def\" keyword MUST have a name.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
          ]
        },
        "EvaluateCommonMisconceptions_2": {
          "correct": [
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Every function defined with the \"def\" keyword MUST have a name.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "Normally, program statements are executed from top to bottom, unless function definitions and calls interrupt the flow."
          ]
        },
        "EvaluateCommonMisconceptions_3": {
          "correct": [
            "A variable defined INSIDE of a function cannot be used OUTSIDE of the function.",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>my_string_value <span style=\"color: #666666;\">=</span> <span style=\"color: #BA2121;\">\"my_string_variable\"</span>\n</pre></div>\n\n\n<p><code>my_string_variable</code> is a string literal value.</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
          ]
        },
        "EvaluateCommonMisconceptions_4": {
          "correct": [
            "Normally, program statements are executed from top to bottom, unless function definitions and calls interrupt the flow.",
            "A variable defined INSIDE of a function cannot be used OUTSIDE of the function."
          ]
        },
        "EvaluateConditional_1": {
          "correct": [
            "True",
            "False",
            "False",
            "False",
            "False",
            "Causes an error",
            "True",
            "True",
            "True",
            "True"
          ],
          "wrong": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ]
        },
        "EvaluateConditional_2": {
          "correct": [
            "True",
            "False",
            "False",
            "False",
            "False",
            "Causes an error",
            "True",
            "True",
            "True",
            "True"
          ],
          "wrong": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ]
        },
        "EvaluateFunctionCall_1": {
          "correct_exact": [
            "12"
          ]
        },
        "EvaluateFunctionCall_2": {
          "correct_exact": [
            "20"
          ]
        },
        "EvaluateOperations_1": {
          "correct": [
            "Integer",
            "Float",
            "Causes an error",
            "String",
            "Integer"
          ],
          "wrong": [
            "",
            "",
            "",
            "",
            ""
          ]
        },
        "EvaluateOperations_2": {
          "correct": [
            "Integer",
            "Float",
            "Causes an error",
            "String",
            "Integer"
          ],
          "wrong": [
            "",
            "",
            "",
            "",
            ""
          ]
        },
        "EvaluateOperations_3": {
          "correct": [
            "Integer",
            "Float",
            "Causes an error",
            "String",
            "Integer"
          ],
          "wrong": [
            "",
            "",
            "",
            "",
            ""
          ]
        },
        "EvaluateStringConditionals_1": {
          "correct": [
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #BA2121;\">\"kin\"</span> <span style=\"color: #AA22FF; font-weight: bold;\">in</span> name\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #BA2121;\">\"Alabama\"</span> <span style=\"color: #666666;\">&lt;</span> name\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>name <span style=\"color: #666666;\">==</span> <span style=\"color: #BA2121;\">'Pumpkin'</span>\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
          ]
        },
        "EvaluateStringConditionals_2": {
          "correct": [
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #BA2121;\">\"all\"</span> <span style=\"color: #AA22FF; font-weight: bold;\">in</span> name\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>name <span style=\"color: #666666;\">&lt;</span> <span style=\"color: #BA2121;\">\"Zebra\"</span>\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>name <span style=\"color: #666666;\">==</span> <span style=\"color: #BA2121;\">'Marshall'</span>\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
          ]
        },
        "HandleParameterScope_1": {
          "correct_exact": [
            "5"
          ]
        },
        "HandleParameterScope_2": {
          "correct_exact": [
            "None"
          ]
        },
        "IdentifyLiteralType_1": {
          "correct": [
            "Integer",
            "Boolean",
            "Float",
            "String",
            "String",
            "String",
            "None",
            "Integer",
            "String",
            "String"
          ],
          "wrong": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ]
        },
        "IdentifyLiteralType_2": {
          "correct": [
            "Integer",
            "Boolean",
            "Float",
            "String",
            "String",
            "String",
            "None",
            "Integer",
            "String",
            "String"
          ],
          "wrong": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ]
        },
        "IdentifyLiteralType_3": {
          "correct": [
            "Integer",
            "Boolean",
            "Float",
            "String",
            "String",
            "String",
            "None",
            "Integer",
            "String",
            "String"
          ],
          "wrong": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ]
        },
        "IdentifyPrintAsOneWay": {
          "correct": "",
          "feedback": {}
        },
        "IdentifyVariablesScope_1": {
          "correct": [
            "global",
            "global",
            "global",
            "local",
            "local"
          ],
          "wrong": [
            "",
            "",
            "",
            "",
            ""
          ]
        },
        "IdentifyVariablesScope_2": {
          "correct": [
            "global",
            "global",
            "global",
            "local",
            "local"
          ],
          "wrong": [
            "",
            "",
            "",
            "",
            ""
          ]
        },
        "Part 2 Reminder": {},
        "PredictStringIndexingOutput_1": {
          "correct": {
            "nameFirst": [
              "F"
            ],
            "nameLast": [
              "r"
            ],
            "nameThird": [
              "t"
            ],
            "nameFirstTwo": [
              "Fa"
            ],
            "nameRange": [
              "athe"
            ]
          }
        },
        "PredictStringIndexingOutput_2": {
          "correct": {
            "wordFirst": [
              "M"
            ],
            "wordLast": [
              "r"
            ],
            "wordThird": [
              "t"
            ],
            "wordFirstTwo": [
              "Mo"
            ],
            "wordRange": [
              "othe"
            ]
          }
        },
        "TraceFunctionDefinition_1": {
          "correct": {
            "first": [
              "1"
            ],
            "second": [
              "5"
            ],
            "last": [
              "6",
              "7"
            ]
          }
        },
        "TraceFunctionDefinition_2": {
          "correct": {
            "first": [
              "1"
            ],
            "second": [
              "5"
            ],
            "last": [
              "6",
              "7"
            ]
          }
        },
        "TraceIfStatement_1": {
          "correct": {
            "first": [
              "100"
            ],
            "second": [
              "10"
            ]
          }
        },
        "TraceIfStatement_2": {
          "correct": {
            "first": [
              "100"
            ],
            "second": [
              "25"
            ]
          }
        },
        "TraceSequentialAssignment_1": {
          "correct": {
            "left1": [
              "3"
            ],
            "right1": [
              "X",
              "x"
            ],
            "left2": [
              "3"
            ],
            "right2": [
              "7"
            ],
            "left3": [
              "2"
            ],
            "right3": [
              "7"
            ],
            "left4": [
              "2"
            ],
            "right4": [
              "4"
            ]
          }
        },
        "TraceSequentialAssignment_2": {
          "correct": {
            "up1": [
              "4"
            ],
            "down1": [
              "X",
              "x"
            ],
            "up2": [
              "4"
            ],
            "down2": [
              "16"
            ],
            "up3": [
              "3"
            ],
            "down3": [
              "16"
            ],
            "up4": [
              "3"
            ],
            "down4": [
              "6"
            ]
          }
        },
        "UnitTestIdentification": {
          "correct": [
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>assert_equal(calculate(<span style=\"color: #666666;\">4</span>), <span style=\"color: #666666;\">9</span>)\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>assert_equal(calculate(<span style=\"color: #666666;\">0</span>), <span style=\"color: #666666;\">1</span>)\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
          ]
        },
        "WriteFunctionCall_1": {
          "correct_exact": [
            "bark_loudly()",
            "bark_loudly( )"
          ]
        },
        "WriteFunctionCall_2": {
          "correct_exact": [
            "meow_softly()",
            "meow_softly( )"
          ]
        },
        "WriteFunctionCall_3": {
          "correct_exact": [
            "jump_joyfully()",
            "jump_joyfully( )"
          ]
        }
      }
    }
  },
  {
    "body": {
      "questions": {
        "AssigningAppendIsWrong": {
          "type": "multiple_choice_question",
          "points": 3.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>Given the following code:</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>my_list <span style=\"color: #666666;\">=</span> [<span style=\"color: #666666;\">1</span>,<span style=\"color: #666666;\">2</span>]\n</pre></div>\n\n\n<p>Which of the following will correctly update <code>my_list</code> to have the value <code>[1,2,3]</code>?</p>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "my_list = my_list + 3",
            "my_list = my_list.append(3)",
            "my_list.append(3)",
            "my_list[2] = 3",
            "You cannot add values to lists because they are immutable."
          ]
        },
        "CompositeTypeRelationships": {
          "type": "multiple_answers_question",
          "points": 3.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Mark all of the following statements that are correct about Python types.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "Lists can be composed of strings.",
            "Strings can be composed of lists.",
            "Lists can be composed of dictionaries.",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Dictionaries' values cannot be lists.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Dictionaries' keys can be booleans.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
          ]
        },
        "DetermineAppropriateKeyInNestedData_1": {
          "type": "fill_in_multiple_blanks_question",
          "points": 3.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>Fill in the blanks of the following code in order to print out each family\nname followed by the names of its members:</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>families <span style=\"color: #666666;\">=</span> [\n    {<span style=\"color: #BA2121;\">\"Name\"</span>: <span style=\"color: #BA2121;\">\"Bart\"</span>, <span style=\"color: #BA2121;\">\"Movies\"</span>: <span style=\"color: #666666;\">0</span>, \n     <span style=\"color: #BA2121;\">\"Members\"</span>: [<span style=\"color: #BA2121;\">\"Ellie\"</span>, <span style=\"color: #BA2121;\">\"Cory\"</span>, <span style=\"color: #BA2121;\">\"Ada\"</span>, <span style=\"color: #BA2121;\">\"Pumpkin\"</span>]},\n    {<span style=\"color: #BA2121;\">\"Name\"</span>: <span style=\"color: #BA2121;\">\"Addams\"</span>, <span style=\"color: #BA2121;\">\"Movies\"</span>: <span style=\"color: #666666;\">2</span>,\n     <span style=\"color: #BA2121;\">\"Members\"</span>: [<span style=\"color: #BA2121;\">\"Gomez\"</span>, <span style=\"color: #BA2121;\">\"Morticia\"</span>, <span style=\"color: #BA2121;\">\"Wednesday\"</span>]},\n    {<span style=\"color: #BA2121;\">\"Name\"</span>: <span style=\"color: #BA2121;\">\"Baggins\"</span>, <span style=\"color: #BA2121;\">\"Movies\"</span>: <span style=\"color: #666666;\">6</span>,\n     <span style=\"color: #BA2121;\">\"Members\"</span>: [<span style=\"color: #BA2121;\">\"Bilbo\"</span>, <span style=\"color: #BA2121;\">\"Frodo\"</span>]}]\n<span style=\"color: #008000; font-weight: bold;\">for</span> family <span style=\"color: #AA22FF; font-weight: bold;\">in</span> families:\n    <span style=\"color: #008000; font-weight: bold;\">print</span>(family[<span style=\"color: #BA2121;\">\"___1___\"</span>])\n    <span style=\"color: #008000; font-weight: bold;\">for</span> member <span style=\"color: #AA22FF; font-weight: bold;\">in</span> family[<span style=\"color: #BA2121;\">\"___2___\"</span>]:\n        <span style=\"color: #008000; font-weight: bold;\">print</span>(member)\n</pre></div>\n\n\n<ol>\n<li>[name]</li>\n<li>[members]</li>\n</ol>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "DetermineAppropriateKeyInNestedData_2": {
          "type": "fill_in_multiple_blanks_question",
          "points": 3.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>Fill in the blanks of the following code in order to print out each meal\nname followed by the names of its food:</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>meals <span style=\"color: #666666;\">=</span> [\n    {<span style=\"color: #BA2121;\">\"Name\"</span>: <span style=\"color: #BA2121;\">\"Classic\"</span>, <span style=\"color: #BA2121;\">\"Calories\"</span>: <span style=\"color: #666666;\">500</span>, \n     <span style=\"color: #BA2121;\">\"Foods\"</span>: [<span style=\"color: #BA2121;\">\"Steak\"</span>, <span style=\"color: #BA2121;\">\"Potatoes\"</span>, <span style=\"color: #BA2121;\">\"Corn\"</span>]},\n    {<span style=\"color: #BA2121;\">\"Name\"</span>: <span style=\"color: #BA2121;\">\"Comfort\"</span>, <span style=\"color: #BA2121;\">\"Calories\"</span>: <span style=\"color: #666666;\">600</span>,\n     <span style=\"color: #BA2121;\">\"Foods\"</span>: [<span style=\"color: #BA2121;\">\"Mac &amp; Cheese\"</span>, <span style=\"color: #BA2121;\">\"Hot Dogs\"</span>]},\n    {<span style=\"color: #BA2121;\">\"Name\"</span>: <span style=\"color: #BA2121;\">\"Italian\"</span>, <span style=\"color: #BA2121;\">\"Calories\"</span>: <span style=\"color: #666666;\">575</span>,\n     <span style=\"color: #BA2121;\">\"Foods\"</span>: [<span style=\"color: #BA2121;\">\"Spaghetti\"</span>, <span style=\"color: #BA2121;\">\"Sauce\"</span>, <span style=\"color: #BA2121;\">\"Garlic Bread\"</span>]}]\n<span style=\"color: #008000; font-weight: bold;\">for</span> meal <span style=\"color: #AA22FF; font-weight: bold;\">in</span> meals:\n    <span style=\"color: #008000; font-weight: bold;\">print</span>(meal[<span style=\"color: #BA2121;\">\"___1___\"</span>])\n    <span style=\"color: #008000; font-weight: bold;\">for</span> food <span style=\"color: #AA22FF; font-weight: bold;\">in</span> meal[<span style=\"color: #BA2121;\">\"___2___\"</span>]:\n        <span style=\"color: #008000; font-weight: bold;\">print</span>(food)\n</pre></div>\n\n\n<ol>\n<li>[name]</li>\n<li>[foods]</li>\n</ol>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "DetermineNestedListLength_1": {
          "type": "short_answer_question",
          "points": 3.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>How many elements are in the following list?</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>foods <span style=\"color: #666666;\">=</span> [{<span style=\"color: #BA2121;\">\"Name\"</span>: <span style=\"color: #BA2121;\">\"Banana\"</span>, <span style=\"color: #BA2121;\">\"Size\"</span>: <span style=\"color: #666666;\">7</span>, <span style=\"color: #BA2121;\">\"Type\"</span>: <span style=\"color: #BA2121;\">\"Fruit\"</span>},\n         {<span style=\"color: #BA2121;\">\"Name\"</span>: <span style=\"color: #BA2121;\">\"Steak\"</span>, <span style=\"color: #BA2121;\">\"Size\"</span>: <span style=\"color: #666666;\">12</span>, <span style=\"color: #BA2121;\">\"Type\"</span>: <span style=\"color: #BA2121;\">\"Meat\"</span>},\n         {<span style=\"color: #BA2121;\">\"Name\"</span>: <span style=\"color: #BA2121;\">\"Apple\"</span>, <span style=\"color: #BA2121;\">\"Size\"</span>: <span style=\"color: #666666;\">4</span>, <span style=\"color: #BA2121;\">\"Type\"</span>: <span style=\"color: #BA2121;\">\"Fruit\"</span>},\n         {<span style=\"color: #BA2121;\">\"Name\"</span>: <span style=\"color: #BA2121;\">\"Peanut\"</span>, <span style=\"color: #BA2121;\">\"Size\"</span>: <span style=\"color: #666666;\">1</span>, <span style=\"color: #BA2121;\">\"Type\"</span>: <span style=\"color: #BA2121;\">\"Nut\"</span>}]\n</pre></div>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "DetermineNestedListLength_2": {
          "type": "short_answer_question",
          "points": 3.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>How many elements are in the following list?</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>movies <span style=\"color: #666666;\">=</span> [{<span style=\"color: #BA2121;\">\"Name\"</span>: <span style=\"color: #BA2121;\">\"Avengers\"</span>, <span style=\"color: #BA2121;\">\"Length\"</span>: <span style=\"color: #666666;\">182</span>, <span style=\"color: #BA2121;\">\"Type\"</span>: <span style=\"color: #BA2121;\">\"Action\"</span>},\n          {<span style=\"color: #BA2121;\">\"Name\"</span>: <span style=\"color: #BA2121;\">\"Star Wars\"</span>, <span style=\"color: #BA2121;\">\"Length\"</span>: <span style=\"color: #666666;\">153</span>, <span style=\"color: #BA2121;\">\"Type\"</span>: <span style=\"color: #BA2121;\">\"Sci-fi\"</span>},\n          {<span style=\"color: #BA2121;\">\"Name\"</span>: <span style=\"color: #BA2121;\">\"Wonder Woman\"</span>, <span style=\"color: #BA2121;\">\"Length\"</span>: <span style=\"color: #666666;\">149</span>, <span style=\"color: #BA2121;\">\"Type\"</span>: <span style=\"color: #BA2121;\">\"Action\"</span>},\n          {<span style=\"color: #BA2121;\">\"Name\"</span>: <span style=\"color: #BA2121;\">\"Titanic\"</span>, <span style=\"color: #BA2121;\">\"Length\"</span>: <span style=\"color: #666666;\">195</span>, <span style=\"color: #BA2121;\">\"Type\"</span>: <span style=\"color: #BA2121;\">\"Romance\"</span>}]\n</pre></div>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "DictionaryVsListIndexing": {
          "type": "matching_question",
          "points": 3.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<div class=\"codehilite\" style=\"background: #f8f8f8;\">\n<pre style=\"line-height: 125%;\"><span></span>dct <span style=\"color: #666666;\">=</span> {<span style=\"color: #666666;\">1</span>: <span style=\"color: #666666;\">2</span>, <span style=\"color: #666666;\">3</span>: <span style=\"color: #666666;\">4</span>}\nlst <span style=\"color: #666666;\">=</span> [<span style=\"color: #666666;\">1</span>, <span style=\"color: #666666;\">2</span>, <span style=\"color: #666666;\">3</span>]\n</pre>\n</div>\n<p>For each expression, determine the value or error produced.</p>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "2",
            "KeyError",
            "4",
            "3",
            "IndexError",
            "1"
          ],
          "statements": [
            "dct[1]",
            "dct[2]",
            "dct[3]",
            "lst[1]",
            "lst[2]",
            "lst[3]"
          ]
        },
        "EvaluateConditionals_1": {
          "type": "matching_question",
          "points": 3.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Evaluate each conditional expression as either True, False, or produces an Error. Apply the rules of Truthiness where appropriate.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "True",
            "False",
            "Causes an error"
          ],
          "statements": [
            "\" \"",
            "\"\"",
            "\"0\"",
            "False",
            "\"False\"",
            "\"5\" < 6",
            "\"1\" == 1",
            "\"1 > 5\""
          ]
        },
        "EvaluateConditionals_2": {
          "type": "matching_question",
          "points": 3.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Evaluate each conditional expression as either True, False, or produces an Error. Apply the rules of Truthiness where appropriate.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "True",
            "False",
            "Causes an error"
          ],
          "statements": [
            "\"0\"",
            "515",
            "1",
            "[]",
            "1 or 0",
            "[1,2,3] < 3",
            "[1,2,3] == 3",
            "[False, False, False]"
          ]
        },
        "EvaluateConditionals_3": {
          "type": "matching_question",
          "points": 3.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Evaluate each conditional expression as either True, False, or produces an Error. Apply the rules of Truthiness where appropriate.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "False",
            "True",
            "Causes an error"
          ],
          "statements": [
            "\"\"",
            "\"0\"",
            "1 < 2 and 3 < 4",
            "False",
            "1 or 0",
            "5 < 4 or 2",
            "1 > 5",
            "\"5\" < 6"
          ]
        },
        "EvaluateSplitNumericList_1": {
          "type": "matching_question",
          "points": 3.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>Given the following statement:</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>values <span style=\"color: #666666;\">=</span> <span style=\"color: #BA2121;\">\"5,8,3\"</span><span style=\"color: #666666;\">.</span>split(<span style=\"color: #BA2121;\">\",\"</span>)\n</pre></div>\n\n\n<p>What will be the type of the following expressions?</p>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "list",
            "str",
            "Causes an error",
            "int",
            "dict",
            "None",
            "float"
          ],
          "statements": [
            "values",
            "values[0]",
            "values[\",\"]"
          ]
        },
        "EvaluateSplitNumericList_2": {
          "type": "matching_question",
          "points": 3.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>Given the following statement:</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>values <span style=\"color: #666666;\">=</span> <span style=\"color: #BA2121;\">\"6/4/19\"</span><span style=\"color: #666666;\">.</span>split(<span style=\"color: #BA2121;\">\"/\"</span>)\n</pre></div>\n\n\n<p>What will be the type of the following expressions?</p>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "list",
            "str",
            "Causes an error",
            "int",
            "dict",
            "None",
            "float"
          ],
          "statements": [
            "values",
            "values[0]",
            "values[\"/\"]"
          ]
        },
        "EvaluateSplitNumericList_3": {
          "type": "matching_question",
          "points": 3.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>Given the following statement:</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>values <span style=\"color: #666666;\">=</span> <span style=\"color: #BA2121;\">\"6+3+8\"</span><span style=\"color: #666666;\">.</span>split(<span style=\"color: #BA2121;\">\"+\"</span>)\n</pre></div>\n\n\n<p>What will be the type of the following expressions?</p>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "list",
            "str",
            "Causes an error",
            "int",
            "dict",
            "None",
            "float"
          ],
          "statements": [
            "values",
            "values[0]",
            "values[\"+\"]"
          ]
        },
        "IdentifyIterationVariableType_1": {
          "type": "multiple_choice_question",
          "points": 3.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>What is the type of the Iteration Variable <code>language</code> in this code?</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>languages <span style=\"color: #666666;\">=</span> [<span style=\"color: #BA2121;\">\"English\"</span>, <span style=\"color: #BA2121;\">\"Spanish\"</span>, <span style=\"color: #BA2121;\">\"Python\"</span>]\n<span style=\"color: #008000; font-weight: bold;\">for</span> language <span style=\"color: #AA22FF; font-weight: bold;\">in</span> languages:\n    <span style=\"color: #008000; font-weight: bold;\">print</span>(language)\n</pre></div>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "String",
            "List",
            "Integer",
            "Dictionary",
            "Float",
            "Value"
          ]
        },
        "IdentifyIterationVariableType_2": {
          "type": "multiple_choice_question",
          "points": 3.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>What is the type of the Iteration Variable <code>salary</code> in this code?</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\">\n<pre style=\"line-height: 125%;\"><span></span>salaries <span style=\"color: #666666;\">=</span> [<span style=\"color: #666666;\">50</span>, <span style=\"color: #666666;\">30</span>, <span style=\"color: #666666;\">20</span>]\n<span style=\"color: #008000; font-weight: bold;\">for</span> salary <span style=\"color: #aa22ff; font-weight: bold;\">in</span> salaries:\n    <span style=\"color: #008000; font-weight: bold;\">print</span>(salary)\n</pre>\n</div>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "String",
            "List",
            "Integer",
            "Dictionary",
            "Float",
            "Value"
          ]
        },
        "IdentifyTypeAsPrimitiveOrComposite": {
          "type": "matching_question",
          "points": 4.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Label each of the following as a \"Primitive type\", \"Composite type\", or \"Not a type\":<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "Primitive type",
            "Composite type",
            "Not a type"
          ],
          "statements": [
            "Boolean",
            "String",
            "List",
            "Key",
            "Dictionary",
            "Value",
            "Integer",
            "Float",
            "None",
            "Return",
            "Loop",
            "Literal"
          ]
        },
        "Immutable or Mutable": {
          "type": "matching_question",
          "points": 3.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Identify each of the following as mutable or immutable:<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "Immutable",
            "Mutable"
          ],
          "statements": [
            "String",
            "List",
            "Dictionary",
            "Integer",
            "Boolean"
          ]
        },
        "LookupCalculation_1": {
          "type": "fill_in_multiple_blanks_question",
          "points": 3.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>Given the following dictionary,</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\">\n<pre style=\"line-height: 125%;\"><span></span>scores <span style=\"color: #666666;\">=</span> { <span style=\"color: #666666;\">2</span>: <span style=\"color: #666666;\">4</span>, <span style=\"color: #666666;\">4</span>: <span style=\"color: #666666;\">2</span> }\n</pre>\n</div>\n<p>What is the value of the following expressions?</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\">\n<pre style=\"line-height: 125%;\"><span></span><span style=\"color: #666666;\">&gt;&gt;&gt;</span> scores[<span style=\"color: #666666;\">2</span>]\n</pre>\n</div>\n<p>[regular]</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\">\n<pre style=\"line-height: 125%;\"><span></span><span style=\"color: #666666;\">&gt;&gt;&gt;</span> scores[<span style=\"color: #666666;\">2+2</span>]\n</pre>\n</div>\n<p>[inner]</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\">\n<pre style=\"line-height: 125%;\"><span></span><span style=\"color: #666666;\">&gt;&gt;&gt;</span> scores[<span style=\"color: #666666;\">2</span>]<span style=\"color: #666666;\">+2</span>\n</pre>\n</div>\n<p>[outer]</p>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "LookupCalculation_2": {
          "type": "fill_in_multiple_blanks_question",
          "points": 3.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>Given the following dictionary,</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\">\n<pre style=\"line-height: 125%;\"><span></span>scores <span style=\"color: #666666;\">=</span> { <span style=\"color: #666666;\">3</span>: <span style=\"color: #666666;\">1</span>, <span style=\"color: #666666;\">1</span>: <span style=\"color: #666666;\">3</span>}\n</pre>\n</div>\n<p>What is the value of the following expressions?</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\">\n<pre style=\"line-height: 125%;\"><span></span><span style=\"color: #666666;\">&gt;&gt;&gt;</span> scores[<span style=\"color: #666666;\">1</span>]\n</pre>\n</div>\n<p>[regular]</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\">\n<pre style=\"line-height: 125%;\"><span></span><span style=\"color: #666666;\">&gt;&gt;&gt;</span> scores[<span style=\"color: #666666;\">1+2</span>]\n</pre>\n</div>\n<p>[inner]</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\">\n<pre style=\"line-height: 125%;\"><span></span><span style=\"color: #666666;\">&gt;&gt;&gt;</span> scores[<span style=\"color: #666666;\">3</span>]<span style=\"color: #666666;\">+1</span>\n</pre>\n</div>\n<p>[outer]</p>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "LoopTracing_1": {
          "type": "fill_in_multiple_blanks_question",
          "points": 5.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>Trace the values of this code. If a variable is not yet defined, put an \"X\"\n(without quotes).</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>costs <span style=\"color: #666666;\">=</span> [<span style=\"color: #666666;\">4</span>, <span style=\"color: #666666;\">3</span>]\ntotal <span style=\"color: #666666;\">=</span> <span style=\"color: #666666;\">0</span>\n<span style=\"color: #008000; font-weight: bold;\">for</span> cost <span style=\"color: #AA22FF; font-weight: bold;\">in</span> costs:\n    total <span style=\"color: #666666;\">=</span> total <span style=\"color: #666666;\">+</span> cost <span style=\"color: #666666;\">*</span> <span style=\"color: #666666;\">2</span>\n</pre></div>\n\n\n<table class=\"table table-striped table-bordered\">\n<thead>\n<tr>\n<th>step</th>\n<th>line</th>\n<th>costs</th>\n<th>cost</th>\n<th>total</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>1</td>\n<td>[4, 3]</td>\n<td>X</td>\n<td>X</td>\n</tr>\n<tr>\n<td>2</td>\n<td>2</td>\n<td>[4, 3]</td>\n<td>[cost2]</td>\n<td>[total2]</td>\n</tr>\n<tr>\n<td>3</td>\n<td>3</td>\n<td>[4, 3]</td>\n<td>[cost3]</td>\n<td>[total3]</td>\n</tr>\n<tr>\n<td>4</td>\n<td>4</td>\n<td>[4, 3]</td>\n<td>[cost4]</td>\n<td>[total4]</td>\n</tr>\n<tr>\n<td>5</td>\n<td>[line5]</td>\n<td>[costs5]</td>\n<td>3</td>\n<td>[total5]</td>\n</tr>\n<tr>\n<td>6</td>\n<td>[line6]</td>\n<td>[4, 3]</td>\n<td>[cost5]</td>\n<td>14</td>\n</tr>\n</tbody>\n</table>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "LoopTracing_2": {
          "type": "fill_in_multiple_blanks_question",
          "points": 5.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>Trace the values of this code. If a variable is not yet defined, put an \"X\"\n(without quotes).</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>profits <span style=\"color: #666666;\">=</span> [<span style=\"color: #666666;\">5</span>, <span style=\"color: #666666;\">2</span>]\ntotal <span style=\"color: #666666;\">=</span> <span style=\"color: #666666;\">0</span>\n<span style=\"color: #008000; font-weight: bold;\">for</span> profit <span style=\"color: #AA22FF; font-weight: bold;\">in</span> profits:\n    total <span style=\"color: #666666;\">=</span> total <span style=\"color: #666666;\">+</span> profit <span style=\"color: #666666;\">*</span> <span style=\"color: #666666;\">2</span>\n</pre></div>\n\n\n<table class=\"table table-striped table-bordered\">\n<thead>\n<tr>\n<th>step</th>\n<th>line</th>\n<th>profits</th>\n<th>profit</th>\n<th>total</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>1</td>\n<td>[5, 2]</td>\n<td>X</td>\n<td>X</td>\n</tr>\n<tr>\n<td>2</td>\n<td>2</td>\n<td>[5, 2]</td>\n<td>[prof2]</td>\n<td>[total2]</td>\n</tr>\n<tr>\n<td>3</td>\n<td>3</td>\n<td>[5, 2]</td>\n<td>[prof3]</td>\n<td>[total3]</td>\n</tr>\n<tr>\n<td>4</td>\n<td>4</td>\n<td>[5, 2]</td>\n<td>[prof4]</td>\n<td>[total4]</td>\n</tr>\n<tr>\n<td>5</td>\n<td>[line5]</td>\n<td>[profs5]</td>\n<td>2</td>\n<td>[total5]</td>\n</tr>\n<tr>\n<td>6</td>\n<td>[line6]</td>\n<td>[5, 2]</td>\n<td>[prof5]</td>\n<td>14</td>\n</tr>\n</tbody>\n</table>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "ModifyDictionaryAlias_1": {
          "type": "multiple_answers_question",
          "points": 3.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>Given the following code:</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>bart <span style=\"color: #666666;\">=</span> {<span style=\"color: #BA2121;\">'age'</span>: <span style=\"color: #666666;\">0</span>, <span style=\"color: #BA2121;\">'name'</span>: <span style=\"color: #BA2121;\">\"Dr. Bart\"</span>}\nbart_clone <span style=\"color: #666666;\">=</span> {<span style=\"color: #BA2121;\">'age'</span>: <span style=\"color: #666666;\">0</span>, <span style=\"color: #BA2121;\">'name'</span>: <span style=\"color: #BA2121;\">\"Dr. Bart\"</span>}\nme <span style=\"color: #666666;\">=</span> bart\n<span style=\"color: #008000; font-weight: bold;\">def</span> <span style=\"color: #0000FF;\">increase_age</span>(somebody):\n    somebody[<span style=\"color: #BA2121;\">'age'</span>] <span style=\"color: #666666;\">=</span> somebody[<span style=\"color: #BA2121;\">'age'</span>] <span style=\"color: #666666;\">+</span> <span style=\"color: #666666;\">1</span>\nincrease_age(bart)\n</pre></div>\n\n\n<p>Mark any of the following expressions that produce the value <code>1</code></p>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>bart[<span style=\"color: #BA2121;\">'age'</span>]\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>bart_clone[<span style=\"color: #BA2121;\">'age'</span>]\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>me[<span style=\"color: #BA2121;\">'age'</span>]\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
          ]
        },
        "ModifyDictionaryAlias_2": {
          "type": "multiple_answers_question",
          "points": 3.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>Given the following code:</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>cisc108 <span style=\"color: #666666;\">=</span> {<span style=\"color: #BA2121;\">'grade'</span>: <span style=\"color: #666666;\">90</span>, <span style=\"color: #BA2121;\">'name'</span>: <span style=\"color: #BA2121;\">\"CISC108\"</span>}\ncisc108_copy <span style=\"color: #666666;\">=</span> {<span style=\"color: #BA2121;\">'grade'</span>: <span style=\"color: #666666;\">90</span>, <span style=\"color: #BA2121;\">'name'</span>: <span style=\"color: #BA2121;\">\"CISC108\"</span>}\ncurrent_course <span style=\"color: #666666;\">=</span> cisc108\n<span style=\"color: #008000; font-weight: bold;\">def</span> <span style=\"color: #0000FF;\">increase_grade</span>(course):\n    course[<span style=\"color: #BA2121;\">'grade'</span>] <span style=\"color: #666666;\">=</span> course[<span style=\"color: #BA2121;\">'grade'</span>] <span style=\"color: #666666;\">+</span> <span style=\"color: #666666;\">10</span>\nincrease_grade(cisc108)\n</pre></div>\n\n\n<p>Mark any of the following expressions that produce the value <code>100</code></p>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>cisc108[<span style=\"color: #BA2121;\">'grade'</span>]\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>cisc108_copy[<span style=\"color: #BA2121;\">'grade'</span>]\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>current_course[<span style=\"color: #BA2121;\">'grade'</span>]\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
          ]
        },
        "Part 2 Reminder": {
          "type": "text_only_question",
          "points": 0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Remember, when you are done, complete part 2.</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "RecallDictionaryFacts": {
          "type": "multiple_answers_question",
          "points": 3.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Mark all of the following statements that are correct about Python dictionaries.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "Dictionaries will always have at least one key and one value.",
            "Dictionaries are useful because they can have duplicate keys.",
            "Once a dictionary is created, you can add new keys to it.",
            "Summing all the values of a dictionary is faster than summing all the elements of a list because you can lookup items instantly.",
            "Dictionaries are a collection of key-value pairs."
          ]
        },
        "TypeCheckComplexNestedData_1": {
          "type": "matching_question",
          "points": 5.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>Given the following code:</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\">\n<pre style=\"line-height: 125%;\"><span></span>meals <span style=\"color: #666666;\">=</span> [\n    {<span style=\"color: #ba2121;\">\"Name\"</span>: <span style=\"color: #ba2121;\">\"Classic\"</span>, <span style=\"color: #ba2121;\">\"Calories\"</span>: <span style=\"color: #666666;\">500</span>, \n     <span style=\"color: #ba2121;\">\"Foods\"</span>: [<span style=\"color: #ba2121;\">\"Steak\"</span>, <span style=\"color: #ba2121;\">\"Potatoes\"</span>, <span style=\"color: #ba2121;\">\"Corn\"</span>]},\n    {<span style=\"color: #ba2121;\">\"Name\"</span>: <span style=\"color: #ba2121;\">\"Comfort\"</span>, <span style=\"color: #ba2121;\">\"Calories\"</span>: <span style=\"color: #666666;\">600</span>,\n     <span style=\"color: #ba2121;\">\"Foods\"</span>: [<span style=\"color: #ba2121;\">\"Mac &amp; Cheese\"</span>, <span style=\"color: #ba2121;\">\"Hot Dogs\"</span>]},\n    {<span style=\"color: #ba2121;\">\"Name\"</span>: <span style=\"color: #ba2121;\">\"Italian\"</span>, <span style=\"color: #ba2121;\">\"Calories\"</span>: <span style=\"color: #666666;\">575</span>,\n     <span style=\"color: #ba2121;\">\"Foods\"</span>: [<span style=\"color: #ba2121;\">\"Spaghetti\"</span>, <span style=\"color: #ba2121;\">\"Sauce\"</span>, <span style=\"color: #ba2121;\">\"Garlic Bread\"</span>]}]\n</pre>\n</div>\n<p>What is the value of the following expressions?</p>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "\"Classic\"",
            "\"Italian\"",
            "Raises an error",
            "\"Sauce\"",
            "\"Hot Dogs\"",
            "\"Spaghetti\"",
            "\"Steak\"",
            "\"Foods\"",
            "\"Name\"",
            "\"Comfort\"",
            "\"Calories\""
          ],
          "statements": [
            "meals[0][\"Name\"]",
            "meals[2][\"Name\"]",
            "meals[0][500]",
            "meals[1][1]",
            "meals[500][\"Name\"]",
            "meals[2][\"Foods\"][1]",
            "meals[2][\"Foods\"][\"Spaghetti\"]",
            "meals[1][\"Foods\"][1]"
          ]
        },
        "TypeCheckComplexNestedData_2": {
          "type": "matching_question",
          "points": 5.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>Given the following code:</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\">\n<pre style=\"line-height: 125%;\"><span></span>families <span style=\"color: #666666;\">=</span> [\n    {<span style=\"color: #ba2121;\">\"Name\"</span>: <span style=\"color: #ba2121;\">\"Bart\"</span>, <span style=\"color: #ba2121;\">\"Movies\"</span>: <span style=\"color: #666666;\">0</span>, \n     <span style=\"color: #ba2121;\">\"Members\"</span>: [<span style=\"color: #ba2121;\">\"Ellie\"</span>, <span style=\"color: #ba2121;\">\"Cory\"</span>, <span style=\"color: #ba2121;\">\"Ada\"</span>, <span style=\"color: #ba2121;\">\"Pumpkin\"</span>]},\n    {<span style=\"color: #ba2121;\">\"Name\"</span>: <span style=\"color: #ba2121;\">\"Addams\"</span>, <span style=\"color: #ba2121;\">\"Movies\"</span>: <span style=\"color: #666666;\">2</span>,\n     <span style=\"color: #ba2121;\">\"Members\"</span>: [<span style=\"color: #ba2121;\">\"Gomez\"</span>, <span style=\"color: #ba2121;\">\"Morticia\"</span>, <span style=\"color: #ba2121;\">\"Wednesday\"</span>]},\n    {<span style=\"color: #ba2121;\">\"Name\"</span>: <span style=\"color: #ba2121;\">\"Baggins\"</span>, <span style=\"color: #ba2121;\">\"Movies\"</span>: <span style=\"color: #666666;\">6</span>,\n     <span style=\"color: #ba2121;\">\"Members\"</span>: [<span style=\"color: #ba2121;\">\"Bilbo\"</span>, <span style=\"color: #ba2121;\">\"Frodo\"</span>]}]\n</pre>\n</div>\n<p>What is the value of the following expressions?</p>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "\"Bart\"",
            "\"Baggins\"",
            "Raises an error",
            "\"Frodo\"",
            "\"Morticia\"",
            "\"Bilbo\"",
            "\"Gomez\"",
            "\"Addams\"",
            "\"Name\"",
            "\"Members\"",
            "\"Movies\""
          ],
          "statements": [
            "families[0][\"Name\"]",
            "families[2][\"Name\"]",
            "families[0][6]",
            "families[1][1]",
            "families[6][\"Name\"]",
            "families[2][\"Members\"][1]",
            "families[2][\"Members\"][\"Bilbo\"]",
            "families[1][\"Members\"][1]"
          ]
        }
      }
    },
    "checks": {
      "questions": {
        "AssigningAppendIsWrong": {
          "correct": "my_list.append(3)",
          "feedback": {}
        },
        "CompositeTypeRelationships": {
          "correct": [
            "Lists can be composed of strings.",
            "Lists can be composed of dictionaries.",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Dictionaries' keys can be booleans.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
          ]
        },
        "DetermineAppropriateKeyInNestedData_1": {
          "correct": {
            "name": [
              "Name"
            ],
            "members": [
              "Members"
            ]
          }
        },
        "DetermineAppropriateKeyInNestedData_2": {
          "correct": {
            "name": [
              "Name"
            ],
            "foods": [
              "Foods"
            ]
          }
        },
        "DetermineNestedListLength_1": {
          "correct_exact": [
            "4"
          ]
        },
        "DetermineNestedListLength_2": {
          "correct_exact": [
            "4"
          ]
        },
        "DictionaryVsListIndexing": {
          "correct": [
            "2",
            "KeyError",
            "4",
            "2",
            "3",
            "IndexError"
          ],
          "wrong": [
            "",
            "",
            "",
            "",
            "",
            ""
          ]
        },
        "EvaluateConditionals_1": {
          "correct": [
            "True",
            "False",
            "True",
            "False",
            "True",
            "Causes an error",
            "False",
            "True"
          ],
          "wrong": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ]
        },
        "EvaluateConditionals_2": {
          "correct": [
            "True",
            "True",
            "True",
            "False",
            "True",
            "Causes an error",
            "False",
            "True"
          ],
          "wrong": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ]
        },
        "EvaluateConditionals_3": {
          "correct": [
            "False",
            "True",
            "True",
            "False",
            "True",
            "True",
            "False",
            "Causes an error"
          ],
          "wrong": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ]
        },
        "EvaluateSplitNumericList_1": {
          "correct": [
            "list",
            "str",
            "Causes an error"
          ],
          "wrong": [
            "",
            "",
            ""
          ]
        },
        "EvaluateSplitNumericList_2": {
          "correct": [
            "list",
            "str",
            "Causes an error"
          ],
          "wrong": [
            "",
            "",
            ""
          ]
        },
        "EvaluateSplitNumericList_3": {
          "correct": [
            "list",
            "str",
            "Causes an error"
          ],
          "wrong": [
            "",
            "",
            ""
          ]
        },
        "IdentifyIterationVariableType_1": {
          "correct": "String",
          "feedback": {}
        },
        "IdentifyIterationVariableType_2": {
          "correct": "Integer",
          "feedback": {}
        },
        "IdentifyTypeAsPrimitiveOrComposite": {
          "correct": [
            "Primitive type",
            "Primitive type",
            "Composite type",
            "Not a type",
            "Composite type",
            "Not a type",
            "Primitive type",
            "Primitive type",
            "Primitive type",
            "Not a type",
            "Not a type",
            "Not a type"
          ],
          "wrong": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ]
        },
        "Immutable or Mutable": {
          "correct": [
            "Immutable",
            "Mutable",
            "Mutable",
            "Immutable",
            "Immutable"
          ],
          "wrong": [
            "",
            "",
            "",
            "",
            ""
          ]
        },
        "LookupCalculation_1": {
          "correct": {
            "regular": [
              "4"
            ],
            "inner": [
              "2"
            ],
            "outer": [
              "6"
            ]
          }
        },
        "LookupCalculation_2": {
          "correct": {
            "regular": [
              "3"
            ],
            "inner": [
              "1"
            ],
            "outer": [
              "2"
            ]
          }
        },
        "LoopTracing_1": {
          "correct": {
            "line5": [
              "3"
            ],
            "line6": [
              "4"
            ],
            "costs5": [
              "[4, 3]",
              "[4,3]",
              "[4 ,3]",
              "[4 , 3]"
            ],
            "cost2": [
              "X",
              "x"
            ],
            "cost3": [
              "4"
            ],
            "cost4": [
              "4"
            ],
            "cost5": [
              "3"
            ],
            "total2": [
              "0"
            ],
            "total3": [
              "0"
            ],
            "total4": [
              "8"
            ],
            "total5": [
              "8"
            ]
          }
        },
        "LoopTracing_2": {
          "correct": {
            "line5": [
              "3"
            ],
            "line6": [
              "4"
            ],
            "profs5": [
              "[5, 2]",
              "[5,2]",
              "[5 ,2]",
              "[5 , 2]"
            ],
            "prof2": [
              "X",
              "x"
            ],
            "prof3": [
              "5"
            ],
            "prof4": [
              "5"
            ],
            "prof5": [
              "2"
            ],
            "total2": [
              "0"
            ],
            "total3": [
              "0"
            ],
            "total4": [
              "10"
            ],
            "total5": [
              "10"
            ]
          }
        },
        "ModifyDictionaryAlias_1": {
          "correct": [
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>bart[<span style=\"color: #BA2121;\">'age'</span>]\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>me[<span style=\"color: #BA2121;\">'age'</span>]\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
          ]
        },
        "ModifyDictionaryAlias_2": {
          "correct": [
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>cisc108[<span style=\"color: #BA2121;\">'grade'</span>]\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>current_course[<span style=\"color: #BA2121;\">'grade'</span>]\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
          ]
        },
        "Part 2 Reminder": {},
        "RecallDictionaryFacts": {
          "correct": [
            "Once a dictionary is created, you can add new keys to it.",
            "Dictionaries are a collection of key-value pairs."
          ]
        },
        "TypeCheckComplexNestedData_1": {
          "correct": [
            "\"Classic\"",
            "\"Italian\"",
            "Raises an error",
            "Raises an error",
            "Raises an error",
            "\"Sauce\"",
            "Raises an error",
            "\"Hot Dogs\""
          ],
          "wrong": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ]
        },
        "TypeCheckComplexNestedData_2": {
          "correct": [
            "\"Bart\"",
            "\"Baggins\"",
            "Raises an error",
            "Raises an error",
            "Raises an error",
            "\"Frodo\"",
            "Raises an error",
            "\"Morticia\""
          ],
          "wrong": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ]
        }
      }
    }
  },
  {
    "body": {
      "questions": {
        "Midterm 1- Practice Question": {
          "type": "multiple_answers_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">In order to call a function, which of the following are <em>always</em> required?<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "The name of the function",
            "Parentheses",
            "Parameters",
            "Arguments",
            "Colon"
          ]
        },
        "Midterm 1- Review Session": {
          "type": "multiple_choice_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>We are considering hosting a review session tonight 6pm-8pm, led by one of the senior TAs. If offered, will you attend this event?</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "Definitely",
            "Possibly, if I am available",
            "No"
          ]
        },
        "Midterm 1- Second Practice Question": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">I will study more for the exam.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "Midterm 1- Self-efficacy Question": {
          "type": "multiple_choice_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>What letter grade do you think you will end up earning on the exam?</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "A",
            "B",
            "C",
            "D",
            "F"
          ]
        },
        "Midterm 1- TA Question": {
          "type": "essay_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>In the space below, write down the names of the TAs for your lab section. First name is fine.</p>\n<p>If you don't know the answer, then please make sure you learn your TAs name before the end of the semester!</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        }
      }
    },
    "checks": {
      "questions": {
        "Midterm 1- Practice Question": {
          "correct": [
            "The name of the function",
            "Parentheses"
          ]
        },
        "Midterm 1- Review Session": {
          "correct": "Definitely",
          "feedback": {}
        },
        "Midterm 1- Second Practice Question": {
          "correct": true
        },
        "Midterm 1- Self-efficacy Question": {
          "correct": "A",
          "feedback": {}
        },
        "Midterm 1- TA Question": {}
      }
    }
  },
  {
    "body": {
      "questions": {
        "Project 3 Misconceptions - Defines Function in Function": {
          "type": "essay_question",
          "points": 0.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p><strong>Misconception:</strong></p>\n<p>\"I need to use the result of calculate_rating inside of the test_loan function, so I will have to call calculate_rating inside of the test_loan function, even though the instructions say not to.\"</p>\n<p><strong>Bad Code:</strong></p>\n<pre>def test_loan(name: str, loan_amount):<br>\u00a0 \u00a0 return calculate_rating(name) ** 2 &lt; loan_amount</pre>\n<p><strong>Slides:</strong></p>\n<ul>\n<li><a title=\"Lesson 11- Variables\" href=\"https://udel.instructure.com/courses/1468151/pages/lesson-11-variables\" data-api-endpoint=\"https://udel.instructure.com/api/v1/courses/1468151/pages/lesson-11-variables\" data-api-returntype=\"Page\">Lesson 11- Variables</a></li>\n<li><a title=\"Lesson 26- Data Flow\" href=\"https://udel.instructure.com/courses/1468151/pages/lesson-26-data-flow\" data-api-endpoint=\"https://udel.instructure.com/api/v1/courses/1468151/pages/lesson-26-data-flow\" data-api-returntype=\"Page\">Lesson 26- Data Flow</a></li>\n</ul><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "Project 3 Misconceptions - Doesn't Call Function": {
          "type": "essay_question",
          "points": 0.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p><strong>Misconception:</strong></p>\n<p>\"I know I need to use the test_loan function inside of the print_loan_availability function, so I will need to put test_loan in the body of the print_loan_availability function.\"</p>\n<p><strong>Bad Code:</strong></p>\n<pre>def print_loan_availability(loan_amount: int):<br>\u00a0 \u00a0 print(\"Is loan available?\", test_loan)</pre>\n<p><strong>Suggested Slides:</strong></p>\n<ul>\n<li><a title=\"Lesson 17- Calling Functions\" href=\"https://udel.instructure.com/courses/1468151/pages/lesson-17-calling-functions\" data-api-endpoint=\"https://udel.instructure.com/api/v1/courses/1468151/pages/lesson-17-calling-functions\" data-api-returntype=\"Page\">Lesson 17- Calling Functions</a></li>\n<li><a title=\"Examples 2- Functional Decomposition\" href=\"https://udel.instructure.com/courses/1468151/pages/examples-2-functional-decomposition\" data-api-endpoint=\"https://udel.instructure.com/api/v1/courses/1468151/pages/examples-2-functional-decomposition\" data-api-returntype=\"Page\">Examples 2- Functional Decomposition</a></li>\n</ul><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "Project 3 Misconceptions - Parameters vs Globals": {
          "type": "essay_question",
          "points": 0.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p><strong>Misconception</strong>:</p>\n<p>\"I made a global variable named LOAN_AMOUNT, so if I want to use it in a function than I need to make a parameter named LOAN_AMOUNT. On the other hand, if I am going to write the test_loan function, then I need to have a variable named LOAN_AMOUNT inside my function\".</p>\n<p><strong>Bad code:</strong></p>\n<pre>LOAN_AMOUNT = 1000<br>\ndef test_loan():\n    return LOAN_AMOUNT &lt; 500\n</pre>\n<p><strong>Suggested Slides:</strong></p>\n<ul>\n<li><a title=\"Slides 20- Defining Functions\" href=\"https://udel.instructure.com/courses/1468151/pages/slides-20-defining-functions\" data-api-endpoint=\"https://udel.instructure.com/api/v1/courses/1468151/pages/slides-20-defining-functions\" data-api-returntype=\"Page\">Slides 20- Defining Functions</a></li>\n<li><a title=\"Slides 23- Scope\" href=\"https://udel.instructure.com/courses/1468151/pages/slides-23-scope\" data-api-endpoint=\"https://udel.instructure.com/api/v1/courses/1468151/pages/slides-23-scope\" data-api-returntype=\"Page\">Slides 23- Scope</a></li>\n</ul>\n<p><strong>Hint:</strong></p>\n<ul>\n<li>This code <em>runs</em>, but that does not mean it is <em>good</em>. This misconception was usually the source of bigger errors in students' code. Understanding what's bad about this is important for moving forward.</li>\n<li>Don't worry about what the project had you do, this is different functionality.</li>\n</ul><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "Project 3 Misconceptions - Re-initialized Parameters": {
          "type": "essay_question",
          "points": 0.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p><strong>Misconception</strong>:</p>\n<p>\"I need to get my data into my function, and you can only get data into a program via assignment.\"</p>\n<p><strong>Bad Code:</strong></p>\n<pre>def check_rating(rating):\n    rating = 8\n    return rating &lt; 4\n</pre>\n<p><strong>Suggested Slides</strong></p>\n<ul>\n<li><a title=\"Slides 20- Defining Functions\" href=\"https://udel.instructure.com/courses/1468151/pages/slides-20-defining-functions\" data-api-endpoint=\"https://udel.instructure.com/api/v1/courses/1468151/pages/slides-20-defining-functions\" data-api-returntype=\"Page\">Slides 20- Defining Functions</a></li>\n<li><a title=\"Slides 23- Scope\" href=\"https://udel.instructure.com/courses/1468151/pages/slides-23-scope\" data-api-endpoint=\"https://udel.instructure.com/api/v1/courses/1468151/pages/slides-23-scope\" data-api-returntype=\"Page\">Slides 23- Scope</a></li>\n<li><a title=\"Slides 26- Data Flow\" href=\"https://udel.instructure.com/courses/1468151/pages/slides-26-data-flow\" data-api-endpoint=\"https://udel.instructure.com/api/v1/courses/1468151/pages/slides-26-data-flow\" data-api-returntype=\"Page\">Slides 26- Data Flow</a></li>\n</ul><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        }
      }
    },
    "checks": {
      "questions": {
        "Project 3 Misconceptions - Defines Function in Function": {},
        "Project 3 Misconceptions - Doesn't Call Function": {},
        "Project 3 Misconceptions - Parameters vs Globals": {},
        "Project 3 Misconceptions - Re-initialized Parameters": {}
      }
    }
  },
  {
    "body": {
      "questions": {
        "Define Computer Science": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Computer Science is the scientific study of computers.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "Define Programming": {
          "type": "multiple_answers_question",
          "points": 6.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Which of the following are TRUE?<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "The order of instructions do not matter when programming",
            "Computers are useful because they can usually figure out what we want them to do, even if we are unclear.",
            "Programming is how programmers make programs.",
            "Only licensed Computer Scientists are allowed to program professionally.",
            "Programming is a small, well-defined field.",
            "Nowadays, even cars run software."
          ]
        },
        "Order Program Phases": {
          "type": "multiple_dropdowns_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>Put these three phases of programs into order:</p>\n<p>1) [first]</p>\n<p>2) [second]</p>\n<p>3) [third]</p>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": {
            "first": [
              "Output",
              "Processing",
              "Input",
              "Processing",
              "Output",
              "Input",
              "Input",
              "Processing",
              "Output"
            ],
            "second": [
              "Output",
              "Processing",
              "Input",
              "Processing",
              "Output",
              "Input",
              "Input",
              "Processing",
              "Output"
            ],
            "third": [
              "Output",
              "Processing",
              "Input",
              "Processing",
              "Output",
              "Input",
              "Input",
              "Processing",
              "Output"
            ]
          }
        },
        "Program Synonyms": {
          "type": "multiple_answers_question",
          "points": 3.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Select all of the following that are common synonyms for the term \"program\":<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "Code",
            "Software",
            "Application",
            "Codes",
            "Computer",
            "Scripts"
          ]
        }
      }
    },
    "checks": {
      "questions": {
        "Define Computer Science": {
          "correct": false,
          "wrong": "Incorrect! Computer Science is more about problem solving than it is computers. Yes, we may use computers, but they are just a tool. As a famous computer scientist once said, \"Computer Science is no more about computers than Astronomy is about telescopes.\""
        },
        "Define Programming": {
          "correct": [
            "Programming is how programmers make programs.",
            "Nowadays, even cars run software."
          ]
        },
        "Order Program Phases": {
          "correct": {
            "first": "Input",
            "second": "Input",
            "third": "Output"
          },
          "wrong": {}
        },
        "Program Synonyms": {
          "correct": [
            "Code",
            "Software",
            "Application",
            "Scripts"
          ]
        }
      }
    }
  },
  {
    "body": {
      "questions": {
        "ConditionalOperatorArity": {
          "type": "matching_question",
          "points": 2.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">How many values can each of these operators take?<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "2 values",
            "1 value"
          ],
          "statements": [
            "<",
            "not",
            "and",
            "!="
          ]
        },
        "ConditionalsAreNotDistributive": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>Given the following code:</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>age <span style=\"color: #666666;\">=</span> <span style=\"color: #666666;\">0</span>\n</pre></div>\n\n\n<p>Are the following two expressions equivalent?</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>age <span style=\"color: #666666;\">==</span> <span style=\"color: #666666;\">10</span> <span style=\"color: #AA22FF; font-weight: bold;\">or</span> <span style=\"color: #666666;\">0</span>\nage <span style=\"color: #666666;\">==</span> <span style=\"color: #666666;\">10</span> <span style=\"color: #AA22FF; font-weight: bold;\">or</span> age <span style=\"color: #666666;\">==</span> <span style=\"color: #666666;\">0</span>\n</pre></div>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "EvaluateConditional": {
          "type": "matching_question",
          "points": 6.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Identify whether each of these are True or False.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "True",
            "False",
            "Causes an error"
          ],
          "statements": [
            "3 < 5",
            "False",
            "10 == 10.0",
            "10 == \"10\"",
            "5 == 5.5",
            "7 != 7",
            "3 < \"5\"",
            "not False",
            "1 < 2 and 5 < 7",
            "5 < 4 or 3 == 3",
            "True or (True and False)",
            "not True and False"
          ]
        }
      }
    },
    "checks": {
      "questions": {
        "ConditionalOperatorArity": {
          "wrong_any": "The number of values an operator takes can be determined visually. For\ninstance, the \"&gt;\" operator is written with a number to its left and right,\nso it takes two numbers.",
          "correct": [
            "2 values",
            "1 value",
            "2 values",
            "2 values"
          ],
          "wrong": [
            "",
            "",
            "",
            ""
          ]
        },
        "ConditionalsAreNotDistributive": {
          "correct": false,
          "wrong": "They are not equivalent! This may seem surprising, but you can plug it in to Python and see what happens. Basically, the first expression checks if age is equal to 10; it is not, so it returns False. Next it computes False or 0, neither of which are True, so the result is False. The second expression correctly checks whether age is either 0 or 10 and produces True."
        },
        "EvaluateConditional": {
          "correct": [
            "True",
            "False",
            "True",
            "False",
            "False",
            "False",
            "Causes an error",
            "True",
            "True",
            "True",
            "True",
            "False"
          ],
          "wrong": [
            "",
            "False is, by definition, False.",
            "Even though the left side is an integer, and the right is a float, Python is able to compare these two numbers and find that they are the same.",
            "The number 10 and the string \"10\" are two different types of things, and Python does not view them as equivalent.",
            "Even though these two numbers are directly comparable, they are not equal.",
            "7 is, by definition, equal to 7. So asking if they are not equal results in false.",
            "You cannot compare strings and numbers with the \"\" and \"\" operators. You can ask if a string is equal to a number (which will always be false), but not if one is greater or less than the other.",
            "",
            "",
            "Even though 5 is not less than 4, the right side (3==3) evaluates to True, and that means that the overall \"or\" expression evaluates to True.",
            "Because the left side of the \"or\" evaluates to True, it doesn't matter that the right side evaluates to \"False\".",
            "The left side of the \"and\" evaluates to \"False\" first, which means that this expression evaluates to \"False and False\", which is \"False\"."
          ]
        }
      }
    }
  },
  {
    "body": {
      "questions": {
        "ComputersUnderstandVariableNames": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Variable names are important because computers understand the meaning of names\nand change their value accordingly.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "GoodPythonNames": {
          "type": "multiple_answers_question",
          "points": 3.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">You have a variable that represents your allowance, measured in dollars. Which\nof the following are <em>good</em> variable names? In this case, \"good\" means that\nthey are not too long, not too short, and the intent of the variable is\nunambiguous.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "allowance",
            "d",
            "allowance_in_dollars",
            "data",
            "integer",
            "a_variable_that_will_hold_my_allowance_money"
          ]
        },
        "ValidPythonNames": {
          "type": "multiple_answers_question",
          "points": 5.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Choose which of the following are valid Python variable names. Note that they\ndo not have to be <em>good</em> variable names, just valid.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "current-temperature",
            "_54__",
            "pag_counnt",
            "asdffdf",
            "page count",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\"books\"<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "_bad_news",
            "_5_99_555_999",
            "4th_property",
            "EarthQuake"
          ]
        },
        "VariableSolvingUnknown": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">A variable is useful because it allows to solve for an unknown value.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        }
      }
    },
    "checks": {
      "questions": {
        "ComputersUnderstandVariableNames": {
          "correct": false,
          "wrong": "False. Only humans understand the meaning of the names of variables, so we have to be careful how we\u00c2\u00a0name variables. It is very easy to misname a variable and end up confused when you are debugging the program."
        },
        "GoodPythonNames": {
          "correct": [
            "allowance",
            "allowance_in_dollars"
          ]
        },
        "ValidPythonNames": {
          "correct": [
            "_54__",
            "pag_counnt",
            "asdffdf",
            "_bad_news",
            "_5_99_555_999",
            "EarthQuake"
          ]
        },
        "VariableSolvingUnknown": {
          "correct": false,
          "wrong": "Incorrect. Although variables in algebra allow you to solve for the an unknown, variables in programming are used to store data. The computer (and the programmer) should always be able to know what their value is, without solving for anything."
        }
      }
    }
  },
  {
    "body": {
      "questions": {
        "ReadWriteVariable": {
          "type": "matching_question",
          "points": 2.5,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Label each of the following as either a \"Read\", a \"Write\", or a \"Read and\nWrite\" for the variable \"x\".<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "Write",
            "Read",
            "Read and Write"
          ],
          "statements": [
            "x = 0",
            "print(x)",
            "y = x + z",
            "x = x + 1",
            "x == 1"
          ]
        },
        "Sequential Tracing": {
          "type": "fill_in_multiple_blanks_question",
          "points": 6.5,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>Trace the value of the three variables above by filling out the table below.\nIf a value has not been assigned to a variable, write \"X\" in the box (without\nquotation marks).</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>salary <span style=\"color: #666666;\">=</span> <span style=\"color: #666666;\">10</span>\ntaxes <span style=\"color: #666666;\">=</span> <span style=\"color: #666666;\">.1</span>\nadjusted <span style=\"color: #666666;\">=</span> salary <span style=\"color: #666666;\">*</span> taxes\nsalary <span style=\"color: #666666;\">=</span> <span style=\"color: #666666;\">100</span>\ntaxes <span style=\"color: #666666;\">=</span> <span style=\"color: #666666;\">0</span>\nadjusted <span style=\"color: #666666;\">=</span> salary <span style=\"color: #666666;\">-</span> taxes\n</pre></div>\n\n\n<table class=\"table table-striped table-bordered\">\n<thead>\n<tr>\n<th>step</th>\n<th>salary</th>\n<th>taxes</th>\n<th>adjusted</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>10</td>\n<td>X</td>\n<td>X</td>\n</tr>\n<tr>\n<td>2</td>\n<td>[salary2]</td>\n<td>[taxes2]</td>\n<td>[adjusted2]</td>\n</tr>\n<tr>\n<td>3</td>\n<td>[salary3]</td>\n<td>[taxes3]</td>\n<td>[adjusted3]</td>\n</tr>\n<tr>\n<td>4</td>\n<td>[salary4]</td>\n<td>.1</td>\n<td>[adjusted4]</td>\n</tr>\n<tr>\n<td>5</td>\n<td>[salary5]</td>\n<td>[taxes5]</td>\n<td>[adjusted5]</td>\n</tr>\n<tr>\n<td>6</td>\n<td>100</td>\n<td>[taxes6]</td>\n<td>[adjusted6]</td>\n</tr>\n</tbody>\n</table>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "VariableUsageSynonyms": {
          "type": "matching_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">For each word, choose the best synonym:<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "Write",
            "Initialize",
            "Update",
            "Read"
          ],
          "statements": [
            "Set",
            "Define",
            "Change",
            "Store",
            "Use",
            "Load",
            "Increment",
            "Create"
          ]
        },
        "Variables Change Value over Program": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Variables change their value over time according to the instructions in a\nprogram.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        }
      }
    },
    "checks": {
      "questions": {
        "ReadWriteVariable": {
          "correct": [
            "Write",
            "Read",
            "Read",
            "Read and Write",
            "Read"
          ],
          "wrong": [
            "The variable is not being read, because it is to the left of the equal sign.",
            "The variable is not being written, since there is no equal sign.",
            "The \"x\" variable is not being written, since it is on the right of the equal sign.",
            "The variable \"x\" is on both sides of the equal sign, so it is being read and written.",
            "This is not a write, since there are two equal signs (==). Instead of an assignment statement, that makes this an equivalence test."
          ]
        },
        "Sequential Tracing": {
          "wrong_any": "<p>Here are some thoughts for this problem:</p>\n<p>1) When you perform a calculation involving an integer and a float, what is\nthe type of the result? Remember, if a number is a float, it must have a\ndecimal value in it!</p>\n<p>2) In math, the \"=\" establishes a relationship that will always be true. In\nprogramming, the \"=\" performs an assignment and is the only way that a\nvariable changes its value.</p>\n<p>3) The type of a variable is determined by its current value, not by previous\nvalues it has held.</p>",
          "correct": {
            "salary2": [
              "10"
            ],
            "taxes2": [
              ".1",
              "0.1"
            ],
            "adjusted2": [
              "X"
            ],
            "salary3": [
              "10"
            ],
            "taxes3": [
              ".1",
              "0.1"
            ],
            "adjusted3": [
              "1.0",
              "1."
            ],
            "salary4": [
              "100"
            ],
            "adjusted4": [
              "1.",
              "1.0"
            ],
            "salary5": [
              "100"
            ],
            "taxes5": [
              "0"
            ],
            "adjusted5": [
              "1.0",
              "1."
            ],
            "taxes6": [
              "0"
            ],
            "adjusted6": [
              "100"
            ]
          }
        },
        "VariableUsageSynonyms": {
          "correct": [
            "Write",
            "Initialize",
            "Update",
            "Write",
            "Read",
            "Read",
            "Update",
            "Initialize"
          ],
          "wrong": [
            "Setting can refer to either the initialization or the update, so it is actually more synonymous with \"write\".",
            "",
            "",
            "Setting can refer to either the initialization or the update, so it is actually more synonymous with \"write\".",
            "",
            "",
            "",
            ""
          ]
        },
        "Variables Change Value over Program": {
          "correct": true,
          "wrong": "No, this is exactly what variables do!"
        }
      }
    }
  },
  {
    "body": {
      "questions": {
        "ExpressionComponents": {
          "type": "multiple_answers_question",
          "points": 3.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Which of the following can be involved in an expression?<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "Literal values",
            "Arithmetic operators",
            "Other expressions",
            "Conditional operators",
            "Statements",
            "Variables"
          ]
        },
        "ExpressionType": {
          "type": "matching_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Evaluate each of the following expressions and identify the type of the\nresult.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "Float",
            "Integer",
            "Boolean",
            "String"
          ],
          "statements": [
            "(1 + 2) * 4 / 3",
            "1 + 2 + 3 + 4 + 5",
            "(1 + 2) > 4",
            "\"Hello \" + \"World\"",
            "4 > 5 or 5 == 6"
          ]
        },
        "LeftToRightExpressions": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Expressions are evaluated from left to right<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "SequentialStatements": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Normally, statements are executed from top to bottom.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "StepByStepExecution": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Programs may execute very quickly in computers, but they always happen one\nstep at a time.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        }
      }
    },
    "checks": {
      "questions": {
        "ExpressionComponents": {
          "correct": [
            "Literal values",
            "Arithmetic operators",
            "Other expressions",
            "Conditional operators",
            "Variables"
          ]
        },
        "ExpressionType": {
          "correct": [
            "Float",
            "Integer",
            "Boolean",
            "String",
            "Boolean"
          ],
          "wrong": [
            "",
            "",
            "",
            "",
            ""
          ]
        },
        "LeftToRightExpressions": {
          "correct": false,
          "wrong": "Surprisingly, this isn't always true. Parentheses, for example, override this behavior. Assignment statements are read starting on the right side, before moving onto the left."
        },
        "SequentialStatements": {
          "correct": true,
          "wrong": "The statements of a program are normally read from the top of the program downward. This is similar to reading a book. Later in the course, we will learn about ways to change the flow of a program, but normally programs always go from top to bottom."
        },
        "StepByStepExecution": {
          "correct": true,
          "wrong": "Programs are always run one step at a time. Some people believe that all statements in a program are executed at the same time. But that's not true! They're in a specific order so that they can be executed one after the other."
        }
      }
    }
  },
  {
    "body": {
      "questions": {
        "ErrorDescriptions": {
          "type": "matching_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Match each of the following common errors with its description.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "You have referenced a variable that does not exist.",
            "You have used an operator with incorrect types",
            "You have a mistake with your code's grammar or punctuation.",
            "This is not a common type of error."
          ],
          "statements": [
            "NameError",
            "TypeError",
            "SyntaxError",
            "TimeError"
          ]
        },
        "ErrorHandling": {
          "type": "multiple_choice_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">When your program has an error, the first thing you should do is:<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "Ask for help.",
            "Curl up into a ball and cry.",
            "Check the error message and consider its meaning.",
            "Start debugging your program."
          ]
        },
        "TracebackLine": {
          "type": "short_answer_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>According to the following error message, what line of code did the error\noccur on?</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>Traceback (most recent call last):\n  File <span style=\"color: #BA2121;\">\"my_code.py\"</span>, line <span style=\"color: #666666;\">32</span>, <span style=\"color: #AA22FF; font-weight: bold;\">in</span> <span style=\"color: #666666;\">&lt;</span>module<span style=\"color: #666666;\">&gt;</span>  \n    <span style=\"color: #666666;\">45</span> <span style=\"color: #666666;\">+</span> <span style=\"color: #BA2121;\">\"NameError\"</span>\n<span style=\"color: #D2413A; font-weight: bold;\">TypeError</span>: unsupported operand <span style=\"color: #008000;\">type</span>(s) <span style=\"color: #008000; font-weight: bold;\">for</span> <span style=\"color: #666666;\">+</span>: <span style=\"color: #BA2121;\">'int'</span> <span style=\"color: #AA22FF; font-weight: bold;\">and</span> <span style=\"color: #BA2121;\">'str'</span>\n</pre></div>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "TracebackType": {
          "type": "multiple_choice_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>According to the following error message, what type of error occurred?</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>Traceback (most recent call last):\n  File <span style=\"color: #BA2121;\">\"my_code.py\"</span>, line <span style=\"color: #666666;\">32</span>, <span style=\"color: #AA22FF; font-weight: bold;\">in</span> <span style=\"color: #666666;\">&lt;</span>module<span style=\"color: #666666;\">&gt;</span>  \n    <span style=\"color: #666666;\">45</span> <span style=\"color: #666666;\">+</span> <span style=\"color: #BA2121;\">\"NameError\"</span>\n<span style=\"color: #D2413A; font-weight: bold;\">TypeError</span>: unsupported operand <span style=\"color: #008000;\">type</span>(s) <span style=\"color: #008000; font-weight: bold;\">for</span> <span style=\"color: #666666;\">+</span>: <span style=\"color: #BA2121;\">'int'</span> <span style=\"color: #AA22FF; font-weight: bold;\">and</span> <span style=\"color: #BA2121;\">'str'</span>\n</pre></div>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "TypeError",
            "NameError",
            "SyntaxError",
            "No error occurred",
            "We cannot tell the type of error from the information provided"
          ]
        }
      }
    },
    "checks": {
      "questions": {
        "ErrorDescriptions": {
          "correct": [
            "You have referenced a variable that does not exist.",
            "You have used an operator with incorrect types",
            "You have a mistake with your code's grammar or punctuation.",
            "This is not a common type of error."
          ],
          "wrong": [
            "",
            "",
            "",
            ""
          ]
        },
        "ErrorHandling": {
          "correct": "Check the error message and consider its meaning.",
          "feedback": {
            "Ask for help.": "If you do not understand the error message, or you do not know how to fix your program, it is perfectly appropriate to ask for help. However, it should not be the first thing you do.",
            "Curl up into a ball and cry.": "Um, this isn't a good strategy! You may feel this way sometimes, but if that happens, you should put your work down and take a little break. Maybe go talk to the instructor a little! Mental health is very important.",
            "Start debugging your program.": "Before you start debugging, you should read the error message!"
          }
        },
        "TracebackLine": {
          "correct_exact": [
            "32"
          ]
        },
        "TracebackType": {
          "correct": "TypeError",
          "feedback": {
            "NameError": "No, the \"NameError\" was part of the faulty line of code. Don't let it distract you!",
            "No error occurred": "No, an error definitely occurred.",
            "We cannot tell the type of error from the information provided": "Nope, we can definitely tell what type of error occurred. Check the start of the last line of the error message!"
          }
        }
      }
    }
  },
  {
    "body": {
      "questions": {
        "AddingStrings": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>\"1\" + \"1\" = \"2\"\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "LiteralStringValues": {
          "type": "multiple_answers_question",
          "points": 3.5,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Select any of the following that are string literal values.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><code>\"5\"</code><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><code>my_string</code><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><code>\"my_variable\"</code><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><code>_5</code><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><code>5</code><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><code>\"Hello</code><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><code>'World\"</code><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
          ]
        },
        "StringsHaveNumbers": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">True or False: Strings are composed of only letters and symbols.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "WritingStringLiterals": {
          "type": "fill_in_multiple_blanks_question",
          "points": 2.5,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>How do you write each of the following as string literals?</p>\n<p>The first letter of the alphabet, lower case: [lettera]<br>\nA tab character: [tab]<br>\nA new line: [newline]<br>\nA double quote: [doublequote]<br>\nA single quote: [singlequote]<br>\nThe empty string: [empty]</p>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        }
      }
    },
    "checks": {
      "questions": {
        "AddingStrings": {
          "correct": false,
          "wrong": "Nope! Remember, adding strings puts them side by side - this actually equals \"11\"!"
        },
        "LiteralStringValues": {
          "correct": [
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><code>\"5\"</code><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><code>\"my_variable\"</code><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
          ]
        },
        "StringsHaveNumbers": {
          "correct": false,
          "wrong": "Right, Strings can also have numbers!"
        },
        "WritingStringLiterals": {
          "wrong_any": "<p>Remember these tips:</p>\n<ul>\n<li>Strings always have either double or single quotes around them</li>\n<li>You must begin and end with the same type of quote (single or double)</li>\n<li>Escape characters begin with a \"\\\"</li>\n</ul>",
          "correct": {
            "tab": [
              "'\\t'",
              "\"\\t\""
            ],
            "newline": [
              "'\\n'",
              "\"\\n\""
            ],
            "doublequote": [
              "'\"'",
              "\"\\\"\""
            ],
            "singlequote": [
              "'\\''",
              "\"'\""
            ],
            "lettera": [
              "\"a\"",
              "'a'"
            ],
            "empty": [
              "\"\"",
              "''",
              "str()"
            ]
          }
        }
      }
    }
  },
  {
    "body": {
      "questions": {
        "EvaluateStringConditionals": {
          "type": "multiple_answers_question",
          "points": 5.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>Mark each of the following expressions if they evaluate to True. Assume that\nthe following code is executed first:</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>title <span style=\"color: #666666;\">=</span> <span style=\"color: #BA2121;\">\"Harry Potter\"</span>\n</pre></div>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>\"word\" in \"The last word\"\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><code>`\n\"c\" in \"Do Capital Letters Matter?\"</code><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>\"it\" in title\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>\" \" in title\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>\"\" in title\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>\"Alabama\" &lt; \"Virginia\"\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>\"Coward\" &lt;= \"Coward\"\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>\"Dog\" == \"Dog\"\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>title not in \"Harry Potter Book 1\"\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
          ]
        },
        "StringIndexingNegative": {
          "type": "short_answer_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>Predict the output of the following code:</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>name <span style=\"color: #666666;\">=</span> <span style=\"color: #BA2121;\">\"Hermione\"</span>  \n<span style=\"color: #008000; font-weight: bold;\">print</span>(name[<span style=\"color: #666666;\">-2</span>])\n</pre></div>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "StringIndexingPositive": {
          "type": "short_answer_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>Predict the output of the following code:</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>name <span style=\"color: #666666;\">=</span> <span style=\"color: #BA2121;\">\"Hermione\"</span>  \n<span style=\"color: #008000; font-weight: bold;\">print</span>(name[<span style=\"color: #666666;\">4</span>])\n</pre></div>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "StringIndexingZero": {
          "type": "short_answer_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>Predict the output of the following code:</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>name <span style=\"color: #666666;\">=</span> <span style=\"color: #BA2121;\">\"Hermione\"</span>  \n<span style=\"color: #008000; font-weight: bold;\">print</span>(name[<span style=\"color: #666666;\">0</span>])\n</pre></div>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "StringSubscriptLeftNegative": {
          "type": "short_answer_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>Predict the output of the following code:</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>name <span style=\"color: #666666;\">=</span> <span style=\"color: #BA2121;\">\"Hermione\"</span>  \n<span style=\"color: #008000; font-weight: bold;\">print</span>(name[<span style=\"color: #666666;\">-3</span>:])\n</pre></div>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "StringSubscriptPositives": {
          "type": "short_answer_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>Predict the output of the following code:</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>name <span style=\"color: #666666;\">=</span> <span style=\"color: #BA2121;\">\"Hermione\"</span>  \n<span style=\"color: #008000; font-weight: bold;\">print</span>(name[<span style=\"color: #666666;\">4</span>:<span style=\"color: #666666;\">7</span>])\n</pre></div>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "StringSubscriptRight": {
          "type": "short_answer_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>Predict the output of the following code:</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>name <span style=\"color: #666666;\">=</span> <span style=\"color: #BA2121;\">\"Hermione\"</span>  \n<span style=\"color: #008000; font-weight: bold;\">print</span>(name[:<span style=\"color: #666666;\">2</span>])\n</pre></div>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        }
      }
    },
    "checks": {
      "questions": {
        "EvaluateStringConditionals": {
          "correct": [
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>\"word\" in \"The last word\"\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>\" \" in title\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>\"\" in title\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>\"Alabama\" &lt; \"Virginia\"\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>\"Coward\" &lt;= \"Coward\"\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>\"Dog\" == \"Dog\"\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
          ]
        },
        "StringIndexingNegative": {
          "correct_exact": [
            "n"
          ]
        },
        "StringIndexingPositive": {
          "correct_exact": [
            "i"
          ]
        },
        "StringIndexingZero": {
          "correct_exact": [
            "H"
          ]
        },
        "StringSubscriptLeftNegative": {
          "correct_exact": [
            "one"
          ]
        },
        "StringSubscriptPositives": {
          "correct_exact": [
            "ion"
          ]
        },
        "StringSubscriptRight": {
          "correct_exact": [
            "He"
          ]
        }
      }
    }
  },
  {
    "body": {
      "questions": {
        "CallingFunction": {
          "type": "short_answer_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">How would you call a function named <code>openDoor</code>? Assume it takes no arguments.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "FunctionDefintion": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Functions are reusable chunks of code that have inputs and outputs.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "IntegerCallWithOperators": {
          "type": "short_answer_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>The function <code>add5</code> below returns the number 5 added to the argument. What\nvalue will the variable \"x\" hold after the line is executed?</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>x <span style=\"color: #666666;\">=</span> add5(<span style=\"color: #666666;\">10</span>) <span style=\"color: #666666;\">*</span> add5(<span style=\"color: #666666;\">2</span>)\n</pre></div>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "MethodOrFunction": {
          "type": "matching_question",
          "points": 2.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Identify whether the following is a method call or a function call.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "Method call",
            "Function call"
          ],
          "statements": [
            "list.append()",
            "print()",
            "function.call()",
            "method()",
            "\"function\".method()"
          ]
        },
        "StringCallWithOperator": {
          "type": "short_answer_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>The function <code>makeCat</code> below returns the string \"Cat\". What value will the\nvariable <code>x</code> hold after the line is executed?</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>x <span style=\"color: #666666;\">=</span> makeCat() <span style=\"color: #666666;\">+</span> makeCat() <span style=\"color: #666666;\">+</span> makeCat()\n</pre></div>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "ValidCall": {
          "type": "multiple_answers_question",
          "points": 4.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Mark all of the following that are valid function or method calls. Do not\nworry if a variable exists, only determine whether 1) this is a function or\nmethod call, and 2) the syntax is valid.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>list.pop()\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #7D9029;\">.open</span>()\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "fire",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>build(<span style=\"color: #666666;\">1</span>, <span style=\"color: #666666;\">2</span>, <span style=\"color: #666666;\">3</span>)\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>a <span style=\"color: #666666;\">=</span> <span style=\"color: #666666;\">0</span>\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #008000; font-weight: bold;\">print</span>()\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #BA2121;\">\"help\"</span>()\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #BA2121;\">\"harry potter\"</span><span style=\"color: #666666;\">.</span>title()\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
          ]
        }
      }
    },
    "checks": {
      "questions": {
        "CallingFunction": {
          "correct_exact": [
            "openDoor()",
            "openDoor( )"
          ]
        },
        "FunctionDefintion": {
          "correct": true,
          "wrong": "Nope, this is pretty much what a function is."
        },
        "IntegerCallWithOperators": {
          "correct_exact": [
            "105"
          ]
        },
        "MethodOrFunction": {
          "correct": [
            "Method call",
            "Function call",
            "Method call",
            "Function call",
            "Method call"
          ],
          "wrong": [
            "",
            "",
            "",
            "",
            ""
          ]
        },
        "StringCallWithOperator": {
          "correct_exact": [
            "\"CatCatCat\"",
            "'CatCatCat'"
          ]
        },
        "ValidCall": {
          "correct": [
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>list.pop()\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>build(<span style=\"color: #666666;\">1</span>, <span style=\"color: #666666;\">2</span>, <span style=\"color: #666666;\">3</span>)\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #008000; font-weight: bold;\">print</span>()\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #BA2121;\">\"harry potter\"</span><span style=\"color: #666666;\">.</span>title()\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
          ]
        }
      }
    }
  },
  {
    "body": {
      "questions": {
        "DefineFunctionTerms": {
          "type": "matching_question",
          "points": 3.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Match each word to the best definition.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "The names given to the values that will be passed into a function.",
            "The curved symbols that go after a function name to ensure that it is called.",
            "A reusable chunk of code that can be called using its name and parentheses.",
            "The values passed into a function.",
            "The extra information about a function supplied to help other programmers understand how to use the function.",
            "The act of using a function via its name and parentheses.",
            "Method",
            "Replace",
            "Print"
          ],
          "statements": [
            "Parameter",
            "Parentheses",
            "Function",
            "Argument",
            "Documentation",
            "Call"
          ]
        },
        "InputReturn": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">The <code>input</code> function returns a string.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "MethodCallResults": {
          "type": "fill_in_multiple_blanks_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>According to <a href=\"https://udel.instructure.com/courses/1468151/pages/reference-strings\" target=\"_blank\" data-api-endpoint=\"https://udel.instructure.com/api/v1/courses/1468151/pages/reference-strings\" data-api-returntype=\"Page\">the linked\ndocumentation</a>, what is the result of each of the following expression involving a\nmethod call?</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #666666;\">&gt;</span> <span style=\"color: #BA2121;\">\"To be Or not to be, that is the question.\"</span><span style=\"color: #666666;\">.</span>count(<span style=\"color: #BA2121;\">\"o\"</span>)  \n[count]\n</pre></div>\n\n\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #666666;\">&gt;</span> <span style=\"color: #BA2121;\">\"You should remember how to use subscripts\"</span>[<span style=\"color: #666666;\">5</span>:<span style=\"color: #666666;\">10</span>]<span style=\"color: #666666;\">.</span>count(<span style=\"color: #BA2121;\">\"o\"</span>)  \n[countsubscripts]\n</pre></div>\n\n\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #666666;\">&gt;</span> <span style=\"color: #BA2121;\">\"Where's waldo?\"</span><span style=\"color: #666666;\">.</span>find(<span style=\"color: #BA2121;\">\"w\"</span>)  \n[findw]  \n\n<span style=\"color: #666666;\">&gt;</span> <span style=\"color: #BA2121;\">\"To be or not to be, that is the question.\"</span><span style=\"color: #666666;\">.</span>upper()<span style=\"color: #666666;\">.</span>count(<span style=\"color: #BA2121;\">\"TO\"</span>)  \n[countupper]  \n\n<span style=\"color: #666666;\">&gt;</span> <span style=\"color: #BA2121;\">\"eeeeee\"</span><span style=\"color: #666666;\">.</span>replace(<span style=\"color: #BA2121;\">\"ee\"</span>, <span style=\"color: #BA2121;\">\"e\"</span>)<span style=\"color: #666666;\">.</span>count(<span style=\"color: #BA2121;\">\"e\"</span>)  \n[doublee]\n</pre></div>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "MethodComponents": {
          "type": "matching_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>Given the method call below, identify each component.</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #BA2121;\">\"Open the pod bay doors, Hal!\"</span><span style=\"color: #666666;\">.</span>replace(<span style=\"color: #BA2121;\">\"Open\"</span>, <span style=\"color: #BA2121;\">\"Close\"</span>)\n</pre></div>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "The calling value",
            "Method name",
            "Argument",
            "Parentheses"
          ],
          "statements": [
            "\"Open the pod bay doors, Hal!\"",
            "replace",
            "\"Open\"",
            "\"Close\"",
            "("
          ]
        },
        "PrintReturn": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">The <code>print</code> function returns a string.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "StringCountReturn": {
          "type": "short_answer_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">According to the linked documentation, what <em>type</em> of value does the\n<a href=\"https://udel.instructure.com/courses/1468151/pages/reference-strings#count\" target=\"_blank\" data-api-endpoint=\"https://udel.instructure.com/api/v1/courses/1468151/pages/reference-strings%23count\" data-api-returntype=\"Page\">string.count()</a> function return?<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "StringSplitParameters": {
          "type": "short_answer_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">According to the linked documentation, how many parameters does the\n<a href=\"https://udel.instructure.com/courses/1468151/pages/reference-strings#split\" target=\"_blank\" data-api-endpoint=\"https://udel.instructure.com/api/v1/courses/1468151/pages/reference-strings%23split\" data-api-returntype=\"Page\">string.split()</a> function take?<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        }
      }
    },
    "checks": {
      "questions": {
        "DefineFunctionTerms": {
          "correct": [
            "The names given to the values that will be passed into a function.",
            "The curved symbols that go after a function name to ensure that it is called.",
            "A reusable chunk of code that can be called using its name and parentheses.",
            "The values passed into a function.",
            "The extra information about a function supplied to help other programmers understand how to use the function.",
            "The act of using a function via its name and parentheses."
          ],
          "wrong": [
            "",
            "",
            "",
            "",
            "",
            ""
          ]
        },
        "InputReturn": {
          "correct": true,
          "wrong": "The \"input\" function does two things. First, it prints out a message to the user. Then, once the user has typed something and pressed \"Enter\", the function returns what the user typed as a string. That means that this function does return a string!"
        },
        "MethodCallResults": {
          "correct": {
            "count": [
              "4"
            ],
            "countsubscripts": [
              "1"
            ],
            "findw": [
              "8"
            ],
            "countupper": [
              "2"
            ],
            "doublee": [
              "3"
            ]
          }
        },
        "MethodComponents": {
          "correct": [
            "The calling value",
            "Method name",
            "Argument",
            "Argument",
            "Parentheses"
          ],
          "wrong": [
            "Check the lesson - what is the first part of a method call?",
            "",
            "",
            "",
            ""
          ]
        },
        "PrintReturn": {
          "correct": false,
          "wrong": "No! This may be very surprising, but it gets at the heart of the difference between \"printing\" and \"returning\". The print function will write to the console (display a message to the user). It does not return a string, it only returns the special value None."
        },
        "StringCountReturn": {
          "wrong_any": "Note that this asks for the <em>type</em> of the result. Recall the basic types: int,\nfloat, str, bool, None. The answer is one of these!",
          "correct_exact": [
            "int",
            "integer",
            "Integer"
          ]
        },
        "StringSplitParameters": {
          "correct_exact": [
            "2",
            "1"
          ]
        }
      }
    }
  },
  {
    "body": {
      "questions": {
        "DescribeDebuggingStrategies": {
          "type": "matching_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Match each debugging strategy to its description.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "Develop a hypothesis that you can use to test predictions about your code.",
            "Repeatedly divide your code in half using print statements to track the fault.",
            "Meticulously review each line of code out loud."
          ],
          "statements": [
            "The Scientific Method",
            "Wolf Fencing",
            "Rubber Duck Debugging"
          ]
        },
        "OrderDebuggingStrategies": {
          "type": "matching_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Put the following steps into the correct order.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "Observe a failure in your code.",
            "Develop a hypothesis as to why the code failed.",
            "Turn this hypothesis into a prediction.",
            "Test the prediction by experimenting with the code and making observations.",
            "Repeat the previous two steps until the code is fixed.",
            "Celebrate."
          ],
          "statements": [
            "First",
            "Second",
            "Third",
            "Fourth",
            "Fifth",
            "Sixth"
          ]
        }
      }
    },
    "checks": {
      "questions": {
        "DescribeDebuggingStrategies": {
          "correct": [
            "Develop a hypothesis that you can use to test predictions about your code.",
            "Repeatedly divide your code in half using print statements to track the fault.",
            "Meticulously review each line of code out loud."
          ],
          "wrong": [
            "",
            "",
            ""
          ]
        },
        "OrderDebuggingStrategies": {
          "correct": [
            "Observe a failure in your code.",
            "Develop a hypothesis as to why the code failed.",
            "Turn this hypothesis into a prediction.",
            "Test the prediction by experimenting with the code and making observations.",
            "Repeat the previous two steps until the code is fixed.",
            "Celebrate."
          ],
          "wrong": [
            "",
            "",
            "",
            "",
            "",
            ""
          ]
        }
      }
    }
  },
  {
    "body": {
      "questions": {
        "AreProgramsGoodForWritingInstructions": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Programming languages are good for writing instructions.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "DidHumansDiscoverProgrammingLanguages": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Humans discovered programming languages in the 1940s and have been decoding\nthem ever since.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "DoProgrammingLanguagesHaveRules": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Programming languages, like spoken languages, have rules.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "IdentifyReasonsForPython": {
          "type": "multiple_answers_question",
          "points": 2.5,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Which of the following are reasons why Python is a good language to learn?<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "It is one of the most popular programming languages in the world.",
            "It is an easy language to learn.",
            "It is a brand new language.",
            "There are many powerful libraries for Python that make it useful for many kinds of problems.",
            "It is heavily funded by the United States government, making it very reliable."
          ]
        },
        "IdentifySyntacticAndSemanticErrors": {
          "type": "matching_question",
          "points": 2.5,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Match the error with the sentence.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "Semantic Error",
            "Syntax Error",
            "No error"
          ],
          "statements": [
            "Green is with the monkey's ears and toes.",
            "Wishes hop incorrectly over the coffee cup.",
            "Oxygen cold wheat.",
            "This Open. Verbed -- ? Outside ... grapes!",
            "Where did the ribbon go?"
          ]
        },
        "IdentifyUsesForPython": {
          "type": "multiple_answers_question",
          "points": 2.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">What are some common uses for Python?<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "Making web servers",
            "Scientific computing",
            "Processing data",
            "Writing a novel"
          ]
        }
      }
    },
    "checks": {
      "questions": {
        "AreProgramsGoodForWritingInstructions": {
          "correct": true,
          "wrong": "Writing instructions is pretty much the only thing that programming languages are good for!"
        },
        "DidHumansDiscoverProgrammingLanguages": {
          "correct": false,
          "wrong": "Incorrect. Programming languages were not discovered, they were invented. The first major programming language was actually invented in the 1950s - it was named FORTRAN."
        },
        "DoProgrammingLanguagesHaveRules": {
          "correct": true,
          "wrong": "Both programming languages and human languages have rules. For human languages, we have rules such as grammar and spelling. Programming languages have both syntactic and semantic rules."
        },
        "IdentifyReasonsForPython": {
          "correct": [
            "It is one of the most popular programming languages in the world.",
            "It is an easy language to learn.",
            "There are many powerful libraries for Python that make it useful for many kinds of problems."
          ]
        },
        "IdentifySyntacticAndSemanticErrors": {
          "correct": [
            "Semantic Error",
            "Semantic Error",
            "Syntax Error",
            "Syntax Error",
            "No error"
          ],
          "wrong": [
            "This satisfies all the\u00c2\u00a0grammatical rules of english. However, how can a color be \"with\" something?",
            "This satisfies all the grammatical rules of english. However, wishes do not hop.",
            "This sentence is missing a verb, so it is grammatically incorrect.",
            "This sentence has very bad punctuation, making it not a sentence.",
            "This is not an interesting sentence, but there is nothing syntactically or semantically wrong it."
          ]
        },
        "IdentifyUsesForPython": {
          "correct": [
            "Making web servers",
            "Scientific computing",
            "Processing data"
          ]
        }
      }
    }
  },
  {
    "body": {
      "questions": {
        "AdvantagesOfFunctions": {
          "type": "multiple_answers_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Mark all of the following that ARE advantages of functions.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "Make it easy to reuse code",
            "Code in a function executes faster",
            "Easier to debug code in a function because it is isolated",
            "Functions allow us to store values in variables."
          ]
        },
        "FunctionHeaderColon": {
          "type": "short_answer_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Type the symbol that goes at the end of the function definition's header.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "FunctionLabeling": {
          "type": "matching_question",
          "points": 3.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Identify each part of the function and its call:</p>\n<p><img src=\"https://i.imgur.com/rNCjHXG.png\" alt=\"Code annotated with numbers\" width=\"50%\"></p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "Definition keyword",
            "Function name",
            "Parameter name",
            "Parameter type",
            "Parentheses",
            "Dash and greater than arrow",
            "Return type",
            "Colon",
            "Body",
            "Return value",
            "Argument"
          ],
          "statements": [
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11"
          ]
        },
        "FunctionPossibleReturnTypes": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Every function must return an integer or string.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "FunctionRequiresNames": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Every function defined with the \"def\" keyword MUST have a name.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "FunctionRequiresParameters": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Every function created with the \"def\" keyword must have AT LEAST ONE\nparameter.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "FunctionWithoutReturn": {
          "type": "short_answer_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>What is the second value printed after the code below is executed?</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\">\n<pre style=\"line-height: 125%;\"><span></span><span style=\"color: #008000; font-weight: bold;\">def</span> <span style=\"color: #0000ff;\">double</span>(value:int):\n    value <span style=\"color: #666666;\">=</span> value <span style=\"color: #666666;\">*</span> <span style=\"color: #666666;\">2</span>\n    <span style=\"color: #008000; font-weight: bold;\">print</span>(value)\n\nvalue <span style=\"color: #666666;\">=</span> <span style=\"color: #666666;\">1</span>\n<span style=\"color: #008000; font-weight: bold;\">print</span>(double(value)))\n</pre>\n</div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "IdentifyFunctionName": {
          "type": "short_answer_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Given the function definition below, what is the name of the function?</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\">\n<pre style=\"line-height: 125%;\"><span></span><span style=\"color: #008000; font-weight: bold;\">def</span> <span style=\"color: #0000ff;\">get_area</span>(width:int, height:int) -&gt; int:\n    <span style=\"color: #008000; font-weight: bold;\">return</span> width<span style=\"color: #666666;\">*</span>height\n</pre>\n</div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "IdentifyFunctionReturnType": {
          "type": "multiple_choice_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>What type of thing is returned from the function below?</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\">\n<pre style=\"line-height: 125%;\"><span></span><span style=\"color: #008000; font-weight: bold;\">def</span> <span style=\"color: #0000ff;\">is_on_fire</span>() -&gt; bool:\n    <span style=\"color: #008000; font-weight: bold;\">return</span> <span style=\"color: #008000;\">True</span>\n</pre>\n</div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "Boolean",
            "String",
            "Function",
            "None",
            "True",
            "False"
          ]
        },
        "IdentifyPrintFunctionReturn": {
          "type": "multiple_choice_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>What type of thing is returned from the function below?</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #008000; font-weight: bold;\">def</span> <span style=\"color: #0000FF;\">get_name</span>():\n    <span style=\"color: #008000; font-weight: bold;\">print</span>(<span style=\"color: #BA2121;\">\"Harry Potter\"</span>)\n</pre></div>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "Boolean",
            "String",
            "Function",
            "None"
          ]
        },
        "MeaningOfDefKeyword": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">The keyword \"def\" is short for \"define\".<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "ParameterScopeBad": {
          "type": "short_answer_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>What is printed after the code below is executed?</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\">\n<pre style=\"line-height: 125%;\"><span></span><span style=\"color: #008000; font-weight: bold;\">def</span> <span style=\"color: #0000ff;\">change_value</span>(a_variable: int) -&gt; int:\n    a_variable <span style=\"color: #666666;\">=</span> <span style=\"color: #666666;\">5</span>\n    <span style=\"color: #008000; font-weight: bold;\">return</span> a_variable\n\na <span style=\"color: #666666;\">=</span> <span style=\"color: #666666;\">0</span>\nchange_value(a)\n<span style=\"color: #008000; font-weight: bold;\">print</span>(a)\n</pre>\n</div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "ParameterScopeGood": {
          "type": "short_answer_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>What is printed after the code below is executed?</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\">\n<pre style=\"line-height: 125%;\"><span></span><span style=\"color: #008000; font-weight: bold;\">def</span> <span style=\"color: #0000ff;\">add_half</span>(a_variable: int) -&gt; float:\n    a_variable <span style=\"color: #666666;\">=</span> a_variable+<span style=\"color: #666666;\">.5</span>\n    <span style=\"color: #008000; font-weight: bold;\">return</span> a_variable\n\na <span style=\"color: #666666;\">=</span> <span style=\"color: #666666;\">1</span>\na = add_half(a)\n<span style=\"color: #008000; font-weight: bold;\">print</span>(a)\n</pre>\n</div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "PassStatement": {
          "type": "multiple_choice_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">What does the <code>pass</code> statement do?<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "Passes a value to a function",
            "Absolutely nothing",
            "Passes the result of the function back to where it was called."
          ]
        },
        "PrintingReturnsNone": {
          "type": "multiple_choice_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>When the following code is executed, what will be the value of the variable named <code>tripled</code>?</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\">\n<pre style=\"line-height: 125%;\"><span></span><span style=\"color: #008000; font-weight: bold;\">def</span> <span style=\"color: #0000ff;\">triple</span>(a_number: int):\n    <span style=\"color: #008000; font-weight: bold;\">print</span>(a_number <span style=\"color: #666666;\">*</span> <span style=\"color: #666666;\">3</span>)\n\ntripled <span style=\"color: #666666;\">=</span> triple(<span style=\"color: #666666;\">2</span>)\n</pre>\n</div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "3",
            "None",
            "2",
            "6"
          ]
        }
      }
    },
    "checks": {
      "questions": {
        "AdvantagesOfFunctions": {
          "correct": [
            "Make it easy to reuse code",
            "Easier to debug code in a function because it is isolated"
          ]
        },
        "FunctionHeaderColon": {
          "correct_exact": [
            ":",
            "colon",
            "Colon"
          ]
        },
        "FunctionLabeling": {
          "correct": [
            "Definition keyword",
            "Function name",
            "Parameter name",
            "Parameter type",
            "Parentheses",
            "Dash and greater than arrow",
            "Return type",
            "Colon",
            "Body",
            "Return value",
            "Argument"
          ],
          "wrong": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ]
        },
        "FunctionPossibleReturnTypes": {
          "correct": false,
          "wrong": "There are many other things a function can return, such as a Boolean. Functions can even return None (which means nothing)."
        },
        "FunctionRequiresNames": {
          "correct": true,
          "wrong": "No, part of creating a function with the \"def\" keyword is giving it a name."
        },
        "FunctionRequiresParameters": {
          "correct": false,
          "wrong": "In fact, many functions do not have any parameters. They can have none, one, or any number!"
        },
        "FunctionWithoutReturn": {
          "wrong_any": "<p>This one's sneaky! Try running it to see the exact value that is produced. What happens you have a function with a return statement?</p>",
          "correct_exact": [
            "None"
          ]
        },
        "IdentifyFunctionName": {
          "correct_exact": [
            "get_area"
          ]
        },
        "IdentifyFunctionReturnType": {
          "correct": "Boolean",
          "feedback": {}
        },
        "IdentifyPrintFunctionReturn": {
          "correct": "None",
          "feedback": {
            "String": "No! Printing is not the same thing as returning. If you print instead of returning, nothing is returned.",
            "Function": "No, this is a function, but it does not return a function."
          }
        },
        "MeaningOfDefKeyword": {
          "correct": true,
          "wrong": "Nope, it is!"
        },
        "ParameterScopeBad": {
          "wrong_any": "<p>Nope! Try running this code to see what it produces.</p>",
          "correct_exact": [
            "0"
          ]
        },
        "ParameterScopeGood": {
          "wrong_any": "<p>Nope, try running it in Thonny and you'll see the exact answer!</p>",
          "correct_exact": [
            "1.5",
            "1.50"
          ]
        },
        "PassStatement": {
          "correct": "Absolutely nothing",
          "feedback": {
            "Passes a value to a function": "No, despite the name, the \"pass\" statement has nothing to do with passing values - that's what parameters are for.",
            "Passes the result of the function back to where it was called.": "This is actually what a return statement does."
          }
        },
        "PrintingReturnsNone": {
          "correct": "None",
          "feedback": {}
        }
      }
    }
  },
  {
    "body": {
      "questions": {
        "UnitTestAdvantages": {
          "type": "multiple_answers_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Which of the following are advantages of unit tests?<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "They help you find problems early.",
            "They help you facilitate changes down the road.",
            "They make it easier to glue together pieces of code.",
            "They make your code easier to read.",
            "They make your code run faster."
          ]
        },
        "UnitTestBasics": {
          "type": "multiple_choice_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">When someone says, \"My program looks correct, but it says it fails the unit\ntests.\"<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "The program is probably not correct.",
            "The program is probably correct."
          ]
        },
        "UnitTestDefinition": {
          "type": "multiple_choice_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">A unit test is:<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "A collection of known inputs and outputs for a function.",
            "A conditional that determines whether the units (e.g., inches, gallons) are correct.",
            "A function that returns a Boolean value.",
            "A function that consumes a function and returns whether the function is correct."
          ]
        },
        "UnitTestIdentification": {
          "type": "multiple_answers_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Given this function, which of the following are correct unit tests?</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\">\n<pre style=\"line-height: 125%;\"><span></span><span style=\"color: #008000; font-weight: bold;\">from</span> <span style=\"color: #0000ff; font-weight: bold;\">cisc108</span> <span style=\"color: #008000; font-weight: bold;\">import</span> assert_equal<br>\n<span style=\"color: #008000; font-weight: bold;\">def</span> <span style=\"color: #0000ff;\">simple_formula</span>(x: int) -&gt; int:\n    <span style=\"color: #008000; font-weight: bold;\">return</span> <span style=\"color: #666666;\">3</span> <span style=\"color: #666666;\">*</span> x <span style=\"color: #666666;\">+</span> <span style=\"color: #666666;\">4</span>\n</pre>\n</div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "assert_equal(simple_formula(0), 4)",
            "assert_equal(simple_formula(3), 13)",
            "assert_equal(simple_formula(-.5), 2.5)",
            "assert_equal(simple_formula(0), 0)",
            "assert_equal(simple_formula(-1), 2)",
            "assert_equal(simple_formula(0:int)->int, 0: int)"
          ]
        },
        "UnitTestImportStatement": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>The first line of the following code is unnecessary:</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\">\n<pre style=\"line-height: 125%;\"><span></span><span style=\"color: #008000; font-weight: bold;\">from</span> <span style=\"color: #0000ff; font-weight: bold;\">cisc108</span> <span style=\"color: #008000; font-weight: bold;\">import</span> assert_equal\n\n<span style=\"color: #008000; font-weight: bold;\">def</span> <span style=\"color: #0000ff;\">days_to_hours</span>(days:int)-&gt;int:\n    <span style=\"color: #008000; font-weight: bold;\">return</span> <span style=\"color: #666666;\">24</span> <span style=\"color: #666666;\">*</span> days\n\nassert_equal(days_to_hours(<span style=\"color: #666666;\">2</span>), <span style=\"color: #666666;\">24</span>)\n</pre>\n</div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "UnitTestQuantity": {
          "type": "multiple_choice_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">How many unit tests should a program have?<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "As many as it takes",
            "1",
            "5",
            "100",
            "One for each line of code"
          ]
        },
        "UnitTestSuccessRate": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Unit tests are a 100% effective way of determining if your program is correct.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        }
      }
    },
    "checks": {
      "questions": {
        "UnitTestAdvantages": {
          "correct": [
            "They help you find problems early.",
            "They help you facilitate changes down the road.",
            "They make it easier to glue together pieces of code."
          ]
        },
        "UnitTestBasics": {
          "correct": "The program is probably not correct.",
          "feedback": {
            "The program is probably correct.": "Just because your program \"looks correct\" doesn't mean that it is is correct. Unit tests are strong evidence that your program is correct or incorrect. You should typically trust it over your eyes. Now, of course it is possible to write bad unit tests - but at this point, when you are given unit tests, you should trust them 90% of the time."
          }
        },
        "UnitTestDefinition": {
          "correct": "A collection of known inputs and outputs for a function.",
          "feedback": {
            "A conditional that determines whether the units (e.g., inches, gallons) are correct.": "No. The word \"unit\" in the name refers specifically to the size of the program being tested, rather than units of measurement in general.",
            "A function that returns a Boolean value.": "Incorrect. Although functions that return a Boolean value do have a special name (\"predicate functions\").",
            "A function that consumes a function and returns whether the function is correct.": "This is close, but not quite correct. The assert_equal function that we give you is a way to unit test, but it consumes the result of calling a function, not a function. As we will discuss, that is a big difference!"
          }
        },
        "UnitTestIdentification": {
          "correct": [
            "assert_equal(simple_formula(0), 4)",
            "assert_equal(simple_formula(3), 13)",
            "assert_equal(simple_formula(-.5), 2.5)"
          ]
        },
        "UnitTestImportStatement": {
          "correct": false
        },
        "UnitTestQuantity": {
          "correct": "As many as it takes",
          "feedback": {}
        },
        "UnitTestSuccessRate": {
          "correct": false,
          "wrong": "It would be great if this were true, but it's not. Unit tests can be wrong, and they can easily be insufficient. Some programmers think of simple test cases, but never try the hard edge cases. And for really complicated programs, you can't really ever have enough test cases. There's a trade-off in making test cases and writing new code. There are ways to verify the correctness of programs, but they are beyond the boundaries of this course. Look into Formal Methods if you get a chance down the road!"
        }
      }
    }
  },
  {
    "body": {
      "questions": {
        "ChainingCalls": {
          "type": "multiple_choice_question",
          "points": 3.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Function A calls Function B.<br>\nFunction B calls Function C.<br>\nIn order to pass data from A to C, we need to use the parameters of both\nA and B.\nIn order to pass data from C back to A, we need to use <strong>_</strong> in both B and C.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "print calls",
            "input calls",
            "parameters",
            "return statements",
            "pass statements",
            "more variables"
          ]
        },
        "InputDoesWhat": {
          "type": "multiple_answers_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><code>input</code> does which of the following?<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "Returns a string",
            "Writes output to the console",
            "Retrieves input from the user",
            "Consumes arguments"
          ]
        },
        "PrintConsoleReturnInput": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><code>print</code> is used to put data on the console, and <code>return</code> is used to take\ndata from the console.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "PrintDoesWhat": {
          "type": "multiple_answers_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><code>print</code> does which of the following?<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "Returns a string",
            "Writes output to the console",
            "Retrieves input from the user",
            "Consumes arguments"
          ]
        },
        "PrintOneWay": {
          "type": "multiple_choice_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">After data is sent to the console, how do we get it back later in the program?<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "You can't, it's a one-way trip.",
            "Using the input function",
            "Using the unprint statement",
            "Use a return statement"
          ]
        },
        "PrintType": {
          "type": "multiple_choice_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>What type of value does this function return?</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\">\n<pre style=\"line-height: 125%;\"><span></span><span style=\"color: #008000; font-weight: bold;\">def</span> <span style=\"color: #0000ff;\">average_values</span>(num1:int, num2:int, num3:int, num4:int):\n    <span style=\"color: #008000; font-weight: bold;\">print</span>((num1<span style=\"color: #666666;\">+</span>num2<span style=\"color: #666666;\">+</span>num3<span style=\"color: #666666;\">+</span>num4)<span style=\"color: #666666;\">/4</span>)\n</pre>\n</div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "An integer",
            "A float",
            "A string",
            "None"
          ]
        },
        "PrintXorReturn": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">A function can either print or return, but not both.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "ReturnPrintKind": {
          "type": "matching_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Match each to the kind of code construct:<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "Function",
            "keyword"
          ],
          "statements": [
            "input",
            "print",
            "return",
            "pass"
          ]
        },
        "SendingDataIdea": {
          "type": "matching_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Match each to the best definition available:<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "Send data to the console",
            "Send data to a function",
            "Send data from a function",
            "Do nothing",
            "Take data from the console"
          ],
          "statements": [
            "print",
            "Function Call",
            "return",
            "pass",
            "input"
          ]
        },
        "TracingFunctions": {
          "type": "fill_in_multiple_blanks_question",
          "points": 2.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Read the following code, and then fill in the blanks below.</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\">\n<pre style=\"line-height: 125%;\"><span></span><span style=\"color: #666666;\">1|</span> <span style=\"color: #008000; font-weight: bold;\">def</span> <span style=\"color: #0000ff;\">f</span>(x:int) -&gt; int:\n<span style=\"color: #666666;\">2|</span>     x <span style=\"color: #666666;\">=</span> x <span style=\"color: #666666;\">+</span> <span style=\"color: #666666;\">1</span>\n<span style=\"color: #666666;\">3|</span>     <span style=\"color: #008000; font-weight: bold;\">return</span> x\n<span style=\"color: #666666;\">4|</span> val <span style=\"color: #666666;\">=</span> <span style=\"color: #666666;\">0</span>  \n<span style=\"color: #666666;\">5|</span> y <span style=\"color: #666666;\">=</span> f(val)\n<span style=\"color: #666666;\">6|</span> <span style=\"color: #008000; font-weight: bold;\">print</span>(y)\n</pre>\n</div>\n<ul>\n<li>What line is executed first? [first]</li>\n<li>What line is executed second? [second]</li>\n<li>After line 3 is executed, what will be the next line executed? [last]</li>\n</ul><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        }
      }
    },
    "checks": {
      "questions": {
        "ChainingCalls": {
          "correct": "return statements",
          "feedback": {}
        },
        "InputDoesWhat": {
          "correct": [
            "Returns a string",
            "Writes output to the console",
            "Retrieves input from the user",
            "Consumes arguments"
          ]
        },
        "PrintConsoleReturnInput": {
          "correct": false
        },
        "PrintDoesWhat": {
          "correct": [
            "Writes output to the console",
            "Consumes arguments"
          ]
        },
        "PrintOneWay": {
          "correct": "You can't, it's a one-way trip.",
          "feedback": {}
        },
        "PrintType": {
          "correct": "None",
          "feedback": {}
        },
        "PrintXorReturn": {
          "correct": false
        },
        "ReturnPrintKind": {
          "correct": [
            "Function",
            "Function",
            "keyword",
            "keyword"
          ],
          "wrong": [
            "",
            "",
            "",
            ""
          ]
        },
        "SendingDataIdea": {
          "correct": [
            "Send data to the console",
            "Send data to a function",
            "Send data from a function",
            "Do nothing",
            "Take data from the console"
          ],
          "wrong": [
            "",
            "",
            "",
            "",
            ""
          ]
        },
        "TracingFunctions": {
          "wrong_any": "<p>This one may be difficult for you. Some things you might not be thinking\nabout:</p>\n<ul>\n<li>Function definitions are a statement, not unlike an assignment. They define a new function, but do not execute it yet.</li>\n<li>After a function returns, it jumps back to the line it was called from, and then execution will continue as normal.</li>\n</ul>",
          "correct": {
            "first": [
              "1"
            ],
            "second": [
              "4"
            ],
            "last": [
              "6",
              "5"
            ]
          }
        }
      }
    }
  },
  {
    "body": {
      "questions": {
        "ScopeBadGlobals": {
          "type": "multiple_choice_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Why are global variables bad?<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "They make it harder to think about the program.",
            "They \"leak\" memory so that data can escape the program.",
            "Global variables are not bad.",
            "They make the program slower."
          ]
        },
        "ScopeCountUsage": {
          "type": "short_answer_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Consider this program:</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\">\n<pre style=\"line-height: 125%;\"><span></span><span style=\"color: #666666;\">1</span> <span style=\"color: #666666;\">|</span> x <span style=\"color: #666666;\">=</span> <span style=\"color: #666666;\">5</span>\n<span style=\"color: #666666;\">2</span> <span style=\"color: #666666;\">|</span> <span style=\"color: #008000; font-weight: bold;\">def</span> <span style=\"color: #0000ff;\">do_math</span>(x: int) -&gt; int:\n<span style=\"color: #666666;\">3</span> <span style=\"color: #666666;\">|</span>     <span style=\"color: #008000; font-weight: bold;\">return</span> (x <span style=\"color: #666666;\">**</span> x <span style=\"color: #666666;\">+</span> x)\n<span style=\"color: #666666;\">4</span> <span style=\"color: #666666;\">|</span> do_math(x)\n</pre>\n</div>\n<p>How many times is the variable <code>x</code> defined on line 1 used (i.e. either read or written) in this program (including on line 1)?</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "ScopeIdentify": {
          "type": "matching_question",
          "points": 3.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Identify each variable as local to the function <code>calculate_price</code> or global:</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\">\n<pre style=\"line-height: 125%;\"><span></span>coupon <span style=\"color: #666666;\">=</span> <span style=\"color: #666666;\">2.99</span>\n<span style=\"color: #008000; font-weight: bold;\">def</span> <span style=\"color: #0000ff;\">calculate_price</span>(cost: float) -&gt; float:\n    tax <span style=\"color: #666666;\">=</span> <span style=\"color: #666666;\">1.1</span>\n    price <span style=\"color: #666666;\">=</span> cost <span style=\"color: #666666;\">*</span> tax <span style=\"color: #666666;\">-</span> coupon\n    <span style=\"color: #008000; font-weight: bold;\">return</span> price\noriginal_cost <span style=\"color: #666666;\">=</span> <span style=\"color: #666666;\">7.99</span>\nnew_price <span style=\"color: #666666;\">=</span> calculate_price(original_cost)\n</pre>\n</div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "global",
            "local"
          ],
          "statements": [
            "coupon",
            "tax",
            "cost",
            "price",
            "original_cost",
            "new_price"
          ]
        },
        "ScopeLifetime": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">The scope of a variable is how long the variable is \"alive\".<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "ScopeMutation": {
          "type": "short_answer_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Given the following code:</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\">\n<pre style=\"line-height: 125%;\"><span></span>y <span style=\"color: #666666;\">=</span> <span style=\"color: #666666;\">0</span>\n<span style=\"color: #008000; font-weight: bold;\">def</span> <span style=\"color: #0000ff;\">increase</span>(y: int) -&gt; int:\n    y <span style=\"color: #666666;\">=</span> y <span style=\"color: #666666;\">+</span> <span style=\"color: #666666;\">1</span>\n    <span style=\"color: #008000; font-weight: bold;\">return</span> y\nincrease(y)\nincrease(y)\n<span style=\"color: #008000; font-weight: bold;\">print</span>(y)\n</pre>\n</div>\n<p>What will be printed?</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "ScopeQuantity": {
          "type": "multiple_choice_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>How many scopes are there in this program?</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\">\n<pre style=\"line-height: 125%;\"><span></span><span style=\"color: #008000; font-weight: bold;\">def</span> <span style=\"color: #0000ff;\">print_result</span>(value: int):\n    <span style=\"color: #008000; font-weight: bold;\">print</span>(<span style=\"color: #ba2121;\">\"The result is\"</span>, value)\n<span style=\"color: #008000; font-weight: bold;\">def</span> <span style=\"color: #0000ff;\">massage_number</span>(a_number: int) -&gt; int:\n    <span style=\"color: #008000; font-weight: bold;\">return</span> a_number <span style=\"color: #666666;\">*</span> <span style=\"color: #666666;\">5</span> <span style=\"color: #666666;\">+</span> <span style=\"color: #666666;\">3</span>\nstart <span style=\"color: #666666;\">=</span> <span style=\"color: #666666;\">10</span>\nprint_result(massage_number(start))\n</pre>\n</div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "1 global scopes, 2 local scope",
            "1 local scope, 2 global scopes",
            "2 global scopes",
            "6 global scopes",
            "4 local scopes, 2 global scopes",
            "4 local scopes, 1 global scope"
          ]
        },
        "ScopeReturnVariable": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Return can be used to return a variable so that variable is available outside\na local scope.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "ScopeRulesOfThumb": {
          "type": "multiple_answers_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Mark each of the following that are good rules of thumb:<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "Variables inside a local scope should not be used outside that local scope.",
            "Variables outside a local scope should not be used inside that local scope.",
            "Variables inside a local scope should only be used outside that local scope.",
            "Variables outside a local scope should only be used inside that local scope."
          ]
        }
      }
    },
    "checks": {
      "questions": {
        "ScopeBadGlobals": {
          "correct": "They make it harder to think about the program.",
          "feedback": {
            "Global variables are not bad.": "There IS some argument about this, but I think most competent programmers will agree that, typically, global variables are bad and should be avoided. There are some times in real, low-level programming where they are necessary, but usually there is always a better way. For more discussion, check out this page: http://wiki.c2.com/?GlobalVariablesAreBad"
          }
        },
        "ScopeCountUsage": {
          "wrong_any": "Remember: just because two variables have the same name, doesn't mean they are\nthe same. In this case, there is a variable named <code>x</code> in the global scope, and\na different one in the local scope of <code>do_math</code>.",
          "correct_exact": [
            "2"
          ]
        },
        "ScopeIdentify": {
          "correct": [
            "global",
            "local",
            "local",
            "local",
            "global",
            "global"
          ],
          "wrong": [
            "",
            "",
            "",
            "",
            "",
            ""
          ]
        },
        "ScopeLifetime": {
          "correct": true,
          "wrong": "No, this is a good analogy. A variable starts its life when it is first defined, and then it dies when the scope ends. It's a little sad when put in those terms, but that's how it goes."
        },
        "ScopeMutation": {
          "wrong_any": "Just because two variables have the same name does not mean that they are the\nsame variable. A parameter is a separate variable, even if it happens to share\nthe name of a variable in an outer scope.",
          "correct_exact": [
            "0"
          ]
        },
        "ScopeQuantity": {
          "correct": "1 global scopes, 2 local scope",
          "feedback": {}
        },
        "ScopeReturnVariable": {
          "correct": false,
          "wrong": "Return can be used to return a value, but it does not return a variable. Variables die at the end of a function, and you can't stop that."
        },
        "ScopeRulesOfThumb": {
          "correct": [
            "Variables inside a local scope should not be used outside that local scope.",
            "Variables outside a local scope should not be used inside that local scope."
          ]
        }
      }
    }
  },
  {
    "body": {
      "questions": {
        "DocumentationAlwaysComment": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">You should always document every line of a program.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "DocumentationIntepret": {
          "type": "fill_in_multiple_blanks_question",
          "points": 3.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Interpret the documentation below to fill in the blanks:</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\">\n<pre style=\"line-height: 125%;\"><span></span><span style=\"color: #008000; font-weight: bold;\">def</span> <span style=\"color: #0000ff;\">make_time</span>(hour:int, minute:int, second:float)-&gt;str:\n    <span style=\"color: #ba2121; font-style: italic;\">'''</span>\n<span style=\"color: #ba2121; font-style: italic;\">    Creates a string representation of the given hour, minute, and second.</span>\n<span style=\"color: #ba2121; font-style: italic;\">    Note that this takes into account Daylight Savings Time.</span>\n\n<span style=\"color: #ba2121; font-style: italic;\">    Args:</span>\n<span style=\"color: #ba2121; font-style: italic;\">        hour (int): The number of hours past midnight (military time).</span>\n<span style=\"color: #ba2121; font-style: italic;\">        minute (int): The number of minutes past the hour.</span>\n<span style=\"color: #ba2121; font-style: italic;\">        second (float): The number of seconds past the minute, which can be a</span>\n<span style=\"color: #ba2121; font-style: italic;\">                        decimal number (indicating milliseconds).</span>\n<span style=\"color: #ba2121; font-style: italic;\">    Returns:</span>\n<span style=\"color: #ba2121; font-style: italic;\">        str: A string representation of the time (\"hh:mm:ss.sss\") including</span>\n<span style=\"color: #ba2121; font-style: italic;\">             milliseconds.</span>\n<span style=\"color: #ba2121; font-style: italic;\">    '''</span>\n</pre>\n</div>\n<ol>\n<li>This function takes [paramCount] parameters.</li>\n<li>The second parameter is named [secondParameter].</li>\n<li>The third parameter's type is [thirdType].</li>\n<li>The function's return type is [returnType].</li>\n<li>We want to change the type of <code>hour</code> to be text. You need to replace <code>int</code> with [strType].</li>\n<li>We need to add a new parameter named <code>is_dst</code> to test if it is daylights saving time. This will be a boolean value. What is the name and type that will go in the Args of the documentation? Don't include indentation, the colon or a description, just the name and type with parentheses: [newArg]</li>\n</ol><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "DocumentationMultiTripleQuotes": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Multi-line comments in Python are actually just triple-quoted strings.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "DocumentationReasons": {
          "type": "multiple_answers_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Which of the following are reasons for commenting code?<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "To support code sharing",
            "To make it easier to understand our own code, later.",
            "To test if a function has the right inputs for some given outputs",
            "To keep a copy of code that you want to eliminate, in case you need it later."
          ]
        },
        "DocumentationSingleLineIgnored": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Single-line comments are ignored by Python, and so are only for human benefit.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "DocumentationSingleLineSymbol": {
          "type": "short_answer_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Enter the symbol (not its name) used for single-line comments in Python.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        }
      }
    },
    "checks": {
      "questions": {
        "DocumentationAlwaysComment": {
          "correct": false,
          "wrong": "This is a controversial statement. Some people (and some employers, in fact) believe it is good practice to comment every line. Sometimes this makes the program very easy to read. On the other hand, some people believe that commenting every line clutters the program, leads to lazy code writing, and should be avoided. Ultimately, it's hard to say who's right. However, this statement says that you always should - some employers will not want you to comment every line, so we can safely say that you shouldn't comment in those cases. My opinion? Don't comment every line. Comment your functions and the program as a whole. If a line is confusing, first try to make it less confusing - failing that, comment the line."
        },
        "DocumentationIntepret": {
          "correct": {
            "paramCount": [
              "3"
            ],
            "secondParameter": [
              "minute"
            ],
            "thirdType": [
              "Float",
              "float"
            ],
            "returnType": [
              "str",
              "string",
              "Str",
              "String"
            ],
            "strType": [
              "str",
              "string",
              "Str",
              "String"
            ],
            "newArg": [
              "is_dst (bool)",
              "is_dst (boolean)",
              "is_dst (Bool)",
              "is_dst (Boolean)"
            ]
          }
        },
        "DocumentationMultiTripleQuotes": {
          "correct": true
        },
        "DocumentationReasons": {
          "correct": [
            "To support code sharing",
            "To make it easier to understand our own code, later."
          ]
        },
        "DocumentationSingleLineIgnored": {
          "correct": true,
          "wrong": "This is more or less true. There are actually tools that look at single-line comments, but Python throws them out before the program is read. Mult-line comments, on the other hand, are triple-quoted strings so they are not ignored until the program is run."
        },
        "DocumentationSingleLineSymbol": {
          "correct_exact": [
            "#"
          ]
        }
      }
    }
  },
  {
    "body": {
      "questions": {
        "FunctionalDecompositionIsAdHoc": {
          "type": "multiple_choice_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">According to the rules of Functional Decomposition, a function with 10 operations can be split into...<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "We cannot know without looking at the function.",
            "10 equal-sized parts.",
            "2 large parts and 3 small parts.",
            "At most 7 parts, but probably more like 4 parts."
          ]
        },
        "FunctionalDecompositionTradeoffs": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Using Functional Decomposition might require you to write more code and take more time.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "GoodValidPythonNames": {
          "type": "multiple_answers_question",
          "points": 3.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">You have been tasked with creating a function that opens a garage door. Which\nof the following are good, valid names?<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "ogd, a short abbreviation that saves many letters when typing.",
            "open_garage_door, a concise name that captures the idea",
            "open garage door, a concise name that captures the idea",
            "door, a short name that saves many letters while typing",
            "openThePodBayDoorsHal, a fun reference to a classic sci-fi movie"
          ]
        },
        "WhatIsFunctionalDecomposition": {
          "type": "multiple_choice_question",
          "points": 2.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">What is functional decomposition?<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "A programming strategy that breaks up a complex task into multiple function definitions.",
            "An issue where functions decompose over time, and may fail unit tests periodically.",
            "A math term that describes how you can break a function up so that you can recombine it into one single function definition later.",
            "A way to get data out of one function and into another one."
          ]
        }
      }
    },
    "checks": {
      "questions": {
        "FunctionalDecompositionIsAdHoc": {
          "correct": "We cannot know without looking at the function.",
          "feedback": {
            "10 equal-sized parts.": "This is a nonsense answer. Think critically about what this question is asking and what we have told you about Functional Decomposition!",
            "2 large parts and 3 small parts.": "This is a nonsense answer. Think critically about what this question is asking and what we have told you about Functional Decomposition!",
            "At most 7 parts, but probably more like 4 parts.": "This is a nonsense answer. Think critically about what this question is asking and what we have told you about Functional Decomposition!"
          }
        },
        "FunctionalDecompositionTradeoffs": {
          "correct": true,
          "wrong": "No, this can happen in the short term. You almost certainly will write more code, but the hope is that you will have better (more readable) code that is easier to debug (which might save you time in the long run)."
        },
        "GoodValidPythonNames": {
          "correct": [
            "open_garage_door, a concise name that captures the idea"
          ]
        },
        "WhatIsFunctionalDecomposition": {
          "correct": "A programming strategy that breaks up a complex task into multiple function definitions.",
          "feedback": {
            "An issue where functions decompose over time, and may fail unit tests periodically.": "No, this doesn't happen.",
            "A math term that describes how you can break a function up so that you can recombine it into one single function definition later.": "No, this is a programming term (not math), and the goal is not to have a single definition.",
            "A way to get data out of one function and into another one.": "This is the definition of a return statement."
          }
        }
      }
    }
  },
  {
    "body": {
      "questions": {
        "FlowBetween": {
          "type": "multiple_answers_question",
          "points": 3.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Given the program below,</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\">\n<pre style=\"line-height: 125%;\"><span></span>name <span style=\"color: #666666;\">=</span> <span style=\"color: #008000;\">input</span>(<span style=\"color: #ba2121;\">\"What is your name?\"</span>)\n<span style=\"color: #008000; font-weight: bold;\">def</span> <span style=\"color: #0000ff;\">fix_capitalization</span>(name: str) -&gt; str:\n    <span style=\"color: #008000; font-weight: bold;\">return</span> name<span style=\"color: #666666;\">.</span>title()<span style=\"color: #666666;\">.</span>strip()\n<span style=\"color: #008000; font-weight: bold;\">def</span> <span style=\"color: #0000ff;\">print_message</span>(name: str):\n    <span style=\"color: #008000; font-weight: bold;\">print</span>(<span style=\"color: #ba2121;\">\"Hello\"</span>, name, <span style=\"color: #ba2121;\">\"how are you?\"</span>)\n</pre>\n</div>\n<p>Which of the following lines of code will have the data flow correctly through both functions in order to print the message with the fixed capitalization?</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>fix_capitalization(name)\nprint_message(name)\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>print_message(fix_capitalization(name))\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>fix_capitalization()\nprint_message()\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #008000; font-weight: bold;\">print</span>(fix_capitalization(name))\n<span style=\"color: #008000; font-weight: bold;\">print</span>(print_message(name))\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>name <span style=\"color: #666666;\">=</span> fix_capitalization(name)\nprint_message(name)\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "None are necessary, because the variables share the same name."
          ]
        },
        "FlowParameters": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Values enter functions as arguments when the function is called, and then the\narguments' values are assigned to parameters when the function's body begins\nexecuting.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "FlowPrint": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">The <code>print</code> function is necessary to call a function.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "FlowReturn": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">You can use the <code>return</code> statement to return a variable from a function.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "FlowShare": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>The two functions below share a variable named <code>score</code>:</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\">\n<pre style=\"line-height: 125%;\"><span></span><span style=\"color: #008000; font-weight: bold;\">def</span> <span style=\"color: #0000ff;\">increase</span>(score: int) -&gt; int:\n    <span style=\"color: #008000; font-weight: bold;\">return</span> score<span style=\"color: #666666;\">+1</span>\n<span style=\"color: #008000; font-weight: bold;\">def</span> <span style=\"color: #0000ff;\">decrease</span>(score: int) -&gt; int:\n    <span style=\"color: #008000; font-weight: bold;\">return</span> score<span style=\"color: #666666;\">-1</span>\n</pre>\n</div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "FlowSubstitution": {
          "type": "matching_question",
          "points": 2.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Given the program below:</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\">\n<pre style=\"line-height: 125%;\"><span></span><span style=\"color: #008000; font-weight: bold;\">def</span> <span style=\"color: #0000ff;\">x</span>(a:int) -&gt;int:\n    <span style=\"color: #008000; font-weight: bold;\">return</span> <span style=\"color: #666666;\">6+</span>a\n<span style=\"color: #008000; font-weight: bold;\">def</span> <span style=\"color: #0000ff;\">y</span>(a:int) -&gt; int:\n    <span style=\"color: #008000; font-weight: bold;\">return</span> a<span style=\"color: #666666;\">*2</span>\n<span style=\"color: #008000; font-weight: bold;\">def</span> <span style=\"color: #0000ff;\">z</span>(a:int) -&gt; int:\n    <span style=\"color: #008000; font-weight: bold;\">return</span> a<span style=\"color: #666666;\">-1</span>\n<span style=\"color: #666666;\"></span><span style=\"color: #008000; font-weight: bold;\">print</span>(x(y(z(<span style=\"color: #666666;\">3</span>))))<span style=\"color: #666666;\"></span>\n</pre>\n</div>\n<p>Match each blank to the value that will be substituted as the last line is executed:</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "3",
            "2",
            "4",
            "10",
            "None",
            "1",
            "0",
            "5",
            "1",
            "0",
            "5"
          ],
          "statements": [
            "print(x(y(z(___))))",
            "print(x(y(___)))",
            "print(x(___))",
            "print(___)",
            "___"
          ]
        }
      }
    },
    "checks": {
      "questions": {
        "FlowBetween": {
          "correct": [
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>print_message(fix_capitalization(name))\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>name <span style=\"color: #666666;\">=</span> fix_capitalization(name)\nprint_message(name)\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
          ]
        },
        "FlowParameters": {
          "correct": true,
          "wrong": "No, this is a great description of exactly what happens under the hood."
        },
        "FlowPrint": {
          "correct": false,
          "wrong": "No, no, no! The print function is used for putting stuff into the console, and does not have anything to do with calling functions (besides the fact that it is called itself). Go back and review this lesson on Print and Return"
        },
        "FlowReturn": {
          "correct": false,
          "wrong": "False! Functions do not return variables, they return values."
        },
        "FlowShare": {
          "correct": false
        },
        "FlowSubstitution": {
          "correct": [
            "3",
            "2",
            "4",
            "10",
            "None"
          ],
          "wrong": [
            "",
            "",
            "",
            "",
            ""
          ]
        }
      }
    }
  },
  {
    "body": {
      "questions": {
        "CountingBranchesElse": {
          "type": "multiple_choice_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>How many branches does this code have?</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #008000; font-weight: bold;\">if</span> conditional:\n    <span style=\"color: #008000; font-weight: bold;\">print</span>(<span style=\"color: #666666;\">5</span>)  \n<span style=\"color: #008000; font-weight: bold;\">else</span>:\n    <span style=\"color: #008000; font-weight: bold;\">print</span>(<span style=\"color: #666666;\">2</span>)\n</pre></div>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "0",
            "1",
            "2",
            "3"
          ]
        },
        "CountingBranchesNestedIf": {
          "type": "multiple_choice_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>How many branches does this code have?</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #008000; font-weight: bold;\">if</span> conditional:\n    <span style=\"color: #008000; font-weight: bold;\">if</span> second_conditional:  \n        <span style=\"color: #008000; font-weight: bold;\">print</span>(<span style=\"color: #666666;\">5</span>)  \n    <span style=\"color: #008000; font-weight: bold;\">print</span>(<span style=\"color: #666666;\">1</span>)\n<span style=\"color: #008000; font-weight: bold;\">print</span>(<span style=\"color: #666666;\">2</span>)\n</pre></div>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "0",
            "1",
            "2",
            "3"
          ]
        },
        "CountingBranchesNoElse": {
          "type": "multiple_choice_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>How many branches does this code have?</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #008000; font-weight: bold;\">if</span> conditional:\n    <span style=\"color: #008000; font-weight: bold;\">print</span>(<span style=\"color: #666666;\">5</span>)\n<span style=\"color: #008000; font-weight: bold;\">print</span>(<span style=\"color: #666666;\">2</span>)\n</pre></div>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "0",
            "1",
            "2",
            "3"
          ]
        },
        "InsideBlock": {
          "type": "multiple_choice_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>In the following code, the print statement is ____ the IF statement.</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #008000; font-weight: bold;\">if</span> conditional:\n    <span style=\"color: #008000; font-weight: bold;\">print</span>(<span style=\"color: #BA2121;\">\"The conditional was true\"</span>)\n</pre></div>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "Before",
            "Inside",
            "After"
          ]
        },
        "PossiblyUndefined": {
          "type": "multiple_choice_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>What is the value of <code>number_of_users</code> after this program executes?</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\">\n<pre style=\"line-height: 125%;\"><span></span><span style=\"color: #008000; font-weight: bold;\">if</span> <span style=\"color: #008000;\">False</span>:\n    number_of_users <span style=\"color: #666666;\">=</span> <span style=\"color: #666666;\">5</span>\n<span style=\"color: #008000; font-weight: bold;\">print</span>(number_of_users)\n</pre>\n</div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "No value, because an error occurs since the value has not been defined",
            "0, because that is the default value for integer variables",
            "None, because that is the default value for all variables",
            "5, because of the assignment on line 2."
          ]
        },
        "TracingBranching": {
          "type": "fill_in_multiple_blanks_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>Fill out the trace table below by following the execution. If the value is not\nyet defined, place an \"X\".</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #666666;\">1</span> <span style=\"color: #666666;\">|</span> salary <span style=\"color: #666666;\">=</span> <span style=\"color: #666666;\">1000</span>\n<span style=\"color: #666666;\">2</span> <span style=\"color: #666666;\">|</span> <span style=\"color: #008000; font-weight: bold;\">if</span> salary <span style=\"color: #666666;\">&gt;</span> <span style=\"color: #666666;\">100</span>:\n<span style=\"color: #666666;\">3</span> <span style=\"color: #666666;\">|</span>    taxes <span style=\"color: #666666;\">=</span> <span style=\"color: #666666;\">.5</span>\n<span style=\"color: #666666;\">4</span> <span style=\"color: #666666;\">|</span> <span style=\"color: #008000; font-weight: bold;\">else</span>:\n<span style=\"color: #666666;\">5</span> <span style=\"color: #666666;\">|</span>    taxes <span style=\"color: #666666;\">=</span> <span style=\"color: #666666;\">.1</span>\n<span style=\"color: #666666;\">6</span> <span style=\"color: #666666;\">|</span> salary <span style=\"color: #666666;\">=</span> taxes <span style=\"color: #666666;\">*</span> salary\n<span style=\"color: #666666;\">7</span> <span style=\"color: #666666;\">|</span> <span style=\"color: #008000; font-weight: bold;\">if</span> salary <span style=\"color: #666666;\">&gt;</span> <span style=\"color: #666666;\">100</span>:\n<span style=\"color: #666666;\">8</span> <span style=\"color: #666666;\">|</span>    <span style=\"color: #008000; font-weight: bold;\">if</span> salary <span style=\"color: #666666;\">&lt;</span> <span style=\"color: #666666;\">500</span>:\n<span style=\"color: #666666;\">9</span> <span style=\"color: #666666;\">|</span>        taxes <span style=\"color: #666666;\">=</span> <span style=\"color: #666666;\">0</span>\n<span style=\"color: #666666;\">10|</span>    salary <span style=\"color: #666666;\">=</span> taxes <span style=\"color: #666666;\">*</span> salary  \n</pre></div>\n\n\n<table class=\"table table-striped table-bordered\">\n<thead>\n<tr>\n<th>step</th>\n<th>line</th>\n<th>salary</th>\n<th>taxes</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>1</td>\n<td>1000</td>\n<td>X</td>\n</tr>\n<tr>\n<td>2</td>\n<td>2</td>\n<td>1000</td>\n<td>[taxes2]</td>\n</tr>\n<tr>\n<td>3</td>\n<td>[line3]</td>\n<td>1000</td>\n<td>[taxes3]</td>\n</tr>\n<tr>\n<td>4</td>\n<td>6</td>\n<td>[salary4]</td>\n<td>[taxes4]</td>\n</tr>\n<tr>\n<td>5</td>\n<td>[line5]</td>\n<td>[salary5]</td>\n<td>[taxes5]</td>\n</tr>\n<tr>\n<td>6</td>\n<td>[line6]</td>\n<td>[salary6]</td>\n<td>[taxes6]</td>\n</tr>\n<tr>\n<td>7</td>\n<td>[line7]</td>\n<td>[salary7]</td>\n<td>[taxes7]</td>\n</tr>\n</tbody>\n</table>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        }
      }
    },
    "checks": {
      "questions": {
        "CountingBranchesElse": {
          "correct": "2",
          "feedback": {
            "0": "No, an IF statement always adds more branches.",
            "1": "No, keep in mind that the IF and the ELSE each have their own branches.",
            "3": "No, there are only 2 branches here. Although an IF on its own has two branches, the ELSE is replacing one of its two branches, not adding a new one."
          }
        },
        "CountingBranchesNestedIf": {
          "correct": "3",
          "feedback": {
            "0": "No, whenever you have an IF statement, you will have branches.",
            "1": "No, each IF statement causes another branch.",
            "2": "No, each IF statement causes another branch. Since there are two IF statements, there are 3 branches total (the original branch, and the two new branches)."
          }
        },
        "CountingBranchesNoElse": {
          "correct": "2",
          "feedback": {
            "0": "Whenever there is an IF statement, there will always be\u00c2\u00a0branches.",
            "1": "Close, but remember that an IF statement always adds 2 branches!",
            "3": "No, this code only has 2 branches, not 3."
          }
        },
        "InsideBlock": {
          "correct": "Inside",
          "feedback": {
            "Before": "No, if it was before, then it would be written prior to the \"if\" keyword.",
            "After": "No, if it was after, then it would not be indented."
          }
        },
        "PossiblyUndefined": {
          "correct": "No value, because an error occurs since the value has not been defined",
          "feedback": {}
        },
        "TracingBranching": {
          "correct": {
            "line3": [
              "3"
            ],
            "line5": [
              "7"
            ],
            "line6": [
              "8"
            ],
            "line7": [
              "10"
            ],
            "salary4": [
              "500.",
              "500.0"
            ],
            "salary5": [
              "500.",
              "500.0"
            ],
            "salary6": [
              "500.",
              "500.0"
            ],
            "salary7": [
              "250.",
              "250.0"
            ],
            "taxes2": [
              "X",
              "x"
            ],
            "taxes3": [
              ".5",
              "0.5"
            ],
            "taxes4": [
              ".5",
              "0.5"
            ],
            "taxes5": [
              ".5",
              "0.5"
            ],
            "taxes6": [
              ".5",
              "0.5"
            ],
            "taxes7": [
              ".5",
              "0.5"
            ]
          }
        }
      }
    }
  },
  {
    "body": {
      "questions": {
        "ET-1And0": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><code>1 and 0</code><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "ET-1Or0": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><code>1 or 0</code><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "ET-AndFalse": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><code>5 &lt; 4 and 3</code><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "ET-AndIsNotAddition": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><code>-5 and 5</code><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "ET-AndStrings": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><code>\"Hi\" and \"Low\" and \"\"</code><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "ET-AndTrue": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><code>-1 &lt; 4 and 0</code><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "ET-CompareString": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><code>\"1 &gt; 5\"</code><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "ET-EmptyMethod": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><code>\"\".upper()</code><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "ET-EmptyString": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><code>\"\"</code><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "ET-EmptyStringSingle": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><code>''</code><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "ET-False": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><code>False</code><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "ET-FalseString": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><code>\"False\"</code><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "ET-FilledString": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><code>\"Corgis are cute\"</code><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "ET-FullMethod": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><code>\"HI\".lower()</code><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "ET-IndexCharacter": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><code>\"Harry\"[0]</code><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "ET-LargeInt": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><code>134342</code><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "ET-MathDivision": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><code>1/2</code><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "ET-MathInt": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><code>8-4*2</code><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "ET-MathPlus": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><code>1+0</code><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "ET-MediumInt": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><code>144</code><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "ET-MethodItself": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><code>\"\".upper</code><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "ET-NegativeFloat": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><code>-5.0</code><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "ET-NegativeInt": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><code>-12332</code><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "ET-NegativeZero": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><code>-0</code><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "ET-None": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><code>None</code><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "ET-Or1": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><code>1 &gt; 5 or 3</code><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "ET-QuoteString": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><code>'\"'</code><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "ET-SmallFloat": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><code>0.01</code><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "ET-SmallInt": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><code>1</code><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "ET-SpaceString": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><code>\" \"</code><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "ET-SubscriptEmpty": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><code>\"Hermione\"[4:4]</code><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "ET-SubscriptFull": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><code>\"Harry\"[1:-1]</code><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "ET-TrueString": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><code>\"True\"</code><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "ET-ZeroFloat": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><code>0.0</code><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "ET-ZeroInt": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><code>0</code><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "ET-ZeroString": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><code>\"0\"</code><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "EvaluateTruthinessExplanation": {
          "type": "text_only_question",
          "points": 0.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><span>Select each of the following if the expression evaluates to True, according to the rules of Truthiness in Python. The questions might change each time you take the quiz.</span><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        }
      }
    },
    "checks": {
      "questions": {
        "ET-1And0": {
          "correct": false,
          "wrong": "This asks if both 1 and 0 are Truthy values, but 0 is not. Therefore the entire expression is not."
        },
        "ET-1Or0": {
          "correct": true,
          "wrong": "This checks if either 1 or 0 is a Truthy value; the former is, so the entire expression evaluates to True."
        },
        "ET-AndFalse": {
          "correct": false,
          "wrong": "You might think that this is asking \"Is 5 less than 4 and is 5 less than 3\", but it is not asking that! The \"and\" operator does not distribute. Instead, it asks if \"5 is less than 4\" (False) and \"3\" (Truthy). Since the former is False and the latter is True, this evaluates to False."
        },
        "ET-AndIsNotAddition": {
          "correct": true,
          "wrong": "You might have misinterpreted this as being some kind of addition. But all it is asks is if -5 and 5 are both non-zero numbers, and then evaluates the result to be True."
        },
        "ET-AndStrings": {
          "correct": false,
          "wrong": "A somewhat tricky one to read. In order to evaluate to True, each of the expressions being \"and\"ed together must be True or Truthy. Although the first two are, the third one is not. Therefore, the entire expression is False."
        },
        "ET-AndTrue": {
          "correct": false,
          "wrong": "You might have thought this was asking if \"-1 is less than 4 and -1 is less than 0\". But instead, it asked if \"-1 is less than 4\" (True) and if \"0\" (Falsey). Since we're using the \"and\" operator, the result is False."
        },
        "ET-CompareString": {
          "correct": true,
          "wrong": "Regardless of whatever is inside the string, it is a non-empty string. Therefore it is Truthy."
        },
        "ET-EmptyMethod": {
          "correct": false,
          "wrong": "Calling this method on the empty string results in the empty string, so it is Falsey."
        },
        "ET-EmptyString": {
          "correct": false,
          "wrong": "This is an empty string, which is Falsey."
        },
        "ET-EmptyStringSingle": {
          "correct": false,
          "wrong": "This is an empty string."
        },
        "ET-False": {
          "correct": false,
          "wrong": "This is literally False. Can't get much Falser than that."
        },
        "ET-FalseString": {
          "correct": true,
          "wrong": "Even though it says False inside the string, it is a non-empty string, and that's all that matters."
        },
        "ET-FilledString": {
          "correct": true,
          "wrong": "This string is not empty, so it is Truthy."
        },
        "ET-FullMethod": {
          "correct": true,
          "wrong": "Calling this method results in a non-empty string, so it is Truthy."
        },
        "ET-IndexCharacter": {
          "correct": true,
          "wrong": "This indexing results in a single character (that is not empty)."
        },
        "ET-LargeInt": {
          "correct": true
        },
        "ET-MathDivision": {
          "correct": true,
          "wrong": "This results in a float value (.5) that is non-zero, and so is Truthy."
        },
        "ET-MathInt": {
          "correct": false,
          "wrong": "You need to do some math here, but the result is zero, which is a Falsey value."
        },
        "ET-MathPlus": {
          "correct": true,
          "wrong": "These sum up to 1, which is a Truthy value."
        },
        "ET-MediumInt": {
          "correct": true
        },
        "ET-MethodItself": {
          "correct": true,
          "wrong": "Super tricky question! Although this involved an empty string, notice that there are no parentheses. That means the method was never called. Therefore, we are asking Python to evaluate the method rather than the result of calling the method. All methods and functions are Truthy."
        },
        "ET-NegativeFloat": {
          "correct": true,
          "wrong": "As long as the float is non-zero, it is Truthy."
        },
        "ET-NegativeInt": {
          "correct": true,
          "wrong": "Negative numbers are Truthy (because they are non-zero)."
        },
        "ET-NegativeZero": {
          "correct": false,
          "wrong": "Negative zero evaluates to 0, which is a Falsey value."
        },
        "ET-None": {
          "correct": false,
          "wrong": "The special value None is falsey."
        },
        "ET-Or1": {
          "correct": true,
          "wrong": "You might have thought this was True, but it's not. You tried to read it as an english sentence: \"Is 1 greater than 5 or greater than 3?\" But that's not how Python reads it. First, it asks if \"1&gt;5\", which is False. Then it evaluates \"False or 3\". Since 3 is a Truthy value, it is evaluated to True, and we end up with \"False or True\", which is True."
        },
        "ET-QuoteString": {
          "correct": true,
          "wrong": "This string has a single character (a double quote), so it is not empty, and is therefore Truthy."
        },
        "ET-SmallFloat": {
          "correct": true,
          "wrong": "Floats are Truthy when they are non-zero, even if they are close to zero."
        },
        "ET-SmallInt": {
          "correct": true
        },
        "ET-SpaceString": {
          "correct": true,
          "wrong": "This string is not empty: it has a space in it."
        },
        "ET-SubscriptEmpty": {
          "correct": false,
          "wrong": "There are no characters as a result of this subscript (since it's the same start and end), so the result is Falsey."
        },
        "ET-SubscriptFull": {
          "correct": true,
          "wrong": "This subscript results in a non-empty string (\"arr\")."
        },
        "ET-TrueString": {
          "correct": true,
          "wrong": "It's a non-empty string."
        },
        "ET-ZeroFloat": {
          "correct": false,
          "wrong": "Floats are Falsey when they are zero."
        },
        "ET-ZeroInt": {
          "correct": false
        },
        "ET-ZeroString": {
          "correct": true,
          "wrong": "Even though it's filled with a 0, the string is not empty, so it is Truthy."
        },
        "EvaluateTruthinessExplanation": {}
      }
    }
  },
  {
    "body": {
      "questions": {
        "EqualElif": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">The <code>elif</code> is equivalent to an <code>else</code> with an <code>if</code> statement nested inside it.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "EquivalentIfs": {
          "type": "multiple_answers_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Select the two snippets of code that are equivalent.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #008000; font-weight: bold;\">if</span> is_on_fire():\n    <span style=\"color: #008000; font-weight: bold;\">pass</span>\n<span style=\"color: #008000; font-weight: bold;\">if</span> door_is_open():\n    <span style=\"color: #008000; font-weight: bold;\">pass</span>\n<span style=\"color: #008000; font-weight: bold;\">else</span>:\n    <span style=\"color: #008000; font-weight: bold;\">pass</span>\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #008000; font-weight: bold;\">if</span> is_on_fire():\n    <span style=\"color: #008000; font-weight: bold;\">pass</span>\n<span style=\"color: #008000; font-weight: bold;\">elif</span> door_is_open():\n    <span style=\"color: #008000; font-weight: bold;\">pass</span>\n<span style=\"color: #008000; font-weight: bold;\">else</span>:\n    <span style=\"color: #008000; font-weight: bold;\">pass</span>\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #008000; font-weight: bold;\">if</span> is_on_fire():\n    <span style=\"color: #008000; font-weight: bold;\">pass</span>\n<span style=\"color: #008000; font-weight: bold;\">else</span>:\n    <span style=\"color: #008000; font-weight: bold;\">if</span> door_is_open():\n        <span style=\"color: #008000; font-weight: bold;\">pass</span>\n    <span style=\"color: #008000; font-weight: bold;\">else</span>:\n        <span style=\"color: #008000; font-weight: bold;\">pass</span>\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #008000; font-weight: bold;\">if</span> is_on_fire():\n    <span style=\"color: #008000; font-weight: bold;\">pass</span>\n<span style=\"color: #008000; font-weight: bold;\">else</span> <span style=\"color: #008000; font-weight: bold;\">if</span> door_is_open():\n    <span style=\"color: #008000; font-weight: bold;\">pass</span>\n<span style=\"color: #008000; font-weight: bold;\">else</span>:\n    <span style=\"color: #008000; font-weight: bold;\">pass</span>\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
          ]
        },
        "IfInFunctions": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">You can nest <code>if</code> statements inside of other <code>if</code> statements, but not\nfunctions.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "NestedWhitespace": {
          "type": "short_answer_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">If an <code>if</code> statement is nested inside another <code>if</code> statement, how many spaces\nwill the body of the inner <code>if</code> statement have?<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "OptionalElseElif": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Every <code>if</code> statement must be followed by either an <code>else</code> or an <code>elif</code>.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        }
      }
    },
    "checks": {
      "questions": {
        "EqualElif": {
          "correct": true,
          "wrong": "You can check it yourself, but the two pieces of code are actually equivalent!"
        },
        "EquivalentIfs": {
          "correct": [
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #008000; font-weight: bold;\">if</span> is_on_fire():\n    <span style=\"color: #008000; font-weight: bold;\">pass</span>\n<span style=\"color: #008000; font-weight: bold;\">elif</span> door_is_open():\n    <span style=\"color: #008000; font-weight: bold;\">pass</span>\n<span style=\"color: #008000; font-weight: bold;\">else</span>:\n    <span style=\"color: #008000; font-weight: bold;\">pass</span>\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #008000; font-weight: bold;\">if</span> is_on_fire():\n    <span style=\"color: #008000; font-weight: bold;\">pass</span>\n<span style=\"color: #008000; font-weight: bold;\">else</span>:\n    <span style=\"color: #008000; font-weight: bold;\">if</span> door_is_open():\n        <span style=\"color: #008000; font-weight: bold;\">pass</span>\n    <span style=\"color: #008000; font-weight: bold;\">else</span>:\n        <span style=\"color: #008000; font-weight: bold;\">pass</span>\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
          ]
        },
        "IfInFunctions": {
          "correct": false,
          "wrong": "If statements can definitely be nested inside of functions!"
        },
        "NestedWhitespace": {
          "wrong_any": "Remember, each time you indent the <code>if</code> statement, you increase the\nindentation by 4. This problem describes two <code>if</code> statements.",
          "correct_exact": [
            "8"
          ]
        },
        "OptionalElseElif": {
          "correct": false,
          "wrong": "Both else and elif are optional."
        }
      }
    }
  },
  {
    "body": {
      "questions": {
        "LineByLineExecution": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">When a program is being executed, each line of the program is executed at the same time.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "Python Facts": {
          "type": "multiple_answers_question",
          "points": 4.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Which of the following are TRUE statements about Python?<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "Python is a programming language",
            "Python is a program used to execute programs.",
            "Python is an operating system.",
            "Python programs are really just text files."
          ]
        },
        "RunningSynonyms": {
          "type": "multiple_answers_question",
          "points": 2.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Which of the following are equivalent to the phrase \"Ran a program\"?<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "Executed a program",
            "Killed a program",
            "Performed a program",
            "Wrote a program"
          ]
        }
      }
    },
    "checks": {
      "questions": {
        "LineByLineExecution": {
          "correct": false,
          "wrong": "Nope! Programs execute one line at a time, moving from the top of the program downward."
        },
        "Python Facts": {
          "correct": [
            "Python is a programming language",
            "Python is a program used to execute programs.",
            "Python programs are really just text files."
          ]
        },
        "RunningSynonyms": {
          "correct": [
            "Executed a program",
            "Performed a program"
          ]
        }
      }
    }
  },
  {
    "body": {
      "questions": {
        "EvaluateListElementType": {
          "type": "multiple_choice_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>What is the element type of the following literal value?</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\">\n<pre style=\"line-height: 125%;\">[<span style=\"color: #666666;\">4.5</span>, <span style=\"color: #666666;\">3.2</span>, <span style=\"color: #666666;\">7.3</span>]\n</pre>\n</div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "List",
            "Float",
            "Int",
            "String",
            "Boolean",
            "None"
          ]
        },
        "EvaluateListType": {
          "type": "multiple_choice_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>What is the type of the following literal value?</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\">\n<pre style=\"line-height: 125%;\">[<span style=\"color: #666666;\">4.5</span>, <span style=\"color: #666666;\">3.2</span>, <span style=\"color: #666666;\">7.3</span>]\n</pre>\n</div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "List",
            "Float",
            "Int",
            "String",
            "Boolean",
            "None"
          ]
        },
        "EvaluatePrimitiveCompositeType": {
          "type": "matching_question",
          "points": 2.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Identify each of the following as a Primitive Type, Composite Type, or Not a\nType.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "Primitive type",
            "Not a type",
            "Composite type"
          ],
          "statements": [
            "None",
            "True",
            "List",
            "Integer"
          ]
        },
        "ListArrayVector": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Lists can also be correctly referred to as \"Arrays\" or \"Vectors\".<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "ListLiteralOrStringIndexing": {
          "type": "matching_question",
          "points": 2.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Identify each of the following as either \"List literal\" or \"String indexing\".<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "List literal",
            "String indexing"
          ],
          "statements": [
            "[]",
            "\"Hermione\"[1]",
            "[\"Hermione\"]",
            "[1]",
            "\"\"[1]"
          ]
        },
        "ListsAndStringsAreSequences": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Lists and strings are both sequences of data.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "PossibleListElementType": {
          "type": "multiple_answers_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Which of the following are possible element types for a list?</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "Float",
            "String",
            "Boolean",
            "List"
          ]
        }
      }
    },
    "checks": {
      "questions": {
        "EvaluateListElementType": {
          "correct": "Float",
          "feedback": {}
        },
        "EvaluateListType": {
          "correct": "List",
          "feedback": {}
        },
        "EvaluatePrimitiveCompositeType": {
          "correct": [
            "Primitive type",
            "Not a type",
            "Composite type",
            "Primitive type"
          ],
          "wrong": [
            "",
            "",
            "",
            ""
          ]
        },
        "ListArrayVector": {
          "correct": false,
          "wrong": "People often refer to Lists as either \"arrays\" or \"vectors\". Although these three things share many characteristics and are related to each other, they are distinct ideas. Do not fall into the trap of referring to Lists as Arrays or Vectors!"
        },
        "ListLiteralOrStringIndexing": {
          "correct": [
            "List literal",
            "String indexing",
            "List literal",
            "List literal",
            "String indexing"
          ],
          "wrong": [
            "",
            "",
            "",
            "",
            ""
          ]
        },
        "ListsAndStringsAreSequences": {
          "correct": true,
          "wrong": "No, this is accurate! Strings are a sequence of characters, while Lists are a sequence of any kind of data. Confusingly, you can even have Lists of Strings."
        },
        "PossibleListElementType": {
          "correct": [
            "Float",
            "String",
            "Boolean",
            "List"
          ]
        }
      }
    }
  },
  {
    "body": {
      "questions": {
        "InvalidListAddition": {
          "type": "multiple_choice_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>What is the value stored in \"my_var\" after the following code is executed?</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>my_var <span style=\"color: #666666;\">=</span> [<span style=\"color: #666666;\">1</span>,<span style=\"color: #666666;\">2</span>,<span style=\"color: #666666;\">3</span>] <span style=\"color: #666666;\">+</span> <span style=\"color: #666666;\">4</span>\n</pre></div>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "[1, 2, 3, 4]",
            "[1, 2, 3]",
            "10",
            "An error occurs"
          ]
        },
        "InvalidListComparison": {
          "type": "multiple_choice_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>What is the value stored in \"my_var\" after the following code is executed?</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>my_var <span style=\"color: #666666;\">=</span> [<span style=\"color: #666666;\">1</span>,<span style=\"color: #666666;\">2</span>,<span style=\"color: #666666;\">3</span>] <span style=\"color: #666666;\">&lt;</span> <span style=\"color: #666666;\">5</span>\n</pre></div>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "True",
            "False",
            "An error occurs"
          ]
        },
        "ListAppend": {
          "type": "multiple_choice_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>Which of the following demonstrates how to add something to the following list\nvariable?</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>temperatures <span style=\"color: #666666;\">=</span> [<span style=\"color: #666666;\">44</span>, <span style=\"color: #666666;\">36</span>, <span style=\"color: #666666;\">72</span>]\n</pre></div>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "append(temperatures, 42)",
            "append(42) to temperatures",
            "temperatures.append(42)",
            "temperatures = temperatures + 42",
            "temperatures = 42"
          ]
        },
        "ListIndexing": {
          "type": "multiple_choice_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>What is the value stored in \"my_var\" after the following strange code is\nexecuted?</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>my_var <span style=\"color: #666666;\">=</span> [<span style=\"color: #666666;\">1</span>,<span style=\"color: #666666;\">2</span>,<span style=\"color: #666666;\">3</span>][<span style=\"color: #666666;\">1</span>]\n</pre></div>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "[1, 2, 3]",
            "[1]",
            "[2]",
            "1",
            "2",
            "An error occurs"
          ]
        },
        "ListMembership": {
          "type": "multiple_choice_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>What is the value stored in \"my_var\" after the following code is executed?</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>my_var <span style=\"color: #666666;\">=</span> <span style=\"color: #666666;\">5</span> <span style=\"color: #AA22FF; font-weight: bold;\">in</span> [<span style=\"color: #666666;\">1</span>,<span style=\"color: #666666;\">3</span>,<span style=\"color: #666666;\">5</span>]\n</pre></div>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "True",
            "False",
            "An error occurs."
          ]
        }
      }
    },
    "checks": {
      "questions": {
        "InvalidListAddition": {
          "correct": "An error occurs",
          "feedback": {
            "[1, 2, 3, 4]": "Remember, to add things to lists you should use .append()!",
            "[1, 2, 3]": "Remember, to add things to lists you should use .append()!",
            "10": "Remember, to add things to lists you should use .append()!"
          }
        },
        "InvalidListComparison": {
          "correct": "An error occurs",
          "feedback": {
            "True": "You might think that this checks whether each number is less than 5. It does not! It turns out you cannot directly compare a list to a number. Instead, Python will just raise an error.",
            "False": "You might think that this checks whether each number is less than 5. It does not! It turns out you cannot directly compare a list to a number. Instead, Python will just raise an error."
          }
        },
        "ListAppend": {
          "correct": "temperatures.append(42)",
          "feedback": {
            "append(temperatures, 42)": "No, append is a method, not a function. That means you use the period syntax.",
            "append(42) to temperatures": "No, this is not valid Python code.",
            "temperatures = temperatures + 42": "No, you cannot add to a list variable using the \"+\" operator. You must use the append method.",
            "temperatures = 42": "No, this changes temperatures to become a single integer value."
          }
        },
        "ListIndexing": {
          "correct": "2",
          "feedback": {
            "[1, 2, 3]": "Notice the square brackets after the list literal? That means we're subscripting in addition to creating a list.",
            "[1]": "No, the [1] means we are indexing the list we created, not creating a list of just the value 1.",
            "[2]": "No, we are retrieving the second element of the list, but it comes back as the value 2, rather than a list with the value 2.",
            "1": "No, we are retrieving the second element of the list (at position 1), not the first element. Remember, lists begin counting at 0!",
            "An error occurs": "Nope, this is perfectly valid code."
          }
        },
        "ListMembership": {
          "correct": "True",
          "feedback": {}
        }
      }
    }
  },
  {
    "body": {
      "questions": {
        "Colon Usage": {
          "type": "short_answer_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Type the character used at the end of the first line of a <code>for</code> loop.</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "Iteration Variable Type": {
          "type": "multiple_choice_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>What is the type of the Iteration Variable in this code?</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>groceries <span style=\"color: #666666;\">=</span> [<span style=\"color: #BA2121;\">\"Apples\"</span>, <span style=\"color: #BA2121;\">\"Cookies\"</span>, <span style=\"color: #BA2121;\">\"Steaks\"</span>]\n<span style=\"color: #008000; font-weight: bold;\">for</span> grocery <span style=\"color: #AA22FF; font-weight: bold;\">in</span> groceries:\n    <span style=\"color: #008000; font-weight: bold;\">print</span>(grocery)\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "",
            "",
            "",
            ""
          ]
        },
        "Loop Components": {
          "type": "matching_question",
          "points": 3.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Identify each of the components of the <code>for</code> loop:<br>\n<img alt=\"18-1-quiz-loop-parts.png\" src=\"https://i.imgur.com/zQDwPr7.png\"></p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "For keyword",
            "Iteration Variable",
            "In keyword",
            "Body",
            "List Variable"
          ],
          "statements": [
            "1",
            "2",
            "3",
            "4",
            "5",
            "6"
          ]
        },
        "Loop Facts": {
          "type": "multiple_answers_question",
          "points": 5.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Mark each of the following statements about <code>for</code> loops that are true:</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>The body of a <code>for</code> loop will have one statement for each element of the\niteration list.</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p><code>for</code> Loops and Functions are basically the same thing</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>The Iteration Variable will take on each value of the List Variable, one at a time.</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p><code>for</code> Loops always execute the body four times, which is where they get their\nname.</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Like an <code>if</code> statement and a Function Call, the <code>for</code> Loop might cause the\nexecution to not follow the order of lines.</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
          ]
        },
        "Loop Tracing": {
          "type": "fill_in_multiple_blanks_question",
          "points": 11.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Trace the values of this code. If a variable is not yet defined, put an \"X\"\n(without quotes). If you need more space, click the \"Hamburger Button\" in the\ntop left and right corners of Canvas.</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>grades <span style=\"color: #666666;\">=</span> [<span style=\"color: #666666;\">10</span>, <span style=\"color: #666666;\">20</span>]\ntotal <span style=\"color: #666666;\">=</span> <span style=\"color: #666666;\">0</span>\n<span style=\"color: #008000; font-weight: bold;\">for</span> grade <span style=\"color: #AA22FF; font-weight: bold;\">in</span> grades:\n    adjusted <span style=\"color: #666666;\">=</span> grade <span style=\"color: #666666;\">+</span> <span style=\"color: #666666;\">10</span>\n    total <span style=\"color: #666666;\">=</span> total <span style=\"color: #666666;\">+</span> adjusted\n</pre></div>\n\n\n<table class=\"table table-striped table-bordered\">\n<thead>\n<tr>\n<th>step</th>\n<th>line</th>\n<th>grades</th>\n<th>grade</th>\n<th>adjusted</th>\n<th>total</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>1</td>\n<td>[10,20]</td>\n<td>X</td>\n<td>X</td>\n<td>X</td>\n</tr>\n<tr>\n<td>2</td>\n<td>2</td>\n<td>[10,20]</td>\n<td>[grade2]</td>\n<td>X</td>\n<td>[total2]</td>\n</tr>\n<tr>\n<td>3</td>\n<td>3</td>\n<td>[10,20]</td>\n<td>[grade3]</td>\n<td>X</td>\n<td>[total3]</td>\n</tr>\n<tr>\n<td>4</td>\n<td>4</td>\n<td>[10,20]</td>\n<td>[grade4]</td>\n<td>20</td>\n<td>[total4]</td>\n</tr>\n<tr>\n<td>5</td>\n<td>[line5]</td>\n<td>[10,20]</td>\n<td>[grade5]</td>\n<td>[adjusted5]</td>\n<td>[total5]</td>\n</tr>\n<tr>\n<td>6</td>\n<td>[line6]</td>\n<td>[grades6]</td>\n<td>[grade6]</td>\n<td>[adjusted6]</td>\n<td>[total6]</td>\n</tr>\n<tr>\n<td>7</td>\n<td>[line7]</td>\n<td>[10,20]</td>\n<td>[grade7]</td>\n<td>[adjusted7]</td>\n<td>[total7]</td>\n</tr>\n<tr>\n<td>8</td>\n<td>[line8]</td>\n<td>[10,20]</td>\n<td>[grade8]</td>\n<td>[adjusted8]</td>\n<td>50</td>\n</tr>\n</tbody>\n</table><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        }
      }
    },
    "checks": {
      "questions": {
        "Colon Usage": {
          "correct_exact": [
            ":"
          ]
        },
        "Iteration Variable Type": {
          "correct": "",
          "feedback": {}
        },
        "Loop Components": {
          "correct": [
            "For keyword",
            "Iteration Variable",
            "In keyword",
            "Body",
            "List Variable",
            "Iteration Variable"
          ],
          "wrong": [
            "",
            "",
            "",
            "",
            "",
            ""
          ]
        },
        "Loop Facts": {
          "correct": [
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>The Iteration Variable will take on each value of the List Variable, one at a time.</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Like an <code>if</code> statement and a Function Call, the <code>for</code> Loop might cause the\nexecution to not follow the order of lines.</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
          ]
        },
        "Loop Tracing": {
          "wrong_any": "<p>This one is long and tricky! Here are some recommendations:</p>\n<ol>\n<li>Do the calculations on paper or double check each step in Thonny or BlockPy.</li>\n<li>Know what value <code>grade</code> should take on with respect to <code>grades</code>. Which line changes its value?</li>\n<li>If you don't seem to be making progress, don't be afraid to get help!</li>\n</ol>",
          "correct": {
            "line5": [
              "5"
            ],
            "total2": [
              "0"
            ],
            "grade2": [
              "X"
            ],
            "grade3": [
              "10"
            ],
            "total3": [
              "0"
            ],
            "grade4": [
              "10"
            ],
            "total4": [
              "0"
            ],
            "grade5": [
              "10"
            ],
            "adjusted5": [
              "20"
            ],
            "total5": [
              "20"
            ],
            "line6": [
              "3"
            ],
            "grades6": [
              "[10,20]",
              "[10, 20]",
              "[10 , 20]"
            ],
            "grade6": [
              "20"
            ],
            "adjusted6": [
              "20"
            ],
            "total6": [
              "20"
            ],
            "line7": [
              "4"
            ],
            "grade7": [
              "20"
            ],
            "adjusted7": [
              "30"
            ],
            "total7": [
              "20"
            ],
            "line8": [
              "5"
            ],
            "grade8": [
              "20"
            ],
            "adjusted8": [
              "30"
            ]
          }
        }
      }
    }
  },
  {
    "body": {
      "questions": {
        "PredictingBooleanAccumulation": {
          "type": "short_answer_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>What is the value of <code>any</code> after the following Boolean Accumulation is executed?</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>conditions <span style=\"color: #666666;\">=</span> [<span style=\"color: #008000;\">False</span>, <span style=\"color: #008000;\">False</span>, <span style=\"color: #008000;\">True</span>, <span style=\"color: #008000;\">False</span>]\n<span style=\"color: #008000;\">any</span> <span style=\"color: #666666;\">=</span> <span style=\"color: #008000;\">False</span>\n<span style=\"color: #008000; font-weight: bold;\">for</span> condition <span style=\"color: #AA22FF; font-weight: bold;\">in</span> conditions:\n    <span style=\"color: #008000;\">any</span> <span style=\"color: #666666;\">=</span> <span style=\"color: #008000;\">any</span> <span style=\"color: #AA22FF; font-weight: bold;\">or</span> condition\n<span style=\"color: #008000; font-weight: bold;\">print</span>(<span style=\"color: #008000;\">any</span>)\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "PredictingStringAccumulation": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>True or false: the following code prints <code>True</code>. You can see this code execute\n<a href=\"https://goo.gl/axAGX7\">here</a>.</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>names <span style=\"color: #666666;\">=</span> [<span style=\"color: #BA2121;\">\"Alice\"</span>, <span style=\"color: #BA2121;\">\"Bob\"</span>, <span style=\"color: #BA2121;\">\"Carol\"</span>]\njoined_names <span style=\"color: #666666;\">=</span> <span style=\"color: #BA2121;\">\"Alice, Bob, Carol\"</span>\nadded_names <span style=\"color: #666666;\">=</span> <span style=\"color: #BA2121;\">\"\"</span>\n<span style=\"color: #008000; font-weight: bold;\">for</span> name <span style=\"color: #AA22FF; font-weight: bold;\">in</span> names:\n    added_names <span style=\"color: #666666;\">=</span> added_names <span style=\"color: #666666;\">+</span> name <span style=\"color: #666666;\">+</span> <span style=\"color: #BA2121;\">\", \"</span>\n<span style=\"color: #008000; font-weight: bold;\">print</span>(added_names <span style=\"color: #666666;\">==</span> joined_names)\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "StatementInsideBody": {
          "type": "multiple_choice_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Is the <code>print</code> call before, inside, or after the <code>for</code> loop?</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #008000; font-weight: bold;\">for</span> name <span style=\"color: #AA22FF; font-weight: bold;\">in</span> names:\n    <span style=\"color: #008000; font-weight: bold;\">print</span>(name)\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "",
            "",
            ""
          ]
        },
        "SumVariablePrediction": {
          "type": "short_answer_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>After the third iteration of the loop, what is the value of <code>sum</code>?</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #008000;\">sum</span> <span style=\"color: #666666;\">=</span> <span style=\"color: #666666;\">0</span>\nvalues <span style=\"color: #666666;\">=</span> [<span style=\"color: #666666;\">4</span>, <span style=\"color: #666666;\">2</span>, <span style=\"color: #666666;\">6</span>]\n<span style=\"color: #008000; font-weight: bold;\">for</span> value <span style=\"color: #AA22FF; font-weight: bold;\">in</span> values:\n    <span style=\"color: #008000;\">sum</span> <span style=\"color: #666666;\">=</span> <span style=\"color: #008000;\">sum</span> <span style=\"color: #666666;\">+</span> value\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "UnderstandCountUpdate": {
          "type": "multiple_choice_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>What does line 4 do?</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>count <span style=\"color: #666666;\">=</span> <span style=\"color: #666666;\">0</span>\nvalues <span style=\"color: #666666;\">=</span> [<span style=\"color: #666666;\">4</span>,<span style=\"color: #666666;\">5</span>,<span style=\"color: #666666;\">6</span>]\n<span style=\"color: #008000; font-weight: bold;\">for</span> value <span style=\"color: #AA22FF; font-weight: bold;\">in</span> values:\n    count <span style=\"color: #666666;\">=</span> count <span style=\"color: #666666;\">+</span> <span style=\"color: #666666;\">1</span>\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "",
            "",
            "",
            ""
          ]
        }
      }
    },
    "checks": {
      "questions": {
        "PredictingBooleanAccumulation": {
          "wrong_any": "<p>This one is tricky, and it may help to <a href=\"https://goo.gl/5mdrFA\">visualize this code</a>.</p>",
          "correct_exact": [
            "True"
          ]
        },
        "PredictingStringAccumulation": {
          "correct": false
        },
        "StatementInsideBody": {
          "correct": "",
          "feedback": {}
        },
        "SumVariablePrediction": {
          "correct_exact": [
            "12"
          ]
        },
        "UnderstandCountUpdate": {
          "correct": "",
          "feedback": {}
        }
      }
    }
  },
  {
    "body": {
      "questions": {
        "FilterVsMaxPattern": {
          "type": "multiple_choice_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Which pattern does this code most resemble?</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>lowest <span style=\"color: #666666;\">=</span> <span style=\"color: #666666;\">100</span>\ngrades <span style=\"color: #666666;\">=</span> [<span style=\"color: #666666;\">90</span>, <span style=\"color: #666666;\">64</span>, <span style=\"color: #666666;\">72</span>, <span style=\"color: #666666;\">50</span>]\n<span style=\"color: #008000; font-weight: bold;\">for</span> grade <span style=\"color: #AA22FF; font-weight: bold;\">in</span> grades:\n    <span style=\"color: #008000; font-weight: bold;\">if</span> lowest <span style=\"color: #666666;\">&gt;</span> grade:\n        lowest <span style=\"color: #666666;\">=</span> grade\n<span style=\"color: #008000; font-weight: bold;\">print</span>(lowest)\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "",
            "",
            "",
            "",
            ""
          ]
        },
        "FindMissingPrediction": {
          "type": "short_answer_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>After this code is executed, what value is stored in <code>my_value</code>?</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>my_value <span style=\"color: #666666;\">=</span> <span style=\"color: #008000;\">None</span>\nvalues <span style=\"color: #666666;\">=</span> [<span style=\"color: #BA2121;\">\"Hi\"</span>, <span style=\"color: #BA2121;\">\"there\"</span>, <span style=\"color: #BA2121;\">\"my\"</span>, <span style=\"color: #BA2121;\">\"friend\"</span>]\n<span style=\"color: #008000; font-weight: bold;\">for</span> value <span style=\"color: #AA22FF; font-weight: bold;\">in</span> values:\n    <span style=\"color: #008000; font-weight: bold;\">if</span> value<span style=\"color: #666666;\">.</span>upper() <span style=\"color: #666666;\">==</span> <span style=\"color: #BA2121;\">\"MY\"</span>:\n        my_value <span style=\"color: #666666;\">=</span> value\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "IdentifyLoopPatternInFunction": {
          "type": "multiple_choice_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Which pattern does this function implement?</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #008000; font-weight: bold;\">def</span> <span style=\"color: #0000FF;\">get_dog</span>(animals: [<span style=\"color: #008000;\">str</span>]) <span style=\"color: #666666;\">-&gt;</span> <span style=\"color: #008000;\">str</span>:\n    last_dog <span style=\"color: #666666;\">=</span> <span style=\"color: #008000;\">None</span>\n    <span style=\"color: #008000; font-weight: bold;\">for</span> animal <span style=\"color: #AA22FF; font-weight: bold;\">in</span> animals:\n        <span style=\"color: #008000; font-weight: bold;\">if</span> <span style=\"color: #BA2121;\">\"dog\"</span> <span style=\"color: #AA22FF; font-weight: bold;\">in</span> animal<span style=\"color: #666666;\">.</span>lower():\n            last_dog <span style=\"color: #666666;\">=</span> animal\n    <span style=\"color: #008000; font-weight: bold;\">return</span> last_dog\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "",
            "",
            "",
            "",
            ""
          ]
        },
        "MatchLoopPatternDescriptions": {
          "type": "matching_question",
          "points": 3.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Based on the description, determine the most appropriate loop pattern OR\nlist operation.</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "List indexing",
            "List subscripting",
            "Find pattern",
            "Filter pattern",
            "Map pattern",
            "Count pattern",
            "Sum pattern",
            "Take pattern",
            "Min pattern",
            "Max pattern"
          ],
          "statements": [
            "I need to find the last value in a list of numbers.",
            "I need to get the first five elements in a list of numbers.",
            "I need to get the last even number in a list.",
            "I need to find all the even numbers in a list.",
            "I need to triple the value of all the numbers in a list.",
            "I need to determine how many numbers are in a list.",
            "I need to add up all the numbers in a list.",
            "I need to get all the numbers in a list until we encounter zero.",
            "I need the lowest number in a list.",
            "I need the highest number in a list."
          ]
        },
        "TakePatternPrediction": {
          "type": "multiple_choice_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>After this code is executed, what is printed?</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>names <span style=\"color: #666666;\">=</span> [<span style=\"color: #BA2121;\">'Tasha'</span>, <span style=\"color: #BA2121;\">'Bruce'</span>, <span style=\"color: #BA2121;\">'Tony?'</span>, <span style=\"color: #BA2121;\">'Steve?'</span>, <span style=\"color: #BA2121;\">'Bucky'</span>]\nknown_names <span style=\"color: #666666;\">=</span> []\ntaking <span style=\"color: #666666;\">=</span> <span style=\"color: #008000;\">True</span>\n<span style=\"color: #008000; font-weight: bold;\">for</span> name <span style=\"color: #AA22FF; font-weight: bold;\">in</span> names:\n    <span style=\"color: #008000; font-weight: bold;\">if</span> <span style=\"color: #BA2121;\">\"?\"</span> <span style=\"color: #AA22FF; font-weight: bold;\">in</span> name:\n        taking <span style=\"color: #666666;\">=</span> <span style=\"color: #008000;\">False</span>\n    <span style=\"color: #008000; font-weight: bold;\">elif</span> taking:\n        known_names<span style=\"color: #666666;\">.</span>append(name)\n\n<span style=\"color: #008000; font-weight: bold;\">print</span>(known_names)\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "",
            "",
            "",
            "",
            "",
            ""
          ]
        }
      }
    },
    "checks": {
      "questions": {
        "FilterVsMaxPattern": {
          "correct": "",
          "feedback": {}
        },
        "FindMissingPrediction": {
          "correct_exact": [
            "\"my\"",
            "'my'",
            "\"\"\"my\"\"\"",
            "'''my'''"
          ]
        },
        "IdentifyLoopPatternInFunction": {
          "correct": "",
          "feedback": {}
        },
        "MatchLoopPatternDescriptions": {
          "correct": [
            "List indexing",
            "List subscripting",
            "Find pattern",
            "Filter pattern",
            "Map pattern",
            "Count pattern",
            "Sum pattern",
            "Take pattern",
            "Min pattern",
            "Max pattern"
          ],
          "wrong": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ]
        },
        "TakePatternPrediction": {
          "correct": "",
          "feedback": {}
        }
      }
    }
  },
  {
    "body": {
      "questions": {
        "AvoidUnnecessaryLoopInLoopComposition": {
          "type": "multiple_choice_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Given the following code to calculate the average of a list of numbers, identify the correct statement.</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #008000; font-weight: bold;\">def</span> <span style=\"color: #0000FF;\">average</span>(numbers: [<span style=\"color: #008000;\">int</span>]) <span style=\"color: #666666;\">-&gt;</span> <span style=\"color: #008000;\">float</span>:\n    <span style=\"color: #008000; font-weight: bold;\">if</span> <span style=\"color: #AA22FF; font-weight: bold;\">not</span> numbers:\n        <span style=\"color: #008000; font-weight: bold;\">return</span> <span style=\"color: #008000;\">None</span>\n    <span style=\"color: #008000; font-weight: bold;\">for</span> number <span style=\"color: #AA22FF; font-weight: bold;\">in</span> numbers:\n        <span style=\"color: #008000; font-weight: bold;\">return</span> <span style=\"color: #008000;\">sum</span>(numbers) <span style=\"color: #666666;\">/</span> count(numbers)\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "",
            "",
            "",
            "",
            "",
            ""
          ]
        },
        "FlowBetweenLoopFunctions": {
          "type": "multiple_answers_question",
          "points": 3.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Given the program below,</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>messages <span style=\"color: #666666;\">=</span> [<span style=\"color: #BA2121;\">\"go\"</span>, <span style=\"color: #BA2121;\">\"fly\"</span>, <span style=\"color: #BA2121;\">\"a\"</span>, <span style=\"color: #BA2121;\">\"kite\"</span>]\n\n<span style=\"color: #008000; font-weight: bold;\">def</span> <span style=\"color: #0000FF;\">join_strings</span>(messages: [<span style=\"color: #008000;\">str</span>]) <span style=\"color: #666666;\">-&gt;</span> <span style=\"color: #008000;\">str</span>:\n    result <span style=\"color: #666666;\">=</span> <span style=\"color: #BA2121;\">\"\"</span>\n    <span style=\"color: #008000; font-weight: bold;\">for</span> message <span style=\"color: #AA22FF; font-weight: bold;\">in</span> messages:\n        result <span style=\"color: #666666;\">=</span> result <span style=\"color: #666666;\">+</span> <span style=\"color: #BA2121;\">\", \"</span> <span style=\"color: #666666;\">+</span> message\n    <span style=\"color: #008000; font-weight: bold;\">return</span> result\n\n<span style=\"color: #008000; font-weight: bold;\">def</span> <span style=\"color: #0000FF;\">map_title_case</span>(messages: [<span style=\"color: #008000;\">str</span>]) <span style=\"color: #666666;\">-&gt;</span> <span style=\"color: #008000;\">str</span>:\n    result <span style=\"color: #666666;\">=</span> []\n    <span style=\"color: #008000; font-weight: bold;\">for</span> message <span style=\"color: #AA22FF; font-weight: bold;\">in</span> messages:\n        result<span style=\"color: #666666;\">.</span>append(message<span style=\"color: #666666;\">.</span>title())\n    <span style=\"color: #008000; font-weight: bold;\">return</span> result\n\n<span style=\"color: #408080; font-style: italic;\"># ____ &lt;-- What goes here?</span>\n\n<span style=\"color: #008000; font-weight: bold;\">print</span>(messages)\n</pre></div>\n\n\n<p>Which of the following lines of code should be put in the blank to make the\nstrings Title Cased and joined together with commas?</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>map_title_case(messages)\njoin_strings(messages)\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>messages <span style=\"color: #666666;\">=</span> join_strings(map_title_case(messages))\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>map_title_case()\njoin_strings()\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>join_strings(map_title_case(messages))\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #008000; font-weight: bold;\">print</span>(map_title_case(messages))\n<span style=\"color: #008000; font-weight: bold;\">print</span>(join_strings(messages))\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>messages <span style=\"color: #666666;\">=</span> map_title_case(messages)\nmessages <span style=\"color: #666666;\">=</span> join_strings(messages)\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>None are necessary, because the variables share the same name.</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
          ]
        },
        "LoopCompositionAdvantages": {
          "type": "multiple_answers_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>What are advantages and reasons to compose loops?</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Breaking up complex loops into separate functions makes each function easier to debug.</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Smaller loop functions are easier to write because piece is simpler.</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Loop composition makes loops faster because they are broken up.</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Loop composition takes less time because variables can be shared between the functions.</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>We don't need loops at all if we are composing functions.</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
          ]
        },
        "ReorderLoopComposition": {
          "type": "multiple_answers_question",
          "points": 2.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Consider the following functions' names, parameters, and return values.</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #008000; font-weight: bold;\">def</span> <span style=\"color: #0000FF;\">convert_grade</span>(grade: <span style=\"color: #008000;\">int</span>) <span style=\"color: #666666;\">-&gt;</span> <span style=\"color: #008000;\">str</span>:\n    <span style=\"color: #008000; font-weight: bold;\">pass</span>\n\n<span style=\"color: #008000; font-weight: bold;\">def</span> <span style=\"color: #0000FF;\">map_convert_grades</span>(grades: [<span style=\"color: #008000;\">int</span>]) <span style=\"color: #666666;\">-&gt;</span> [<span style=\"color: #008000;\">str</span>]:\n    <span style=\"color: #008000; font-weight: bold;\">pass</span>\n\n<span style=\"color: #008000; font-weight: bold;\">def</span> <span style=\"color: #0000FF;\">remove_failed_grades</span>(text_grades: [<span style=\"color: #008000;\">str</span>]) <span style=\"color: #666666;\">-&gt;</span> [<span style=\"color: #008000;\">str</span>]:\n    <span style=\"color: #008000; font-weight: bold;\">pass</span>\n\n<span style=\"color: #008000; font-weight: bold;\">def</span> <span style=\"color: #0000FF;\">get_passing_text_grades</span>(grades: [<span style=\"color: #008000;\">int</span>]) <span style=\"color: #666666;\">-&gt;</span> [<span style=\"color: #008000;\">str</span>]:\n    <span style=\"color: #008000; font-weight: bold;\">pass</span>\n</pre></div>\n\n\n<p>Which of the following statements would be good compositions?</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>The <code>map_convert_grades</code> function will directly call <code>convert_grade</code></p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>The <code>get_passing_text_grades</code> function will directly call <code>remove_failed_grades</code></p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>The <code>get_passing_text_grades</code> function will directly call <code>map_convert_grades</code></p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>The <code>get_passing_text_grades</code> function will directly call <code>convert_grade</code></p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>The <code>remove_failed_grades</code> function will directly call <code>convert_grade</code></p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>The <code>map_convert_grades</code> function will directly call <code>remove_failed_grades</code></p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>The <code>map_convert_grades</code> function will directly call <code>get_passing_text_grades</code></p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>The <code>convert_grade</code> function will directly call <code>get_passing_text_grades</code></p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
          ]
        }
      }
    },
    "checks": {
      "questions": {
        "AvoidUnnecessaryLoopInLoopComposition": {
          "correct": "",
          "feedback": {}
        },
        "FlowBetweenLoopFunctions": {
          "correct": [
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>messages <span style=\"color: #666666;\">=</span> join_strings(map_title_case(messages))\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>messages <span style=\"color: #666666;\">=</span> map_title_case(messages)\nmessages <span style=\"color: #666666;\">=</span> join_strings(messages)\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
          ]
        },
        "LoopCompositionAdvantages": {
          "correct": [
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Breaking up complex loops into separate functions makes each function easier to debug.</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Smaller loop functions are easier to write because piece is simpler.</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
          ]
        },
        "ReorderLoopComposition": {
          "correct": [
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>The <code>map_convert_grades</code> function will directly call <code>convert_grade</code></p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>The <code>get_passing_text_grades</code> function will directly call <code>remove_failed_grades</code></p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>The <code>get_passing_text_grades</code> function will directly call <code>map_convert_grades</code></p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
          ]
        }
      }
    }
  },
  {
    "body": {
      "questions": {
        "Immutable or Mutable": {
          "type": "matching_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Identify each of the following as mutable or immutable:<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "Immutable",
            "Mutable"
          ],
          "statements": [
            "String",
            "List",
            "Integer",
            "Boolean"
          ]
        },
        "Methods Always Mutate": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>When you call a method, it will always change the value of the variable you\ncalled it on. For example, the following code changes the value of the\nvariable <code>name</code>:</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>name <span style=\"color: #666666;\">=</span> <span style=\"color: #BA2121;\">\"Klaus\"</span>\nname<span style=\"color: #666666;\">.</span>lower()\n</pre></div>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "Result of Mutable Method": {
          "type": "multiple_choice_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>What value will the variable <code>longer_list</code> have after the following code runs?</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>longer_list <span style=\"color: #666666;\">=</span> [<span style=\"color: #666666;\">1</span>,<span style=\"color: #666666;\">2</span>]\nlonger_list <span style=\"color: #666666;\">=</span> longer_list<span style=\"color: #666666;\">.</span>append(<span style=\"color: #666666;\">3</span>)\n</pre></div>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "[1,2,3]",
            "[1,2]",
            "3",
            "None",
            "[3,1,2]"
          ]
        }
      }
    },
    "checks": {
      "questions": {
        "Immutable or Mutable": {
          "correct": [
            "Immutable",
            "Mutable",
            "Immutable",
            "Immutable"
          ],
          "wrong": [
            "Strings are an immutable type - they cannot be changed, you can only create new strings.",
            "Lists are a mutable type. You change their value by using their methods.",
            "Like strings, integers are immutable in Python. There is no way to make an integer value change its value (5 will always be 5) - but you can calculate a new integer and assign it to a variable that previously held a different integer value.",
            "Like strings, booleans are immutable in Python. There is no way to make a boolean value change its value - but you can calculate a new boolean and assign it to a variable that previously held a different boolean value."
          ]
        },
        "Methods Always Mutate": {
          "correct": false,
          "wrong": "Some methods (e.g., append for lists) will change the value of the variable they are called upon. But not all methods do: since string values are immutable, their methods (e.g., lower or strip) will not change the variable's value."
        },
        "Result of Mutable Method": {
          "correct": "None",
          "feedback": {
            "[1,2,3]": "This probably seemed very reasonable, and there's some truth to it. For a short period, the longer_list variable will have this value (directly after the append method call, but before the assignment on line 2). However, the result of the append method is not the list's new value. Consider running the code and seeing what happens.",
            "[1,2]": "This might seem reasonable, but the result of the append method is not the original list's value. Consider running the code and seeing what happens.",
            "3": "Incorrect, the result of the append method is not the value being append. Consider running the code and seeing what happens.",
            "[3,1,2]": "Incorrect. Consider running the code and seeing what happens."
          }
        }
      }
    }
  },
  {
    "body": {
      "questions": {
        "Lists vs. Strings": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Strings are sequences of characters, and lists are sequences of any type.</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "Split Element Type": {
          "type": "multiple_choice_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>What is the element type of the result of the following expression?</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #BA2121;\">\"1,2,3,4\"</span><span style=\"color: #666666;\">.</span>split(<span style=\"color: #BA2121;\">\",\"</span>)\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "",
            "",
            "",
            ""
          ]
        },
        "Split Type": {
          "type": "multiple_choice_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>What is the type of the result of the following expression?</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #BA2121;\">\"1,2,3,4\"</span><span style=\"color: #666666;\">.</span>split(<span style=\"color: #BA2121;\">\",\"</span>)\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "",
            "",
            "",
            ""
          ]
        }
      }
    },
    "checks": {
      "questions": {
        "Lists vs. Strings": {
          "correct": true
        },
        "Split Element Type": {
          "correct": "",
          "feedback": {}
        },
        "Split Type": {
          "correct": "",
          "feedback": {}
        }
      }
    }
  },
  {
    "body": {
      "questions": {
        "Always Avoid Indexing": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">You should ALWAYS avoid using index iteration to process a list. There are no\nadvantages to it.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "Best Way to Iterate": {
          "type": "multiple_choice_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Which of the following is the easiest way to print each element of a list in\nPython?<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "for i in range(len(a_list)): print(a_list[i])",
            "for element in a_list: print(element)",
            "i = 0 for element in a_list: print(a_list[i]) i += 1"
          ]
        },
        "Enumerate Indexes": {
          "type": "short_answer_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>The <code>enumerate</code> function consumes a list and returns each element paired with\nits index. When the following code is run, what is printed on the first line?</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>values<span style=\"color: #666666;\">=</span>[<span style=\"color: #666666;\">1</span>,<span style=\"color: #666666;\">2</span>,<span style=\"color: #666666;\">3</span>]\n<span style=\"color: #008000; font-weight: bold;\">for</span> i, value <span style=\"color: #AA22FF; font-weight: bold;\">in</span> <span style=\"color: #008000;\">enumerate</span>(values):\n    <span style=\"color: #008000; font-weight: bold;\">print</span>(i, value)\n</pre></div>\n\n\n<p>If you are not sure, consider trying the code out - you don't have to guess!</p>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "Reasons for Avoiding Indexes": {
          "type": "multiple_answers_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Which of the following are reasons to avoid using indexes to process a list?<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "Index iteration requires extra operations and function calls",
            "Index iteration is a more complex form of iteration to reason about",
            "Index iteration can sometimes skip values in a list.",
            "Index iteration requires a second loop."
          ]
        }
      }
    },
    "checks": {
      "questions": {
        "Always Avoid Indexing": {
          "correct": false,
          "wrong": "Index iteration does have its advantages - like anything in programming, the time and place is important. For instance, index iteration allows us to change the values of a list: scores = [10,20,30] for i in range(len(scores)): scores[i] *= 2  This could be accomplished by creating a new list instead, but what if you had a list that was MASSIVE? This approach doesn't require a duplicate list, so it can be memory efficient. However, knowing when to use Index Iteration comes with experience - it should not be your first approach."
        },
        "Best Way to Iterate": {
          "correct": "for element in a_list: print(element)",
          "feedback": {
            "for i in range(len(a_list)): print(a_list[i])": "This is the preferred way to do Index Iteration in Python, but not the easiest way to print each element of a list.",
            "i = 0 for element in a_list: print(a_list[i]) i += 1": "This is very incorrect, and a total abuse of the FOR loop."
          }
        },
        "Enumerate Indexes": {
          "correct_exact": [
            "0 1",
            "0 1\\n"
          ]
        },
        "Reasons for Avoiding Indexes": {
          "correct": [
            "Index iteration requires extra operations and function calls",
            "Index iteration is a more complex form of iteration to reason about"
          ]
        }
      }
    }
  },
  {
    "body": {
      "questions": {
        "DefinitionSequence": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Dictionaries are a sequence of key-value pairs.</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "DictionariesParts": {
          "type": "matching_question",
          "points": 4.5,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Identify each of the components of the Dictionary literal below:</p>\n<p><img alt=\"20-dictionaries-\nquizGraphics.png\" src=\"https://i.imgur.com/TGRB7k7.png\"></p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "Curly Brace",
            "Key",
            "Colon",
            "Value",
            "Comma"
          ],
          "statements": [
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9"
          ]
        },
        "DictionarySynonyms": {
          "type": "multiple_answers_question",
          "points": 2.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Select each synonym for a Python \"dictionary\":</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Map</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Table</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>List</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Thesaurus</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
          ]
        },
        "DuplicateKeys": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Dictionaries are useful because you can have duplicate keys.</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "EmptyDictionary": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Dictionaries will always have at least one key and one value.</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "KeyValueTypes": {
          "type": "matching_question",
          "points": 2.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Given this dictionary...</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>animal <span style=\"color: #666666;\">=</span> {<span style=\"color: #BA2121;\">\"Name\"</span>: <span style=\"color: #BA2121;\">\"Klaus\"</span>, <span style=\"color: #BA2121;\">\"Age\"</span>: <span style=\"color: #666666;\">17</span>, <span style=\"color: #BA2121;\">\"Small?\"</span>: <span style=\"color: #008000;\">True</span>}\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "String",
            "Integer"
          ],
          "statements": [
            "What is the type of the value associated with the key \"Name\"?",
            "What is the type of the key \"Name\"?",
            "What is the type of the key \"Small?\"?",
            "What is the type of the value associated with the key \"Age\"?"
          ]
        },
        "LookupCalculation": {
          "type": "fill_in_multiple_blanks_question",
          "points": 1.5,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Given the following dictionary,</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>scores <span style=\"color: #666666;\">=</span> { <span style=\"color: #666666;\">5</span>: <span style=\"color: #666666;\">10</span>,\n           <span style=\"color: #666666;\">10</span>: <span style=\"color: #666666;\">5</span> }\n</pre></div>\n\n\n<p>What is the value of the following expressions?</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #666666;\">&gt;&gt;&gt;</span> scores[<span style=\"color: #666666;\">5</span>]\n</pre></div>\n\n\n<p>[regular]</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #666666;\">&gt;&gt;&gt;</span> scores[<span style=\"color: #666666;\">5+5</span>]\n</pre></div>\n\n\n<p>[inner]</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #666666;\">&gt;&gt;&gt;</span> scores[<span style=\"color: #666666;\">5</span>]<span style=\"color: #666666;\">+5</span>\n</pre></div>\n\n\n<p>[outer]</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "LookupSyntax": {
          "type": "multiple_choice_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Which of the following demonstrates proper syntax for accessing a dictionary's\nvalue?</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "",
            "",
            "",
            ""
          ]
        },
        "StringKeys": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Dictionary keys are always strings.</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "ValidLookups": {
          "type": "multiple_answers_question",
          "points": 5.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Given the following code,</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #008000;\">dict</span> <span style=\"color: #666666;\">=</span> {<span style=\"color: #BA2121;\">\"Key\"</span>: <span style=\"color: #BA2121;\">\"Value\"</span>,\n        <span style=\"color: #666666;\">5</span>: <span style=\"color: #666666;\">10</span>,\n        <span style=\"color: #008000;\">True</span>: <span style=\"color: #BA2121;\">\"Hello\"</span>}\nkey <span style=\"color: #666666;\">=</span> <span style=\"color: #666666;\">5</span>\n</pre></div>\n\n\n<p>Which of the following are valid expressions?</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #008000;\">dict</span>[<span style=\"color: #666666;\">5</span>]\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #008000;\">dict</span>[<span style=\"color: #666666;\">10</span>]\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #008000;\">dict</span>[<span style=\"color: #008000;\">False</span>]\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #008000;\">dict</span>[<span style=\"color: #008000;\">True</span>]\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #008000;\">dict</span>[<span style=\"color: #BA2121;\">\"Value\"</span>]\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #008000;\">dict</span>[Key]\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #008000;\">dict</span>[<span style=\"color: #BA2121;\">\"Key\"</span>]\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #008000;\">dict</span>[key]\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #008000;\">dict</span>[key<span style=\"color: #666666;\">+5</span>]\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #008000;\">dict</span>[<span style=\"color: #BA2121;\">\"He\"</span><span style=\"color: #666666;\">+</span><span style=\"color: #BA2121;\">\"llo\"</span>]\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
          ]
        }
      }
    },
    "checks": {
      "questions": {
        "DefinitionSequence": {
          "correct": true
        },
        "DictionariesParts": {
          "correct": [
            "Curly Brace",
            "Key",
            "Colon",
            "Value",
            "Comma",
            "Key",
            "Colon",
            "Value",
            "Curly Brace"
          ],
          "wrong": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ]
        },
        "DictionarySynonyms": {
          "correct": [
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Map</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Table</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
          ]
        },
        "DuplicateKeys": {
          "correct": false
        },
        "EmptyDictionary": {
          "correct": false
        },
        "KeyValueTypes": {
          "correct": [
            "String",
            "String",
            "String",
            "Integer"
          ],
          "wrong": [
            "",
            "",
            "",
            ""
          ]
        },
        "LookupCalculation": {
          "correct": {
            "regular": [
              "10"
            ],
            "inner": [
              "5"
            ],
            "outer": [
              "15"
            ]
          }
        },
        "LookupSyntax": {
          "correct": "",
          "feedback": {}
        },
        "StringKeys": {
          "correct": false
        },
        "ValidLookups": {
          "correct": [
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #008000;\">dict</span>[<span style=\"color: #666666;\">5</span>]\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #008000;\">dict</span>[<span style=\"color: #008000;\">True</span>]\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #008000;\">dict</span>[<span style=\"color: #BA2121;\">\"Key\"</span>]\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #008000;\">dict</span>[key]\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
          ]
        }
      }
    }
  },
  {
    "body": {
      "questions": {
        "StateAttitudeDifference": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Your attitude has no impact on your ability to learn to program.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "StateEarlyOftenDifference": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Getting started on an assignment immediately and working in frequent short\nbursts is a good way to succeed.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "StateGettingHelpDifference": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Avoid getting help for as long as possible, so that you don't bother anyone.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "StateGritDifference": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">If at first you don't succeed, then you should give up.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "StateIsMasteryCourse": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">You only get one attempt at most assignments in this course.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "StateLearningToProgramIsHard": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Learning to program can be hard for some people. Feeling frustrated is okay.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "StateStartingEarlyDifference": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">If you're smart, it doesn't matter when you get started on an assignment -\nyou'll probably do about as well as you would if you started earlier.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        }
      }
    },
    "checks": {
      "questions": {
        "StateAttitudeDifference": {
          "correct": false,
          "wrong": "So far, researchers have had a hard time identifying what factors have the biggest impact on students learning to program. There are many factors, and they all interact with each other[1]. However, it has become clear that one of the biggest factors is students' expectation for success, and their attitude towards programming. Try to stay positive! [1] Nathan Rountree, Janet Rountree, Anthony Robins, and Robert Hannah. 2004. Interacting factors that predict success and failure in a CS1 course. SIGCSE Bull. 36, 4 (June 2004), 101-104. DOI: http://dx.doi.org/10.1145/1041624.1041669"
        },
        "StateEarlyOftenDifference": {
          "correct": true,
          "wrong": "It's okay to also work in longer intervals too, but working early, often, and avoiding exhaustion is a great recipe for success!"
        },
        "StateGettingHelpDifference": {
          "correct": false,
          "wrong": "There's nothing wrong with giving a problem an earnest solo effort. However, when you need help, get help! There are many resources out there to get help from, so you should never let that be a reason to not get the help you need."
        },
        "StateGritDifference": {
          "correct": false,
          "wrong": "Oh come on, when is that ever the advice they give you? Give it a few honest attempts before you make up your mind. Some people learn more slowly than others, but that doesn't mean they can't learn it!"
        },
        "StateIsMasteryCourse": {
          "correct": false,
          "wrong": "This course is based on a \"Mastery Learning Model\". That means you should keep trying assignments until you get the whole thing correct. The only thing you cannot attempt multiple times is the Final Exam and the Final Project. And even for those, you will have multiple activites to prepare you (such as practice exams and a mini-project)."
        },
        "StateLearningToProgramIsHard": {
          "correct": true,
          "wrong": "No, this is absolutely true! Some people struggle when learning how to program, including people who eventually become very successful programmers. There is nothing wrong with struggling; if everything you are seeing is easy, it probably means you are not learning anything new or interesting."
        },
        "StateStartingEarlyDifference": {
          "correct": false,
          "wrong": "Students who get started earlier do better. This is a well-studied phenomenon, and is true no matter how smart you are. Having more time to work on an assignment means more time to think about it, more time to get any help needed, and more time to iterate on your solution."
        }
      }
    }
  },
  {
    "body": {
      "questions": {
        "DictionaryUpdate": {
          "type": "multiple_choice_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>What will be printed after this code is run?</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>points <span style=\"color: #666666;\">=</span> {<span style=\"color: #BA2121;\">\"Virginia Tech\"</span>: <span style=\"color: #666666;\">5</span>}\npoints[<span style=\"color: #BA2121;\">\"Virginia Tech\"</span>] <span style=\"color: #666666;\">=</span> <span style=\"color: #666666;\">3</span>\n<span style=\"color: #008000; font-weight: bold;\">print</span>(points[<span style=\"color: #BA2121;\">\"Virginia Tech\"</span>])\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "",
            "",
            "",
            ""
          ]
        },
        "ModifyDictionaryAlias": {
          "type": "short_answer_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>What value is stored in <code>result</code> after this code is run?</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>puppy <span style=\"color: #666666;\">=</span> {<span style=\"color: #BA2121;\">'age'</span>: <span style=\"color: #666666;\">2</span>, <span style=\"color: #BA2121;\">'name'</span>: <span style=\"color: #BA2121;\">'Ada Bart'</span>}\nmy_dog <span style=\"color: #666666;\">=</span> puppy\nmy_dog[<span style=\"color: #BA2121;\">'age'</span>] <span style=\"color: #666666;\">=</span> my_dog[<span style=\"color: #BA2121;\">'age'</span>] <span style=\"color: #666666;\">+1</span>\nresult <span style=\"color: #666666;\">=</span> puppy[<span style=\"color: #BA2121;\">'age'</span>]\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "ModifyDictionaryDistinct": {
          "type": "short_answer_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>What value is stored in <code>result</code> after this code is run?</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\">\n<pre style=\"line-height: 125%;\">puppy <span style=\"color: #666666;\">=</span> {<span style=\"color: #ba2121;\">'age'</span>: <span style=\"color: #666666;\">4</span>, <span style=\"color: #ba2121;\">'name'</span>: <span style=\"color: #ba2121;\">'Ada Bart'</span>}\ntwin <span style=\"color: #666666;\">=</span> {<span style=\"color: #ba2121;\">'age'</span>: <span style=\"color: #666666;\">4</span>, <span style=\"color: #ba2121;\">'name'</span>: <span style=\"color: #ba2121;\">'Ada Bart'</span>}\npuppy[<span style=\"color: #ba2121;\">'age'</span>] <span style=\"color: #666666;\">=</span> puppy[<span style=\"color: #ba2121;\">'age'</span>] <span style=\"color: #666666;\">+</span> <span style=\"color: #666666;\">1</span>\nresult <span style=\"color: #666666;\">=</span> twin[<span style=\"color: #ba2121;\">'age'</span>]\n</pre>\n</div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "ModifyDictionaryInFunction": {
          "type": "short_answer_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>What value is stored in <code>result</code> after this code is run?</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\">\n<pre style=\"line-height: 125%;\"><span style=\"color: #008000; font-weight: bold;\">def</span> <span style=\"color: #0000ff;\">increase_age</span>(somebody):\n    somebody[<span style=\"color: #ba2121;\">'age'</span>] <span style=\"color: #666666;\">=</span> somebody[<span style=\"color: #ba2121;\">'age'</span>] <span style=\"color: #666666;\">+</span> <span style=\"color: #666666;\">1</span>\npuppy <span style=\"color: #666666;\">=</span> {<span style=\"color: #ba2121;\">'age'</span>: <span style=\"color: #666666;\">0</span>, <span style=\"color: #ba2121;\">'name'</span>: <span style=\"color: #ba2121;\">'Ada Bart'</span>}\nincrease_age(puppy)\nresult <span style=\"color: #666666;\">=</span> puppy[<span style=\"color: #ba2121;\">'age'</span>]\n</pre>\n</div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "Python Dictionary Membership Test": {
          "type": "multiple_answers_question",
          "points": 2.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Assume the following line of code is executed.</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\">\n<pre style=\"line-height: 125%;\">house <span style=\"color: #666666;\">=</span> {<span style=\"color: #ba2121;\">'Address'</span>: <span style=\"color: #ba2121;\">'123 Mulberry Lane'</span>,\n         <span style=\"color: #ba2121;\">'Floors'</span>: <span style=\"color: #666666;\">3</span>, <span style=\"color: #ba2121;\">'Occupants'</span>: <span style=\"color: #666666;\">3</span>,\n         <span style=\"color: #ba2121;\">'Roof is good?'</span>: <span style=\"color: #008000;\">True</span>, <span style=\"color: #ba2121;\">'Has fireplace?'</span>: <span style=\"color: #008000;\">False</span>}\n</pre>\n</div>\n<p>Mark all of the statements that are true.</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>The expression <code>\"Address\" in house</code> will produce a boolean indicating whether that key is the dictionary.</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>The expression <code>3 in house</code> will produce an integer indicating how many times the value <code>3</code> is in the dictionary.</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Before you can use the lookup expression <code>house[\"Has fireplace?\"]</code>, you must have an <code>if</code> statement that checks if <code>\"Has fireplace?\" in house</code> is True.</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Iterating through the items of a dictionary requires two iteration variables: the first one represents each key, and the second one represents each value.</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
          ]
        }
      }
    },
    "checks": {
      "questions": {
        "DictionaryUpdate": {
          "correct": "",
          "feedback": {}
        },
        "ModifyDictionaryAlias": {
          "correct_exact": [
            "3"
          ]
        },
        "ModifyDictionaryDistinct": {
          "correct_exact": [
            "4"
          ]
        },
        "ModifyDictionaryInFunction": {
          "correct_exact": [
            "1"
          ]
        },
        "Python Dictionary Membership Test": {
          "correct": [
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>The expression <code>\"Address\" in house</code> will produce a boolean indicating whether that key is the dictionary.</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Iterating through the items of a dictionary requires two iteration variables: the first one represents each key, and the second one represents each value.</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
          ]
        }
      }
    }
  },
  {
    "body": {
      "questions": {
        "DefineRecordTerms": {
          "type": "matching_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Match each term to the best possible definition.</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "Dictionary",
            "Record type",
            "Record instance"
          ],
          "statements": [
            "A type that maps keys to values.",
            "A type that maps specific string keys to the types of their values.",
            "A value that must have specific keys mapped to values with specific types."
          ]
        },
        "DetermineRecordGetterReturnValue": {
          "type": "multiple_answers_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>In the code below, what type should go as the return value?</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\">\n<pre style=\"line-height: 125%;\">Painting <span style=\"color: #666666;\">=</span> {<span style=\"color: #ba2121;\">\"Title\"</span>: <span style=\"color: #008000;\">str</span>, <span style=\"color: #ba2121;\">\"Width\"</span>: <span style=\"color: #008000;\">int</span>, <span style=\"color: #ba2121;\">\"Height\"</span>: <span style=\"color: #008000;\">int</span>}\n\n<span style=\"color: #008000; font-weight: bold;\">def</span> <span style=\"color: #0000ff;\">calculate_area</span>(a_painting: Painting) <span style=\"color: #666666;\">-&gt;</span> <span style=\"color: #008000;\">___</span>:\n    <span style=\"color: #008000; font-weight: bold;\">return</span> a_painting[<span style=\"color: #ba2121;\">'Width'</span>] <span style=\"color: #666666;\">*</span> a_painting[<span style=\"color: #ba2121;\">'Height'</span>]\n</pre>\n</div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>int</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>str</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>dict</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "Painting",
            "a_painting",
            "key"
          ]
        },
        "IdentifyRecordConstructor": {
          "type": "multiple_answers_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Given the code below, determine the best choice for the return value type.</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\">\n<pre style=\"line-height: 125%;\">Painting <span style=\"color: #666666;\">=</span> {<span style=\"color: #ba2121;\">\"Title\"</span>: <span style=\"color: #008000;\">str</span>, <span style=\"color: #ba2121;\">\"Width\"</span>: <span style=\"color: #008000;\">int</span>, <span style=\"color: #ba2121;\">\"Height\"</span>: <span style=\"color: #008000;\">int</span>}\n\n<span style=\"color: #008000; font-weight: bold;\">def</span> <span style=\"color: #0000ff;\">make_blank_canvas</span>(width: <span style=\"color: #008000;\">int</span>, height: <span style=\"color: #008000;\">int</span>) <span style=\"color: #666666;\">-&gt;</span> ___:\n    <span style=\"color: #008000; font-weight: bold;\">return</span> {\n        <span style=\"color: #ba2121;\">\"Title\"</span>: <span style=\"color: #ba2121;\">\"A Blank Canvas\"</span>,\n        <span style=\"color: #ba2121;\">\"Width\"</span>: width,\n        <span style=\"color: #ba2121;\">\"Height\"</span>: height\n    }\n</pre>\n</div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>int</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>dict</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Painting</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "str",
            "blank_canvas"
          ]
        },
        "IdentifyRecordConstructorClone": {
          "type": "multiple_answers_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Given the code below, determine the best choice for the return type.</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\">\n<pre style=\"line-height: 125%;\">Painting <span style=\"color: #666666;\">=</span> {<span style=\"color: #ba2121;\">\"Title\"</span>: <span style=\"color: #008000;\">str</span>, <span style=\"color: #ba2121;\">\"Width\"</span>: <span style=\"color: #008000;\">int</span>, <span style=\"color: #ba2121;\">\"Height\"</span>: <span style=\"color: #008000;\">int</span>}\n\n<span style=\"color: #008000; font-weight: bold;\">def</span> <span style=\"color: #0000ff;\">make_smaller_version</span>(a_painting: Painting) <span style=\"color: #666666;\">-&gt;</span> ___:\n    <span style=\"color: #008000; font-weight: bold;\">return</span> {\n        <span style=\"color: #ba2121;\">'Title'</span>: a_painting[<span style=\"color: #ba2121;\">'Title'</span>],\n        <span style=\"color: #ba2121;\">'Width'</span>: a_painting[<span style=\"color: #ba2121;\">'Width'</span>]<span style=\"color: #666666;\">-5</span>,\n        <span style=\"color: #ba2121;\">'Height'</span>: a_painting[<span style=\"color: #ba2121;\">'Height'</span>]<span style=\"color: #666666;\">-5</span>\n    }\n</pre>\n</div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>int</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>dict</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Painting</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "str",
            "a_painting"
          ]
        },
        "IdentifyRecordSetter": {
          "type": "multiple_answers_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Identify the return type of the follow function.</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\">\n<pre style=\"line-height: 125%;\">Painting <span style=\"color: #666666;\">=</span> {<span style=\"color: #ba2121;\">\"Title\"</span>: <span style=\"color: #008000;\">str</span>, <span style=\"color: #ba2121;\">\"Width\"</span>: <span style=\"color: #008000;\">int</span>, <span style=\"color: #ba2121;\">\"Height\"</span>: <span style=\"color: #008000;\">int</span>}<br>\n<span style=\"color: #008000; font-weight: bold;\">def</span> <span style=\"color: #0000ff;\">get_title</span>(a_painting: Painting) -&gt; ___:\n    return a_painting[<span style=\"color: #ba2121;\">'Title'</span>]\n</pre>\n</div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>int</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>str</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>dict</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "Painting",
            "a_painting"
          ]
        },
        "IdentifyValidRecordTypes": {
          "type": "multiple_choice_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Which of the following is the best dictionary record type for a books?</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "",
            "",
            "",
            "",
            ""
          ]
        },
        "IdentifyValidRecordValues": {
          "type": "multiple_choice_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Based on the previous, which of the following is a valid dictionary record instance?</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "",
            "",
            "",
            "",
            ""
          ]
        },
        "UseRecordAsParameterType": {
          "type": "multiple_choice_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Given the following function code:</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>Course <span style=\"color: #666666;\">=</span> {<span style=\"color: #BA2121;\">\"Name\"</span>: <span style=\"color: #008000;\">str</span>, <span style=\"color: #BA2121;\">\"Grade\"</span>: <span style=\"color: #008000;\">int</span>}\n\n<span style=\"color: #008000; font-weight: bold;\">def</span> <span style=\"color: #0000FF;\">is_passing</span>(course: _____) <span style=\"color: #666666;\">-&gt;</span> <span style=\"color: #008000;\">bool</span>:\n    <span style=\"color: #008000; font-weight: bold;\">return</span> course[<span style=\"color: #BA2121;\">'Grade'</span>] <span style=\"color: #666666;\">&gt;=</span> <span style=\"color: #666666;\">70</span>\n</pre></div>\n\n\n<p>Which is the best option to fill in the blank?</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "",
            "",
            "",
            "",
            "",
            ""
          ]
        }
      }
    },
    "checks": {
      "questions": {
        "DefineRecordTerms": {
          "correct": [
            "Dictionary",
            "Record type",
            "Record instance"
          ],
          "wrong": [
            "",
            "",
            ""
          ]
        },
        "DetermineRecordGetterReturnValue": {
          "correct": [
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>int</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
          ]
        },
        "IdentifyRecordConstructor": {
          "correct": [
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Painting</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
          ]
        },
        "IdentifyRecordConstructorClone": {
          "correct": [
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Painting</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
          ]
        },
        "IdentifyRecordSetter": {
          "correct": [
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>str</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
          ]
        },
        "IdentifyValidRecordTypes": {
          "correct": "",
          "feedback": {}
        },
        "IdentifyValidRecordValues": {
          "correct": "",
          "feedback": {}
        },
        "UseRecordAsParameterType": {
          "correct": "",
          "feedback": {}
        }
      }
    }
  },
  {
    "body": {
      "questions": {
        "CountingCategories": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>The Dictionary Counting Pattern is only useful if you know exactly what\ncategories of things you have in advance.</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "CountingInitialization": {
          "type": "multiple_choice_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>What does the accumulator variable in the dictionary counting pattern\ninitialize to?</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "",
            "",
            "",
            "",
            ""
          ]
        },
        "DynamicKeys": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Keys cannot be added to a dictionary after the dictionary has been created.</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "KeySubtype": {
          "type": "matching_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>For each pattern, identify the type of the dictionaries' keys.</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "Any type",
            "String"
          ],
          "statements": [
            "Counting Pattern",
            "Record Pattern",
            "Lookup Pattern"
          ]
        },
        "ValueSubtype": {
          "type": "matching_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>For each pattern, identify the type of the dictionaries' values.</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "Integer",
            "Any type"
          ],
          "statements": [
            "Counting Pattern",
            "Record Pattern",
            "Lookup Pattern"
          ]
        },
        "VariableKeys": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Variables cannot be used as the keys of a dictionary</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        }
      }
    },
    "checks": {
      "questions": {
        "CountingCategories": {
          "correct": false
        },
        "CountingInitialization": {
          "correct": "",
          "feedback": {}
        },
        "DynamicKeys": {
          "correct": false
        },
        "KeySubtype": {
          "correct": [
            "Any type",
            "String",
            "Any type"
          ],
          "wrong": [
            "",
            "",
            ""
          ]
        },
        "ValueSubtype": {
          "correct": [
            "Integer",
            "Any type",
            "Any type"
          ],
          "wrong": [
            "",
            "",
            ""
          ]
        },
        "VariableKeys": {
          "correct": false
        }
      }
    }
  },
  {
    "body": {
      "questions": {
        "ComplexExpressions": {
          "type": "matching_question",
          "points": 5.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Given the following code:</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>movies <span style=\"color: #666666;\">=</span> [\n    {<span style=\"color: #BA2121;\">\"Name\"</span>: <span style=\"color: #BA2121;\">\"Jurassic Park\"</span>, <span style=\"color: #BA2121;\">\"Length\"</span>: <span style=\"color: #666666;\">127</span>, \n     <span style=\"color: #BA2121;\">\"Cast\"</span>: [<span style=\"color: #BA2121;\">\"Goldblum\"</span>, <span style=\"color: #BA2121;\">\"Neill\"</span>, <span style=\"color: #BA2121;\">\"Dern\"</span>]},\n    {<span style=\"color: #BA2121;\">\"Name\"</span>: <span style=\"color: #BA2121;\">\"Castle in the Sky\"</span>, <span style=\"color: #BA2121;\">\"Length\"</span>: <span style=\"color: #666666;\">140</span>,\n     <span style=\"color: #BA2121;\">\"Cast\"</span>: [<span style=\"color: #BA2121;\">\"Paquin\"</span>, <span style=\"color: #BA2121;\">\"Beek\"</span>, <span style=\"color: #BA2121;\">\"Leachman\"</span>]},\n    {<span style=\"color: #BA2121;\">\"Name\"</span>: <span style=\"color: #BA2121;\">\"It\"</span>, <span style=\"color: #BA2121;\">\"Length\"</span>: <span style=\"color: #666666;\">135</span>,\n     <span style=\"color: #BA2121;\">\"Cast\"</span>: [<span style=\"color: #BA2121;\">\"Curry\"</span>, <span style=\"color: #BA2121;\">\"Green\"</span>, <span style=\"color: #BA2121;\">\"Brandis\"</span>]}]\n</pre></div>\n\n\n<p>What is the value of the following expressions?</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "\"Jurassic Park\"",
            "\"It\"",
            "Raises an error",
            "\"Curry\"",
            "\"Leachman\"",
            "135"
          ],
          "statements": [
            "movies[0][\"Name\"]",
            "movies[2][\"Name\"]",
            "movies[0][127]",
            "movies[1][1]",
            "movies[127][\"Name\"]",
            "movies[2][\"Cast\"][0]",
            "movies[2][\"Cast\"][\"Curry\"]",
            "movies[1][\"Cast\"][2]",
            "movies[2][\"Curry\"]",
            "movies[-1][\"Length\"]"
          ]
        },
        "DictionariesOfLists": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Dictionaries cannot be composed of Lists.</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "KeyInFor": {
          "type": "fill_in_multiple_blanks_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Fill in the blanks of the following code in order to print out each movie\ntitle followed by the names of its cast members:</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>movies <span style=\"color: #666666;\">=</span> [\n    {<span style=\"color: #BA2121;\">\"Name\"</span>: <span style=\"color: #BA2121;\">\"Jurassic Park\"</span>, <span style=\"color: #BA2121;\">\"Length\"</span>: <span style=\"color: #666666;\">127</span>, \n     <span style=\"color: #BA2121;\">\"Cast\"</span>: [<span style=\"color: #BA2121;\">\"Goldblum\"</span>, <span style=\"color: #BA2121;\">\"Neill\"</span>, <span style=\"color: #BA2121;\">\"Dern\"</span>]},\n    {<span style=\"color: #BA2121;\">\"Name\"</span>: <span style=\"color: #BA2121;\">\"Castle in the Sky\"</span>, <span style=\"color: #BA2121;\">\"Length\"</span>: <span style=\"color: #666666;\">140</span>,\n     <span style=\"color: #BA2121;\">\"Cast\"</span>: [<span style=\"color: #BA2121;\">\"Paquin\"</span>, <span style=\"color: #BA2121;\">\"Beek\"</span>, <span style=\"color: #BA2121;\">\"Leachman\"</span>]},\n    {<span style=\"color: #BA2121;\">\"Name\"</span>: <span style=\"color: #BA2121;\">\"It\"</span>, <span style=\"color: #BA2121;\">\"Length\"</span>: <span style=\"color: #666666;\">135</span>,\n     <span style=\"color: #BA2121;\">\"Cast\"</span>: [<span style=\"color: #BA2121;\">\"Curry\"</span>, <span style=\"color: #BA2121;\">\"Green\"</span>, <span style=\"color: #BA2121;\">\"Brandis\"</span>]}]\n<span style=\"color: #008000; font-weight: bold;\">for</span> movie <span style=\"color: #AA22FF; font-weight: bold;\">in</span> movies:\n    <span style=\"color: #008000; font-weight: bold;\">print</span>(movie[<span style=\"color: #BA2121;\">\"___1___\"</span>])\n    <span style=\"color: #008000; font-weight: bold;\">for</span> member <span style=\"color: #AA22FF; font-weight: bold;\">in</span> movie[<span style=\"color: #BA2121;\">\"___2___\"</span>]:\n        <span style=\"color: #008000; font-weight: bold;\">print</span>(member)\n</pre></div>\n\n\n<ol>\n<li>[name]</li>\n<li>[cast]</li>\n</ol><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "LengthOfLOD": {
          "type": "multiple_choice_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>How many elements are in the following list?</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>animals <span style=\"color: #666666;\">=</span> [{<span style=\"color: #BA2121;\">\"Name\"</span>: <span style=\"color: #BA2121;\">\"Klaus\"</span>, <span style=\"color: #BA2121;\">\"Age\"</span>: <span style=\"color: #666666;\">17</span>, <span style=\"color: #BA2121;\">\"Type\"</span>: <span style=\"color: #BA2121;\">\"Dog\"</span>},\n           {<span style=\"color: #BA2121;\">\"Name\"</span>: <span style=\"color: #BA2121;\">\"Tigger\"</span>, <span style=\"color: #BA2121;\">\"Age\"</span>: <span style=\"color: #666666;\">12</span>, <span style=\"color: #BA2121;\">\"Type\"</span>: <span style=\"color: #BA2121;\">\"Cat\"</span>},\n           {<span style=\"color: #BA2121;\">\"Name\"</span>: <span style=\"color: #BA2121;\">\"Wrex\"</span>, <span style=\"color: #BA2121;\">\"Age\"</span>: <span style=\"color: #666666;\">2</span>, <span style=\"color: #BA2121;\">\"Type\"</span>: <span style=\"color: #BA2121;\">\"Hamster\"</span>}]\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "",
            "",
            "",
            ""
          ]
        },
        "ListOfList": {
          "type": "multiple_choice_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>What is the type of the following expression?</p>\n<p>[[0]]</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "",
            "",
            "",
            ""
          ]
        },
        "ListsOfDictionaries": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Lists can be composed of Dictionaries.</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "PythonTypes": {
          "type": "matching_question",
          "points": 6.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Label each of the following as a \"Primitive type\", \"Composite type\", or \"Not a\ntype\":</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "Primitive type",
            "Composite type",
            "Not a type"
          ],
          "statements": [
            "Boolean",
            "String",
            "List",
            "Key",
            "Dictionary",
            "Value",
            "Integer",
            "Float",
            "None",
            "Return",
            "For",
            "Literal"
          ]
        },
        "StringsOfLists": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Strings can be composed of Lists.</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        }
      }
    },
    "checks": {
      "questions": {
        "ComplexExpressions": {
          "correct": [
            "\"Jurassic Park\"",
            "\"It\"",
            "Raises an error",
            "Raises an error",
            "Raises an error",
            "\"Curry\"",
            "Raises an error",
            "\"Leachman\"",
            "Raises an error",
            "135"
          ],
          "wrong": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ]
        },
        "DictionariesOfLists": {
          "correct": false
        },
        "KeyInFor": {
          "correct": {
            "cast": [
              "Cast"
            ],
            "name": [
              "Name"
            ]
          }
        },
        "LengthOfLOD": {
          "correct": "",
          "feedback": {}
        },
        "ListOfList": {
          "correct": "",
          "feedback": {}
        },
        "ListsOfDictionaries": {
          "correct": true
        },
        "PythonTypes": {
          "correct": [
            "Primitive type",
            "Primitive type",
            "Composite type",
            "Not a type",
            "Composite type",
            "Not a type",
            "Primitive type",
            "Primitive type",
            "Primitive type",
            "Not a type",
            "Not a type",
            "Not a type"
          ],
          "wrong": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ]
        },
        "StringsOfLists": {
          "correct": false
        }
      }
    }
  },
  {
    "body": {
      "questions": {
        "For Each on a Dictionary": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Summing all the elements of a dictionary is faster than summing all the\nelements of a list because you can lookup items instantly.</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "Lookup and Find Analogy": {
          "type": "matching_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>You need to find a book in the library. Match the data structure's operation\nto the analogous approach:</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "Find in a list",
            "Look up in a dictionary",
            "Query in a string",
            "Query in a string"
          ],
          "statements": [
            "Checking each book's name in order",
            "Using the index to instantly go to the right aisle"
          ]
        },
        "Question": {
          "type": "multiple_choice_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Assume that a dictionary variable has been initialized with the inventory of a\nsupermarket (with the rest of the items typed out):</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>inventory <span style=\"color: #666666;\">=</span> {<span style=\"color: #BA2121;\">\"Apples\"</span>: <span style=\"color: #666666;\">50</span>, <span style=\"color: #BA2121;\">\"Bananas\"</span>: <span style=\"color: #666666;\">35</span>, <span style=\"color: #BA2121;\">\"Cauliflower\"</span>: <span style=\"color: #666666;\">0</span>, <span style=\"color: #666666;\">...</span>, <span style=\"color: #BA2121;\">\"Zucchini\"</span>: <span style=\"color: #666666;\">72</span>}\n</pre></div>\n\n\n<p>The following algorithms all attempt to perform the same task of checking how\nmany \"Zucchini\" will be in stock. Which of the correct algorithms do you\nexpect to be the fastest?</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "",
            "",
            "",
            ""
          ]
        }
      }
    },
    "checks": {
      "questions": {
        "For Each on a Dictionary": {
          "correct": false
        },
        "Lookup and Find Analogy": {
          "correct": [
            "Find in a list",
            "Look up in a dictionary"
          ],
          "wrong": [
            "",
            ""
          ]
        },
        "Question": {
          "correct": "",
          "feedback": {}
        }
      }
    }
  },
  {
    "body": {
      "questions": {
        "ControlStructureBodies": {
          "type": "multiple_answers_question",
          "points": 3.5,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Which of the following have a body?<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><code>while</code> loop<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "List comprehension",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><code>for</code> loop<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "Function definition",
            "Function call",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><code>if</code> statement.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "Dictionary access"
          ]
        },
        "InputLimit": {
          "type": "multiple_choice_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>How many times does the loop body below execute?</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>command <span style=\"color: #666666;\">=</span> <span style=\"color: #BA2121;\">\"\"</span>\nwords <span style=\"color: #666666;\">=</span> []\n<span style=\"color: #008000; font-weight: bold;\">while</span> command <span style=\"color: #666666;\">!=</span> <span style=\"color: #BA2121;\">\"quit\"</span>:\n    command <span style=\"color: #666666;\">=</span> <span style=\"color: #008000;\">input</span>(<span style=\"color: #BA2121;\">\"Type a word:\"</span>)\n    words<span style=\"color: #666666;\">.</span>append(command)\n<span style=\"color: #008000; font-weight: bold;\">print</span>(words)\n</pre></div>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "None",
            "At least once",
            "At least twice",
            "No more than 10 times"
          ]
        },
        "LabelWhile": {
          "type": "matching_question",
          "points": 2.5,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>Identify each part of the while loop shown:</p>\n<p><img alt=\"25-while-\nquizGraphics.png\" src=\"https://i.imgur.com/CwzqVmS.png\"></p>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "While keyword",
            "Conditional",
            "Colon",
            "Indentation",
            "Body"
          ],
          "statements": [
            "1",
            "2",
            "3",
            "4",
            "5"
          ]
        },
        "LoopConvenience": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><code>while</code> loops are more common in Python than <code>for</code> loops because they are\nsafer.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "LoopEndDecrement": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>The program below will NOT loop forever.</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>count <span style=\"color: #666666;\">=</span> <span style=\"color: #666666;\">10</span>\n<span style=\"color: #008000; font-weight: bold;\">while</span> count <span style=\"color: #666666;\">&gt;=</span> <span style=\"color: #666666;\">0</span>:\n    count <span style=\"color: #666666;\">=</span> count <span style=\"color: #666666;\">-</span> <span style=\"color: #666666;\">1</span>\n<span style=\"color: #008000; font-weight: bold;\">print</span>(count)\n</pre></div>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "LoopEndIncrement": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>The program below will NOT loop forever.</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>count <span style=\"color: #666666;\">=</span> <span style=\"color: #666666;\">0</span>\n<span style=\"color: #008000; font-weight: bold;\">while</span> count <span style=\"color: #666666;\">&gt;</span> <span style=\"color: #666666;\">0</span>:\n    count <span style=\"color: #666666;\">=</span> count <span style=\"color: #666666;\">+</span> <span style=\"color: #666666;\">1</span>\n<span style=\"color: #008000; font-weight: bold;\">print</span>(count)\n</pre></div>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "LoopEndMidway": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>The program below will NOT loop forever.</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\">\n<pre style=\"line-height: 125%;\"><span></span>alpha <span style=\"color: #666666;\">=</span> <span style=\"color: #ba2121;\">'dog'</span>\n<span style=\"color: #008000; font-weight: bold;\">while</span> alpha <span style=\"color: #666666;\">==</span> <span style=\"color: #ba2121;\">'dog'</span>:\n    alpha <span style=\"color: #666666;\">=</span> <span style=\"color: #ba2121;\">'cat'</span>\n    <span style=\"color: #008000; font-weight: bold;\">print</span>(alpha)\n    alpha <span style=\"color: #666666;\">=</span> <span style=\"color: #ba2121;\">'dog'</span>\n<span style=\"color: #008000; font-weight: bold;\">print</span>(alpha)\n</pre>\n</div>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "LoopForever": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>The program below will NOT loop forever.</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #008000; font-weight: bold;\">while</span> <span style=\"color: #008000;\">True</span>:\n    <span style=\"color: #008000; font-weight: bold;\">print</span>(<span style=\"color: #BA2121;\">\"Loop again\"</span>)\n</pre></div>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "LoopLength": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">A <code>while</code> loop will execute once for each expression in the conditional.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "WhileExecutesOnce": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">A While loop will always execute at least once.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "WhileVsFor": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Syntactically, <code>while</code> loops look just like <code>for</code> loops. They both have a keyword, a colon, and a list to iterate over.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        }
      }
    },
    "checks": {
      "questions": {
        "ControlStructureBodies": {
          "correct": [
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><code>while</code> loop<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><code>for</code> loop<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "Function definition",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><code>if</code> statement.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
          ]
        },
        "InputLimit": {
          "correct": "At least once",
          "feedback": {
            "None": "Consider: the first time the loop condition is encountered, will command be not equal to \"quit\"? If so, then the loop body will execute.",
            "At least twice": "You are correct that the loop body will execute. Is it possible for the loop condition to be False after the first iteration of the loop?",
            "No more than 10 times": "This is incorrect. Although the loop body does execute, there is no bounds on how many times it can execute."
          }
        },
        "LabelWhile": {
          "correct": [
            "While keyword",
            "Conditional",
            "Colon",
            "Indentation",
            "Body"
          ],
          "wrong": [
            "",
            "",
            "",
            "",
            ""
          ]
        },
        "LoopConvenience": {
          "correct": false,
          "wrong": "while loops are less common than for in Python. Arguably, they are also not safer, since it is easy to write one in such a way that it loops forever."
        },
        "LoopEndDecrement": {
          "correct": true,
          "wrong": "This program sets a variable to 10, and then decrements it while it is greater than 0. This will terminate (after about 10 iterations), so it will not loop forever."
        },
        "LoopEndIncrement": {
          "correct": true,
          "wrong": "You should check the condition carefully. Notice that it tests if count is greater than 0, which is what count gets initialized to. If it were testing if it was greater than or equal to, this would indeed loop forever because of the increment."
        },
        "LoopEndMidway": {
          "correct": false,
          "wrong": "Remember, the body of a while loop will need to finish before the condition is reevaluated. In this case, although the condition would evaluate to False during the while loop, it only matters what alpha's value is at the end of the loop's body."
        },
        "LoopForever": {
          "correct": false,
          "wrong": "Because the conditional is True (the literal value), it will repeat the body forever."
        },
        "LoopLength": {
          "correct": false,
          "wrong": "A while loop will execute its body until the expression in the conditional is no longer True. This has no relationship with the number of expressions in the conditional."
        },
        "WhileExecutesOnce": {
          "correct": false,
          "wrong": "A while may execute zero, one, or any number of times. There is no guarantee that it will execute at least once."
        },
        "WhileVsFor": {
          "correct": false,
          "wrong": "This is not the best answer. Although for loops and while loops share some characteristics (both are loops, both have bodies), they are not particularly similar (for example, while loops do not have lists). Instead, while loops are usually compared to if statements, from a syntactic point of view."
        }
      }
    }
  },
  {
    "body": {
      "questions": {
        "EqualLoad": {
          "type": "multiple_answers_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Which of the following two snippets of code are equivalent and correct?<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #008000; font-weight: bold;\">import</span> <span style=\"color: #0000FF; font-weight: bold;\">json</span>\n<span style=\"color: #008000;\">file</span> <span style=\"color: #666666;\">=</span> <span style=\"color: #008000;\">open</span>(<span style=\"color: #BA2121;\">\"scores.txt\"</span>) \njson<span style=\"color: #666666;\">.</span>load(<span style=\"color: #008000;\">file</span>)\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #008000; font-weight: bold;\">from</span> <span style=\"color: #0000FF; font-weight: bold;\">json</span> <span style=\"color: #008000; font-weight: bold;\">import</span> load\n<span style=\"color: #008000;\">file</span> <span style=\"color: #666666;\">=</span> <span style=\"color: #008000;\">open</span>(<span style=\"color: #BA2121;\">\"scores.txt\"</span>) \nload(<span style=\"color: #008000;\">file</span>)\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #008000; font-weight: bold;\">import</span> <span style=\"color: #0000FF; font-weight: bold;\">json</span> <span style=\"color: #008000; font-weight: bold;\">as</span> <span style=\"color: #0000FF; font-weight: bold;\">js</span>\n<span style=\"color: #008000;\">file</span> <span style=\"color: #666666;\">=</span> <span style=\"color: #008000;\">open</span>(<span style=\"color: #BA2121;\">\"scores.txt\"</span>) \njson<span style=\"color: #666666;\">.</span>load(<span style=\"color: #008000;\">file</span>)\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #008000; font-weight: bold;\">from</span> <span style=\"color: #0000FF; font-weight: bold;\">json</span> <span style=\"color: #008000; font-weight: bold;\">import</span> load\n<span style=\"color: #008000;\">file</span> <span style=\"color: #666666;\">=</span> <span style=\"color: #008000;\">open</span>(<span style=\"color: #BA2121;\">\"scores.txt\"</span>) \njson<span style=\"color: #666666;\">.</span>load(<span style=\"color: #008000;\">file</span>)\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #008000; font-weight: bold;\">import</span> <span style=\"color: #0000FF; font-weight: bold;\">load</span>\n<span style=\"color: #008000;\">file</span> <span style=\"color: #666666;\">=</span> <span style=\"color: #008000;\">open</span>(<span style=\"color: #BA2121;\">\"scores.txt\"</span>) \nload(<span style=\"color: #008000;\">file</span>)\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
          ]
        },
        "ImportBeforeUse": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">You must import the <code>json</code> module before you can use the <code>load</code> function.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "JSONTypes": {
          "type": "multiple_answers_question",
          "points": 4.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">The built-in <code>json</code> module can load and dump only certain kinds of data by\ndefault. According to <a href=\"https://docs.python.org/3.6/library/json.html#json.JSONDecoder\">this table in the\ndocumentation</a>,\nwhich of the following types can be represented in the JSON format?<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "Integer",
            "String",
            "Boolean",
            "Lists",
            "Dictionaries",
            "Functions",
            "For Loops",
            "Module",
            "None"
          ]
        },
        "JsonLoadArgument": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">The <code>load</code> method from the <code>json</code> module consumes a string representing a\nfilename.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "JsonType": {
          "type": "multiple_choice_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>Given the file <code>scores.json</code> with the following contents:</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>[44, 45, 23, 33]\n</pre></div>\n\n\n<p>And the following code:</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #008000; font-weight: bold;\">import</span> <span style=\"color: #0000FF; font-weight: bold;\">json</span>\nscores <span style=\"color: #666666;\">=</span> json<span style=\"color: #666666;\">.</span>load(<span style=\"color: #008000;\">open</span>(<span style=\"color: #BA2121;\">'scores.json'</span>))\n</pre></div>\n\n\n<p>What is the type of <code>scores</code>?</p>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "String",
            "Integer",
            "List of Integer",
            "List of String",
            "File object"
          ]
        },
        "KeywordArgument": {
          "type": "multiple_choice_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Which of the following is the proper syntax for a keyword argument?<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "json.dumps(data, indent=2)",
            "json.dumps(data, 2)",
            "json.dumps(data, indent: 2)",
            "json.dumps(data, indent-2)",
            "indent = 2 json.dumps(data, indent)"
          ]
        }
      }
    },
    "checks": {
      "questions": {
        "EqualLoad": {
          "correct": [
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #008000; font-weight: bold;\">import</span> <span style=\"color: #0000FF; font-weight: bold;\">json</span>\n<span style=\"color: #008000;\">file</span> <span style=\"color: #666666;\">=</span> <span style=\"color: #008000;\">open</span>(<span style=\"color: #BA2121;\">\"scores.txt\"</span>) \njson<span style=\"color: #666666;\">.</span>load(<span style=\"color: #008000;\">file</span>)\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #008000; font-weight: bold;\">from</span> <span style=\"color: #0000FF; font-weight: bold;\">json</span> <span style=\"color: #008000; font-weight: bold;\">import</span> load\n<span style=\"color: #008000;\">file</span> <span style=\"color: #666666;\">=</span> <span style=\"color: #008000;\">open</span>(<span style=\"color: #BA2121;\">\"scores.txt\"</span>) \nload(<span style=\"color: #008000;\">file</span>)\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
          ]
        },
        "ImportBeforeUse": {
          "correct": true,
          "wrong": "No, this is how modules work. You import the module, and then you may use the functions inside of it. Of course, you would need to access the function using the expression json.load."
        },
        "JSONTypes": {
          "correct": [
            "Integer",
            "String",
            "Boolean",
            "Lists",
            "Dictionaries",
            "None"
          ]
        },
        "JsonLoadArgument": {
          "correct": false,
          "wrong": "Incorrect! The json.load function consumes a file handle, which you get by calling the built-in open function. If you attempt to pass in a string directly, you will get an error."
        },
        "JsonType": {
          "correct": "List of Integer",
          "feedback": {
            "String": "No, although if we were just reading it as a regular file, it would indeed come back to us as a string. But the JSON module parses it into actual Python data!",
            "Integer": "No, although there are integers in the file, there is also a surrounding structure to the integers.",
            "List of String": "No, although the JSON module does indeed convert the brackets into a list, it goes farther and even converts the numbers. To make this a list of strings, the file would have to have something like [\"1\", \"2\", \"3\"] in it. Note the quotes!",
            "File object": "No, although the open function returns a File object, the load function will convert the contents of the file into Python values."
          }
        },
        "KeywordArgument": {
          "correct": "json.dumps(data, indent=2)",
          "feedback": {
            "json.dumps(data, 2)": "No, although this is how you would pass in a regular argument, it is not how you pass in a keyword argument.",
            "json.dumps(data, indent: 2)": "No, this is not valid Python.",
            "json.dumps(data, indent-2)": "No, this would pass in a regular argument, not a keyword argument.",
            "indent = 2 json.dumps(data, indent)": "It's tempting to think this one, because this looks like how we have set arguments in the past. However, keyword arguments are different from regular arguments."
          }
        }
      }
    }
  },
  {
    "body": {
      "questions": {
        "CdFolder": {
          "type": "short_answer_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Write the command for moving to a folder named <code>\"homework\"</code> that is in the\ncurrent directory.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "CdUp": {
          "type": "short_answer_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Write the command for moving up a directory.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "ExplanatoryTextForThonny": {
          "type": "text_only_question",
          "points": 0.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>In the lessons, you are shown how to run a number of commands. The exclamation marks (<code>!</code>) shown in the lesson are only there because Thonny requires them; most command line systems would not require them. Please do not use <code>!</code> in any of the following questions.</p>\n<p>As a helpful reminder, here are the commands from the lesson:</p>\n<table class=\"table table-striped table-bordered\">\n<thead>\n<tr>\n<th>Command</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>pwd</td>\n<td>Print current working directory</td>\n</tr>\n<tr>\n<td>ls</td>\n<td>List files in current working directory</td>\n</tr>\n<tr>\n<td>ls \"path\"</td>\n<td>List files in the directory of the path</td>\n</tr>\n<tr>\n<td>cd \"path\"</td>\n<td>Change the current working directory</td>\n</tr>\n</tbody>\n</table>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "FindLocations": {
          "type": "multiple_dropdowns_question",
          "points": 2.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>Given the following map of a filesystem...</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\">\n<pre style=\"line-height: 125%;\"><span></span><span style=\"color: #666666;\">/</span>root<span style=\"color: #666666;\">/</span>\n    python<span style=\"color: #666666;\">/</span>\n        readme<span style=\"color: #666666;\">.</span>rst\n        python<span style=\"color: #666666;\">.</span>exe\n        qt<span style=\"color: #666666;\">.</span>conf\n    classes<span style=\"color: #666666;\">/</span>\n        cs1064<span style=\"color: #666666;\">/</span>\n            adventure_game<span style=\"color: #666666;\">.</span>py\n            assignment2<span style=\"color: #666666;\">.</span>txt\n            ethics_submission<span style=\"color: #666666;\">.</span>pdf\n        dog1223<span style=\"color: #666666;\">/</span>\n            readings<span style=\"color: #666666;\">.</span>pdf\n            project1<span style=\"color: #666666;\">.</span>docx\n            DCIM<span style=\"color: #666666;\">-1221.j</span>pg\n    data<span style=\"color: #666666;\">/</span>\n        survey_results<span style=\"color: #666666;\">.</span>csv\n        state_names<span style=\"color: #666666;\">.</span>json\n        f15_student_logs<span style=\"color: #666666;\">.</span>txt\n</pre>\n</div>\n<p>Answer the following:</p>\n<ul>\n<li>What is the full path to the folder \"data/\"? [data-full]</li>\n<li>What is the full path to the file \"DCIM-1221.jpg\"? [dcim-full]</li>\n<li>If you are currently in directory <code>data/</code>, which of the following is NOT a path to the <code>readings.pdf</code> file? [readings-relative]</li>\n<li>If you are currently in directory <code>cs1064/</code>, which of the following is NOT a path to the <code>survey_results.csv</code> file? [survey-relative]</li>\n</ul>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": {
            "dcim-full": [
              "DCIM-1221.jpg",
              "/root/classes/dog1223/DCIM-1221.jpg",
              "dog1223/DCIM-1221.jpg",
              "/root/python/classes/dog1223/DCIM-1221.jpg",
              "/root/data/",
              "data/",
              "survey_results.csv, state_names.json, f15_student_logs.txt",
              "../classes/dog1223/readings.pdf",
              "/root/classes/dog1223/readings.pdf",
              "dog1223/readings.pdf",
              "../data/survey_results.csv",
              "/root/data/survey_results.csv",
              ".../../data/survey_results.csv"
            ],
            "data-full": [
              "DCIM-1221.jpg",
              "/root/classes/dog1223/DCIM-1221.jpg",
              "dog1223/DCIM-1221.jpg",
              "/root/python/classes/dog1223/DCIM-1221.jpg",
              "/root/data/",
              "data/",
              "survey_results.csv, state_names.json, f15_student_logs.txt",
              "../classes/dog1223/readings.pdf",
              "/root/classes/dog1223/readings.pdf",
              "dog1223/readings.pdf",
              "../data/survey_results.csv",
              "/root/data/survey_results.csv",
              ".../../data/survey_results.csv"
            ],
            "readings-relative": [
              "DCIM-1221.jpg",
              "/root/classes/dog1223/DCIM-1221.jpg",
              "dog1223/DCIM-1221.jpg",
              "/root/python/classes/dog1223/DCIM-1221.jpg",
              "/root/data/",
              "data/",
              "survey_results.csv, state_names.json, f15_student_logs.txt",
              "../classes/dog1223/readings.pdf",
              "/root/classes/dog1223/readings.pdf",
              "dog1223/readings.pdf",
              "../data/survey_results.csv",
              "/root/data/survey_results.csv",
              ".../../data/survey_results.csv"
            ],
            "survey-relative": [
              "DCIM-1221.jpg",
              "/root/classes/dog1223/DCIM-1221.jpg",
              "dog1223/DCIM-1221.jpg",
              "/root/python/classes/dog1223/DCIM-1221.jpg",
              "/root/data/",
              "data/",
              "survey_results.csv, state_names.json, f15_student_logs.txt",
              "../classes/dog1223/readings.pdf",
              "/root/classes/dog1223/readings.pdf",
              "dog1223/readings.pdf",
              "../data/survey_results.csv",
              "/root/data/survey_results.csv",
              ".../../data/survey_results.csv"
            ]
          }
        },
        "Ls": {
          "type": "short_answer_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Write the command for listing files in the current directory.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "Pwd": {
          "type": "short_answer_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Write the command for printing the current directory.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "TerminalCommands": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">The <code>pwd</code> command works in every Python environment, including ones like\nThonny and BlockPy.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "WhyForward": {
          "type": "multiple_answers_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Why should you tend to use forward slashes in Python?<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "Back slashes in string literals represent escape characters, which can mess up the path.",
            "Back slashes are backwards, which means that only backwards people use them.",
            "Forward slashes look prettier to everyone.",
            "Forward slashes tend to work in both Mac and Windows."
          ]
        }
      }
    },
    "checks": {
      "questions": {
        "CdFolder": {
          "wrong_any": "Remember, there are only 3 commands, and only one of them allows you to change\nthe current directory. How do you use that command to change to a specific\ndirectory? Also, note that you shouldn't use \"&lt;\" or \"&gt;\" anywhere in your\nsolution.",
          "correct_exact": [
            "cd 'homework'",
            "cd \"homework\"",
            "CD 'homework'",
            "CD \"homework\"",
            "cd homework",
            "CD homework",
            "cd \"homework/\"",
            "cd homework/",
            "CD homework/",
            "CD \"homework/\"",
            "CD 'homework/'",
            "cd 'homework/'"
          ]
        },
        "CdUp": {
          "correct_exact": [
            "cd ..",
            "cd ../",
            "CD ..",
            "CD ../"
          ]
        },
        "ExplanatoryTextForThonny": {},
        "FindLocations": {
          "correct": {
            "dcim-full": "/root/python/classes/dog1223/DCIM-1221.jpg",
            "data-full": "survey_results.csv, state_names.json, f15_student_logs.txt",
            "readings-relative": "dog1223/readings.pdf",
            "survey-relative": ".../../data/survey_results.csv"
          },
          "wrong": {
            "dcim-full": "No, this is a relative path.",
            "data-full": "No, this is a list of the files in that directory, not the path to that directory.",
            "readings-relative": "Correct, this would look for a folder named dog1223 in the current directory, and there is no such folder here.",
            "survey-relative": "Incorrect, this works perfectly fine because it looks two levels up before looking for the data directory, which is where it is."
          }
        },
        "Ls": {
          "correct_exact": [
            "ls",
            "LS",
            "ls .",
            "LS .",
            "ls ./",
            "LS ./"
          ]
        },
        "Pwd": {
          "correct_exact": [
            "pwd",
            "PWD"
          ]
        },
        "TerminalCommands": {
          "correct": false,
          "wrong": "The pwd, ls, cd, and other commands work in Thonny because it is an interactive \"terminal\" environment. Not every Python environment is a \"terminal\" environment: BlockPy is not, for example. Therefore, you should not treat these special commands as part of Python, but as special commands for Thonny and other interactive terminal environments."
        },
        "WhyForward": {
          "correct": [
            "Back slashes in string literals represent escape characters, which can mess up the path.",
            "Forward slashes tend to work in both Mac and Windows."
          ]
        }
      }
    }
  },
  {
    "body": {
      "questions": {
        "FileNotFoundError": {
          "type": "multiple_answers_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Which of the following are causes of a <code>FileNotFoundError</code>?<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "A file was downloaded to the wrong folder.",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">The coder mispelled the name of the file when calling <code>open</code>.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">The coder wrote <code>opne</code> instead of <code>open</code>.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">The coder did not give any arguments to the <code>open</code> function.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
          ]
        },
        "ForFile": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">A <code>for</code> loop will process a file sentence-by-sentence.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "OpenClose": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">After opening a file, you should always close a file.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "OpenFile": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">The <code>open</code> function consumes a string representing a path and returns a string\nof the file's data.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "TypeReading": {
          "type": "multiple_choice_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>Given the file named <code>grades.txt</code> with the following contents:</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>90, 85, 100\n</pre></div>\n\n\n<p>And the following python code:</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>grade_file <span style=\"color: #666666;\">=</span> <span style=\"color: #008000;\">open</span>(<span style=\"color: #BA2121;\">\"grades.txt\"</span>)\ngrade_data <span style=\"color: #666666;\">=</span> grade_file<span style=\"color: #666666;\">.</span>read()\n</pre></div>\n\n\n<p>What will be the type of <code>grade_data</code>?</p>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "List of String",
            "List of Integer",
            "Integer",
            "String",
            "Dictionary of Integers and Strings",
            "File object"
          ]
        }
      }
    },
    "checks": {
      "questions": {
        "FileNotFoundError": {
          "correct": [
            "A file was downloaded to the wrong folder.",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">The coder mispelled the name of the file when calling <code>open</code>.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
          ]
        },
        "ForFile": {
          "correct": false,
          "wrong": "False! A for loop will process a file line-by-line, not sentence-by- sentence. Although they could be the same in some cases, there is nothing that enforces this. A sentence is ended by a period, while a line is ended by a newline character (the \"\\n\" character)."
        },
        "OpenClose": {
          "correct": true,
          "wrong": "You should always close a file after opening it. This is most important when you want to use the file for something else later in the program. Sometimes, data is not written out to the file until it is closed, so it is good practice to get in the process of closing a file as soon as you are done with it."
        },
        "OpenFile": {
          "correct": false,
          "wrong": "This may sound correct at first, and the function does indeed consume a string representing a path. However, the function does NOT return the file's data. Instead, you are supposed to use the read method of the opened file in order to access the data."
        },
        "TypeReading": {
          "correct": "String",
          "feedback": {
            "List of String": "No, in order to obtain a list from the files' contents, you would need to use the split method.",
            "List of Integer": "No, in order to obtain a list of integers from the files' contents, you would need to use the split method and apply the int function to each element.",
            "Integer": "No, although there are numbers in the file, that is irrelevant to the type that is returned by the read method.",
            "Dictionary of Integers and Strings": "No, dictionaries do not come into this question at all.",
            "File object": "Although the grade_file variable has a File object, the grade_data variable does not."
          }
        }
      }
    }
  },
  {
    "body": {
      "questions": {
        "ExplainImport": {
          "type": "multiple_choice_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>Which of the following is the best description of this line of code?</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #008000; font-weight: bold;\">from</span> <span style=\"color: #0000FF; font-weight: bold;\">math</span> <span style=\"color: #008000; font-weight: bold;\">import</span> sqrt <span style=\"color: #008000; font-weight: bold;\">as</span> square_root\n</pre></div>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "Loads the sqrt function in the math module but renames it square_root",
            "Loads the math function from the sqrt module but renames it sqrt",
            "Loads the square_root function from the math module but renames it sqrt",
            "Loads the sqrt and square_root functions from the math module"
          ]
        },
        "ImportFunction": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><code>import</code> is a function that takes in the name of a module and loads the\nfunctions, variables, and other definitions.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "MathModuleContents": {
          "type": "multiple_answers_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Review the <a href=\"https://docs.python.org/3/library/math.html\">documentation</a> for\nthe built-in <code>math</code> module. Which of the following are functions available\nfrom it?<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "sqrt",
            "log",
            "log4",
            "log10",
            "exponent",
            "add"
          ]
        },
        "ModulePackageVariablesDefinitions": {
          "type": "matching_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">A _<span style=\"text-decoration: underline;\">1</span><em>_</em> contains _<span style=\"text-decoration: underline;\">2_</span>, which in turn can provide functions, _<span style=\"text-decoration: underline;\">3</span>_, and more after being imported<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "package",
            "module",
            "variables",
            "for loops",
            "if statements"
          ],
          "statements": [
            "1",
            "2",
            "3"
          ]
        }
      }
    },
    "checks": {
      "questions": {
        "ExplainImport": {
          "correct": "Loads the sqrt function in the math module but renames it square_root",
          "feedback": {
            "Loads the math function from the sqrt module but renames it sqrt": "No, math is a module, not a function.",
            "Loads the square_root function from the math module but renames it sqrt": "No, the original name of the function was sqrt, not square_root.",
            "Loads the sqrt and square_root functions from the math module": "No, only the sqrt function is loaded - it is simply renamed to square_root. Only one function is being loaded!"
          }
        },
        "ImportFunction": {
          "correct": false,
          "wrong": "False! import is a statement (like return or if), not a function. Functions CAN be statements (or used in expressions), but statements are not generally functions. The other stuff was totally correct though."
        },
        "MathModuleContents": {
          "correct": [
            "sqrt",
            "log",
            "log10"
          ]
        },
        "ModulePackageVariablesDefinitions": {
          "correct": [
            "package",
            "module",
            "variables"
          ],
          "wrong": [
            "There are many ways to bundle code, but this is the biggest, most general kind of bundle.",
            "There are many ways to bundle code, and this way is one of the most common.",
            "There are many things you can import from a module or package, but they have to have names. Code constructs that modify control flow cannot be imported (even if functions are using them, the code constructs themselves are not being imported)."
          ]
        }
      }
    }
  },
  {
    "body": {
      "questions": {
        "IdentifyValidWaysOfSendingCode": {
          "type": "multiple_answers_question",
          "points": 3.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Which of the following examples is an appropriate way to send code?<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Hello instructor, I have a problem in the following code:\n<a href=\"https://pastebin.com/DjcgHkYk\">https://pastebin.com/DjcgHkYk</a><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "Hello instructor, my code has a problem in it.",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Hello instructor, this code has a problem in it: print(my_age) my_age = 0\nmy_age = my_age + 5<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Hello instructor, this code has a problem in it:</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #008000; font-weight: bold;\">print</span>(my_age)\nmy_age <span style=\"color: #666666;\">=</span> <span style=\"color: #666666;\">0</span>\nmy_age <span style=\"color: #666666;\">=</span> my_age <span style=\"color: #666666;\">+</span> <span style=\"color: #666666;\">5</span>\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Hello instructor, my code has a problem in it. I have attached the code as a\nPython file for you to look at: \n<a href=\"https://pastebin.com/raw/ibMJ7L3j\">download link to python file</a><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
          ]
        },
        "ShareErrorMessagesInEmails": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">You should not put error messages into help seeking emails because it can\nclutter up the email.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "StateThatExpertsNeedHelp": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">One of the differences between a novice and an expert is that experts don't\nneed help.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "UseGoodEmailTitles": {
          "type": "multiple_answers_question",
          "points": 3.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Mark each of the following email titles if they are GOOD titles.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\"HELP ME!!!!!!!!!\"<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\"How do I initialize a variable?\"<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\"Course Confusion\"<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\"Why do I get an error?\"<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\"What is a NameError and how do I get rid of it?\"<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\"i got an eror hlp plz\"<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\"#3.2 doesn't make any sense\"<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
          ]
        }
      }
    },
    "checks": {
      "questions": {
        "IdentifyValidWaysOfSendingCode": {
          "correct": [
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Hello instructor, I have a problem in the following code:\n<a href=\"https://pastebin.com/DjcgHkYk\">https://pastebin.com/DjcgHkYk</a><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Hello instructor, this code has a problem in it:</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #008000; font-weight: bold;\">print</span>(my_age)\nmy_age <span style=\"color: #666666;\">=</span> <span style=\"color: #666666;\">0</span>\nmy_age <span style=\"color: #666666;\">=</span> my_age <span style=\"color: #666666;\">+</span> <span style=\"color: #666666;\">5</span>\n</pre></div><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Hello instructor, my code has a problem in it. I have attached the code as a\nPython file for you to look at: \n<a href=\"https://pastebin.com/raw/ibMJ7L3j\">download link to python file</a><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
          ]
        },
        "ShareErrorMessagesInEmails": {
          "correct": false,
          "wrong": "You should always include any errors you received in the email."
        },
        "StateThatExpertsNeedHelp": {
          "correct": false,
          "wrong": "Even experts need help sometimes. You will never stop relying on Google and your peers to get help, even when you've been programming for decades."
        },
        "UseGoodEmailTitles": {
          "correct": [
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\"How do I initialize a variable?\"<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\"What is a NameError and how do I get rid of it?\"<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
          ]
        }
      }
    }
  },
  {
    "body": {
      "questions": {
        "GetReturns": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">The <code>get</code> function from the <code>requests</code> module consumes a string URL and\nreturns a string representing the contents of the website.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "ResponseJSON": {
          "type": "short_answer_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>Assume the following code is executed to retrieve a JSON file:</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #008000; font-weight: bold;\">import</span> <span style=\"color: #0000FF; font-weight: bold;\">requests</span>\nresponse <span style=\"color: #666666;\">=</span> requests<span style=\"color: #666666;\">.</span>get(<span style=\"color: #BA2121;\">\"www.example.com/data.json\"</span>)\n</pre></div>\n\n\n<p>Fill in the blank with the coded needed to print the JSON representation of the <code>response</code>:</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #008000; font-weight: bold;\">print</span>(___)\n</pre></div>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "ResponseText": {
          "type": "short_answer_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>Assume the following code is executed to retrieve a Text file:</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #008000; font-weight: bold;\">import</span> <span style=\"color: #0000FF; font-weight: bold;\">requests</span>\nresponse <span style=\"color: #666666;\">=</span> requests<span style=\"color: #666666;\">.</span>get(<span style=\"color: #BA2121;\">\"www.example.com/data.txt\"</span>)\n</pre></div>\n\n\n<p>Fill in the blank with the coded needed to print the text of the <code>response</code>:</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #008000; font-weight: bold;\">print</span>(___)\n</pre></div>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "SpecificURL": {
          "type": "multiple_choice_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Your instructor gives you the following URL to access:\n<code>https://jsonplaceholder.typicode.com/posts</code>. Which of the following is the\ncorrect way to access it?<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "response = requests.get(\"https://jsonplaceholder.typicode.com/posts\")",
            "response = requests.get(\"jsonplaceholder.typicode.com/posts\")",
            "response = requests.get(https://jsonplaceholder.typicode.com/posts)",
            "response = requests.get(www.jsonplaceholder.typicode.com/posts)",
            "response = requests.get(\"www.jsonplaceholder.typicode.com\")"
          ]
        },
        "StringURL": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">A URL is easily stored as a string.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "WebHazards": {
          "type": "multiple_answers_question",
          "points": 3.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Which of the following are hazards of using web data?<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "Losing your internet connection.",
            "The website changing the file without telling you.",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">The website changing the file's format without telling you.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "A slow internet connection.",
            "Too many students visiting the same website for an assignment and causing it to crash.",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Gremlins that live in your computer maliciously changing your code while you're not looking.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
          ]
        }
      }
    },
    "checks": {
      "questions": {
        "GetReturns": {
          "correct": false,
          "wrong": "False! Although the function does consume a string URL, it returns a Response object. That Response object contains a string, but also contains other things."
        },
        "ResponseJSON": {
          "wrong_any": "Remember to use the proper method name and that you have to <em>call</em> the method.",
          "correct_exact": [
            "response.json()",
            "response.json( )"
          ]
        },
        "ResponseText": {
          "wrong_any": "Use the proper attribute and the <code>response</code> object!",
          "correct_exact": [
            "response.text",
            "response.content"
          ]
        },
        "SpecificURL": {
          "correct": "response = requests.get(\"https://jsonplaceholder.typicode.com/posts\")",
          "feedback": {
            "response = requests.get(\"jsonplaceholder.typicode.com/posts\")": "When you're given a URL in this course, do not change it. Do not change it in the slightest. Trust me, it'll only cause you headaches if you do.",
            "response = requests.get(https://jsonplaceholder.typicode.com/posts)": "URLs are strings, they need quotes!",
            "response = requests.get(www.jsonplaceholder.typicode.com/posts)": "URLs are strings, they need quotes!",
            "response = requests.get(\"www.jsonplaceholder.typicode.com\")": "When you're given a URL in this course, do not change it. Do not change it in the slightest. Trust me, it'll only cause headaches."
          }
        },
        "StringURL": {
          "correct": true,
          "wrong": "No, really, it is quite easy, see? my_string = https://jsonplaceholder.typicode.com/posts"
        },
        "WebHazards": {
          "correct": [
            "Losing your internet connection.",
            "The website changing the file without telling you.",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">The website changing the file's format without telling you.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "A slow internet connection.",
            "Too many students visiting the same website for an assignment and causing it to crash."
          ]
        }
      }
    }
  },
  {
    "body": {
      "questions": {
        "GraphQuestions": {
          "type": "matching_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Match the type of graph with the kind of question it is most suited to.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "The relationship between two lists of numbers",
            "The distribution of a list of numbers",
            "The trend in a list of numbers",
            "Bar Plot",
            "Bart Plot"
          ],
          "statements": [
            "Scatter Plot",
            "Histogram",
            "Line plot"
          ]
        },
        "HistogramsBarGraphs": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Bar graphs and Histograms are the same thing.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "ImportingMatPlotLib": {
          "type": "multiple_choice_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">How many times do you need to import MatPlotLib?<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "None, because it is built-in to Python.",
            "Once, at the start of the program.",
            "Once, at the end of the program.",
            "Once for each time that you are plotting, before you plot."
          ]
        },
        "InterpretingHistograms": {
          "type": "multiple_choice_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>The following code</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #008000; font-weight: bold;\">import</span> <span style=\"color: #0000FF; font-weight: bold;\">matplotlib.pyplot</span> <span style=\"color: #008000; font-weight: bold;\">as</span> <span style=\"color: #0000FF; font-weight: bold;\">plt</span>\n<span style=\"color: #008000; font-weight: bold;\">import</span> <span style=\"color: #0000FF; font-weight: bold;\">json</span>\ngrades <span style=\"color: #666666;\">=</span> json<span style=\"color: #666666;\">.</span>load(<span style=\"color: #008000;\">open</span>(<span style=\"color: #BA2121;\">\"student_grades.json\"</span>))\nplt<span style=\"color: #666666;\">.</span>hist(grades)\nplt<span style=\"color: #666666;\">.</span>show()\n</pre></div>\n\n\n<p>Was used to generate this Histogram.</p>\n<p><img alt=\"29-plotting-quizGraphics-\nplot.png\" src=\"https://i.imgur.com/VHFSs2Q.png\"></p>\n<p>What is the correct interpretation of the graph?</p>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "Most students got a 100.",
            "Most students got a 0.",
            "Most students got between 50 and 60.",
            "Grades were very evenly distributed."
          ]
        },
        "MergingGraphs": {
          "type": "multiple_choice_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>How many graphs will the following code create?</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #008000; font-weight: bold;\">import</span> <span style=\"color: #0000FF; font-weight: bold;\">matplotlib.pyplot</span> <span style=\"color: #008000; font-weight: bold;\">as</span> <span style=\"color: #0000FF; font-weight: bold;\">plt</span>\nplt<span style=\"color: #666666;\">.</span>hist([<span style=\"color: #666666;\">1</span>,<span style=\"color: #666666;\">2</span>,<span style=\"color: #666666;\">3</span>])\nplt<span style=\"color: #666666;\">.</span>hist([<span style=\"color: #666666;\">1</span>,<span style=\"color: #666666;\">2</span>,<span style=\"color: #666666;\">3</span>])\nplt<span style=\"color: #666666;\">.</span>show()\n</pre></div>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "0",
            "1",
            "2",
            "3"
          ]
        },
        "ShowingGraphs": {
          "type": "short_answer_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>After the module is imported and a plot is made, the plot must be shown. Write the function call that would be needed given the following import:</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #008000; font-weight: bold;\">import</span> <span style=\"color: #0000FF; font-weight: bold;\">matplotlib.pyplot</span> <span style=\"color: #008000; font-weight: bold;\">as</span> <span style=\"color: #0000FF; font-weight: bold;\">plt</span>\n</pre></div>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        }
      }
    },
    "checks": {
      "questions": {
        "GraphQuestions": {
          "correct": [
            "The relationship between two lists of numbers",
            "The distribution of a list of numbers",
            "The trend in a list of numbers"
          ],
          "wrong": [
            "",
            "",
            ""
          ]
        },
        "HistogramsBarGraphs": {
          "correct": false,
          "wrong": "Histograms and Bar Graphs are so commonly confused, but they're different!"
        },
        "ImportingMatPlotLib": {
          "correct": "Once, at the start of the program.",
          "feedback": {
            "None, because it is built-in to Python.": "No. MatPlotLib is not part of the standard Python library, and needs to be imported before it can be used.",
            "Once, at the end of the program.": "No, you need to import MatPlotLib before you use it.",
            "Once for each time that you are plotting, before you plot.": "No, you should only ever import a module once."
          }
        },
        "InterpretingHistograms": {
          "correct": "Most students got between 50 and 60.",
          "feedback": {
            "Most students got a 100.": "No, according to this graph, very few students (10) got a 100.",
            "Most students got a 0.": "No, according to this graph, very few students (10) got a 0.",
            "Grades were very evenly distributed.": "No, according to this graph, the grades were not evenly distributed."
          }
        },
        "MergingGraphs": {
          "correct": "1",
          "feedback": {
            "0": "No, this does correctly create a new plot.",
            "2": "It is tempting to think this! However, because there is only one call to show, only one graph is created. This graph will have two histograms on it, but there is still only one graph.",
            "3": "No, this would be way too many graphs."
          }
        },
        "ShowingGraphs": {
          "correct_exact": [
            "plt.show()",
            "plt.show( )"
          ]
        }
      }
    }
  },
  {
    "body": {
      "questions": {
        "JupyterComposition": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">A Jupyter Notebook is composed of Markdown, Code, and the results of running\nthat Code.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "JupyterFormat": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Jupyter Notebooks is a useful file format for sharing data, like JSON or CSV.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "JupyterPackaging": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Jupyter Notebooks are a basic part of a Python installation.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "JupytersUse": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Jupter Notebooks are strictly a tool for educational purposes.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "MarkdownFormat": {
          "type": "multiple_choice_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Which of the following creates a section header in Markdown?<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "* Introduction",
            "sectionIntroductionsection",
            "You cannot create section headers in Markdown.",
            "# Introduction"
          ]
        },
        "MarkdownPython": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Markdown is a type of Python code.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "SharingJupyter": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">When you are done creating a Jupyter Notebook, you can share it as Python\ncode, a HTML, and several other useful formats.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        }
      }
    },
    "checks": {
      "questions": {
        "JupyterComposition": {
          "correct": true,
          "wrong": "No, this is a good explanation of a Jupyter Notebook."
        },
        "JupyterFormat": {
          "correct": false,
          "wrong": "Although you could embed data in a Jupyter Notebook, that is not what it is intended for. Instead, it is meant for creating documents that the analysis of data and the process of the analysis."
        },
        "JupyterPackaging": {
          "correct": false,
          "wrong": "No, Jupyter Notebooks are part of the Anaconda distribution of Python, but not part of the basic Python distribution."
        },
        "JupytersUse": {
          "correct": false,
          "wrong": "No, Jupyter Notebooks are professional data science tools!"
        },
        "MarkdownFormat": {
          "correct": "# Introduction",
          "feedback": {
            "* Introduction": "No, this creates bulleted list items.",
            "sectionIntroductionsection": "No, this is HTML, not Markdown.",
            "You cannot create section headers in Markdown.": "Incorrect! It is quite possible to create headers."
          }
        },
        "MarkdownPython": {
          "correct": false,
          "wrong": "No, Markdown is a formatting language (like HTML), not a part of Python.\u00c2\u00a0"
        },
        "SharingJupyter": {
          "correct": true,
          "wrong": "No, you can!"
        }
      }
    }
  },
  {
    "body": {
      "questions": {
        "DataScienceDefinition": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Data Science involves extracting meaning from data.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "DataScienceVsComputerScienceDefinitions": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Data Science is another name for Computer Science.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "NonlinearWorkflow": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Data Science is a straight-forward process with no iterative design.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "WorkflowOrder": {
          "type": "matching_question",
          "points": 2.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Put these steps in order of a typical Data Science workflow:<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "Finding Data",
            "Cleaning Data",
            "Analyzing Data",
            "Creating a Report",
            "Presenting a Report"
          ],
          "statements": [
            "1st",
            "2nd",
            "3rd",
            "4th",
            "5th"
          ]
        }
      }
    },
    "checks": {
      "questions": {
        "DataScienceDefinition": {
          "correct": true,
          "wrong": "No, this is a fair description of Data Science."
        },
        "DataScienceVsComputerScienceDefinitions": {
          "correct": false,
          "wrong": "No, Data Science and Computer Science are two separate fields. They just have a lot of overlaps."
        },
        "NonlinearWorkflow": {
          "correct": false,
          "wrong": "Incorrect! Data Science involves a lot of non-linear workflow."
        },
        "WorkflowOrder": {
          "correct": [
            "Finding Data",
            "Cleaning Data",
            "Analyzing Data",
            "Creating a Report",
            "Presenting a Report"
          ],
          "wrong": [
            "",
            "",
            "",
            "",
            ""
          ]
        }
      }
    }
  },
  {
    "body": {
      "questions": {
        "ClassifyInputOrOutput": {
          "type": "matching_question",
          "points": 3.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Classify each of these as either \"Input\" or \"Output\".<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "Input",
            "Output"
          ],
          "statements": [
            "Typing on the keyboard",
            "A monitor displaying information",
            "A printer making a report",
            "A robot moving its arm",
            "Moving the mouse",
            "Data being loaded from a file"
          ]
        },
        "DefineConsole": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">The console is like a chat box that you can type instructions into.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "DefinePrintFunction": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Print is an instruction to the computer to retrieve input from the user.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "PredictInputOutput": {
          "type": "short_answer_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>Write exactly what will be printed by running the following command:</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #008000;\">input</span>(<span style=\"color: #BA2121;\">\"Type a number:\"</span>)\n</pre></div>\n\n\n<p>The user will type <code>5</code> in the box that appears.</p>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "PredictPrintOutput": {
          "type": "short_answer_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>Write exactly what will be printed by running the following command:</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #008000; font-weight: bold;\">print</span>(<span style=\"color: #BA2121;\">\"Hello World!\"</span>)\n</pre></div>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        }
      }
    },
    "checks": {
      "questions": {
        "ClassifyInputOrOutput": {
          "correct": [
            "Input",
            "Output",
            "Output",
            "Output",
            "Input",
            "Input"
          ],
          "wrong": [
            "When you type on the keyboard, data is sent to the computer. This is what happens with the \"input\" instruction, in fact.",
            "Monitors are used to show out information from the user that has been collected.\u00c2\u00a0",
            "Printers are another way to show out information from the user. This is where the word \"print\" comes from, even though we are usually only printing to a monitor instead of on paper.",
            "Robots that move their arms represent the result of some processing, and are not a form of data input.",
            "If the computer was moving the mouse, then it would be output. However, instead a mouse is moved to give information to the computer, much like a keyboard.",
            "Data being created by a program into a file is a result of an output. However, if data is being loaded FROM a file, then it is an example of Input."
          ]
        },
        "DefineConsole": {
          "correct": true,
          "wrong": "No, really, you should think of it as a chat box where you type commands and then receive messages from the computer."
        },
        "DefinePrintFunction": {
          "correct": false,
          "wrong": "No, print is an instruction for presenting information to the user. \"input\" is\u00c2\u00a0an instruction for retrieving information from the user."
        },
        "PredictInputOutput": {
          "wrong_any": "Not quite! It may help to run this command yourself and seeing EXACTLY\nwhat is printed out. Note that we are <em>only</em> using <code>input</code> here, not the\n<code>print</code> function. Yes, something will be printed, but it's not necessarily\nrelated to what the user types in!",
          "correct_exact": [
            "Type a number:",
            "Type a number: ",
            "Type a number:\n",
            "Type a number: \n"
          ]
        },
        "PredictPrintOutput": {
          "correct_exact": [
            "Hello World!",
            "Hello World!\n"
          ]
        }
      }
    }
  },
  {
    "body": {
      "questions": {
        "ExplainPurposeOfValues": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">The purpose of a value is to represent data from the real world.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "LiteralValueDefinition": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Literal values are specific values written in the source code.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "OnlyPrintLiterals": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">The \"print\" instruction can only print literal values.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "ValueRepresentation": {
          "type": "multiple_choice_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>What does the following value specifically represent?</p>\n<p><code>24</code></p>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "The number of hours in a day",
            "We have no way of knowing without more information.",
            "The number of cookies I ate last night",
            "A popular TV show"
          ]
        },
        "WhatCanValuesRepresent": {
          "type": "multiple_answers_question",
          "points": 3.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Which of the following could be represented with a value?<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">A person's height<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "The text of Moby Dick",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">The number of meals you've eaten this week<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">A text description of someone's emotional response to a poem<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "An audio recording of a song"
          ]
        }
      }
    },
    "checks": {
      "questions": {
        "ExplainPurposeOfValues": {
          "correct": true,
          "wrong": "No, this is true! Although it is also true that once the values are in the computer, we need to manipulate them and then print them out; but the most important part is understanding that they are there to represent the real world!"
        },
        "LiteralValueDefinition": {
          "correct": true,
          "wrong": "No, this is true! We refer to them as \"Literal\" because they are literally there in the source code"
        },
        "OnlyPrintLiterals": {
          "correct": false,
          "wrong": "As we will see, we can actually print many kinds of things. Although we can certainly print literal values too!"
        },
        "ValueRepresentation": {
          "correct": "We have no way of knowing without more information.",
          "feedback": {
            "The number of hours in a day": "Although this\u00c2\u00a0is a perfectly reasonable interpretation of this value, you have no idea what the programmer meant by it without more context. You can't just assume!",
            "The number of cookies I ate last night": "Although this is a somewhat reasonable interpretation of this value, you have no idea what the programmer meant by it without more context. You can't just assume! Also, I feel sick after eating all those cookies.",
            "A popular TV show": "Although this\u00c2\u00a0is a perfectly reasonable interpretation of this value, you have no idea what the programmer meant by it without more context. You can't just assume!"
          }
        },
        "WhatCanValuesRepresent": {
          "correct": [
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">A person's height<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "The text of Moby Dick",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">The number of meals you've eaten this week<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">A text description of someone's emotional response to a poem<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "An audio recording of a song"
          ]
        }
      }
    }
  },
  {
    "body": {
      "questions": {
        "IntegerLiterals": {
          "type": "multiple_answers_question",
          "points": 3.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Which of the following are Integers, in Python?<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "0",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\"Five\"<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\"7\"<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "5.5",
            "2.0",
            "-100000257"
          ]
        },
        "LiteralType": {
          "type": "matching_question",
          "points": 4.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Identify the type of each literal value.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "Integer",
            "Boolean",
            "Float",
            "String",
            "None"
          ],
          "statements": [
            "5",
            "False",
            "4.3",
            "\"Hello World\"",
            "\"4\"",
            "\"\"",
            "None",
            "0",
            "\"True\""
          ]
        },
        "NumberOfValuesPerTypes": {
          "type": "matching_question",
          "points": 2.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">How many possible values are there for each type?<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "More than 100",
            "2",
            "1"
          ],
          "statements": [
            "Integer",
            "Boolean",
            "String",
            "Float",
            "None"
          ]
        },
        "PrimitiveTypeDescriptions": {
          "type": "matching_question",
          "points": 3.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Match each type to its description.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "Whole numbers",
            "Text",
            "Decimal numbers",
            "A special value that means nothing",
            "True or False",
            "This is not a type"
          ],
          "statements": [
            "Integer",
            "String",
            "Float",
            "None",
            "Boolean",
            "Python"
          ]
        },
        "PrintStringOutput": {
          "type": "short_answer_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>Write the output of the print statement:</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #008000; font-weight: bold;\">print</span>(<span style=\"color: #BA2121;\">\"5\"</span>)\n</pre></div>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "TypeAbbreviations": {
          "type": "matching_question",
          "points": 2.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Match each type to its abbreviation in Python:<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "int",
            "None",
            "bool",
            "str"
          ],
          "statements": [
            "Integer",
            "None",
            "Boolean",
            "String"
          ]
        }
      }
    },
    "checks": {
      "questions": {
        "IntegerLiterals": {
          "correct": [
            "0",
            "-100000257"
          ]
        },
        "LiteralType": {
          "correct": [
            "Integer",
            "Boolean",
            "Float",
            "String",
            "String",
            "String",
            "None",
            "Integer",
            "String"
          ],
          "wrong": [
            "",
            "Notice that there are not quotation marks around this text!",
            "",
            "",
            "Notice that there are quotation marks around this number!",
            "",
            "Notice that there are not quotation marks around this text!",
            "",
            "Notice that there are quotation marks around this text!"
          ]
        },
        "NumberOfValuesPerTypes": {
          "correct": [
            "More than 100",
            "2",
            "More than 100",
            "More than 100",
            "1"
          ],
          "wrong": [
            "",
            "",
            "",
            "",
            ""
          ]
        },
        "PrimitiveTypeDescriptions": {
          "correct": [
            "Whole numbers",
            "Text",
            "Decimal numbers",
            "A special value that means nothing",
            "True or False",
            "This is not a type"
          ],
          "wrong": [
            "",
            "",
            "",
            "",
            "",
            "Python is the name of the programming language, it is not a type itself!"
          ]
        },
        "PrintStringOutput": {
          "correct_exact": [
            "5"
          ]
        },
        "TypeAbbreviations": {
          "correct": [
            "int",
            "None",
            "bool",
            "str"
          ],
          "wrong": [
            "",
            "",
            "",
            ""
          ]
        }
      }
    }
  },
  {
    "body": {
      "questions": {
        "AdditionOperatorArity": {
          "type": "multiple_choice_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">How many things can be added at once with the \"+\" operator?<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "None, computers can't add.",
            "Two things.",
            "Any number of things."
          ]
        },
        "ArithmeticOperatorPrecedence": {
          "type": "matching_question",
          "points": 2.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Put these operators in order of their precedence (what order they are\nevaluated):<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "Parentheses",
            "Exponents",
            "Multiplication, Modulo, and Division",
            "Addition, Subtraction"
          ],
          "statements": [
            "First:",
            "Second",
            "Third",
            "Fourth"
          ]
        },
        "IntegerDivisionConversion": {
          "type": "short_answer_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>Predict the result of this expression:</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #666666;\">10</span> <span style=\"color: #666666;\">/</span> <span style=\"color: #666666;\">5</span> <span style=\"color: #666666;\">-</span> <span style=\"color: #666666;\">1</span>\n</pre></div>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "ModuloOperator": {
          "type": "short_answer_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>Predict the result of this expression:</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span>(<span style=\"color: #666666;\">10+8</span>) <span style=\"color: #666666;\">%</span> <span style=\"color: #666666;\">12</span>\n</pre></div>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "Question": {
          "type": "short_answer_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>Predict the result of this expression:</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #666666;\">4</span> <span style=\"color: #666666;\">+</span> <span style=\"color: #666666;\">5</span> <span style=\"color: #666666;\">*</span> <span style=\"color: #666666;\">2</span>\n</pre></div>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "StringPlusInt": {
          "type": "multiple_choice_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>What is the result if you ask Python to perform the following computation?</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8;\"><pre style=\"line-height: 125%;\"><span></span><span style=\"color: #BA2121;\">\"2\"</span><span style=\"color: #666666;\">+2</span>\n</pre></div>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "\"22\"",
            "4",
            "\"4\"",
            "You cannot add these together."
          ]
        }
      }
    },
    "checks": {
      "questions": {
        "AdditionOperatorArity": {
          "correct": "Two things.",
          "feedback": {
            "None, computers can't add.": "Computers can add! Rewatch the lesson video.",
            "Any number of things.": "No, computers can only add two things at once. You can combine multiple addition operators to add more than two things (e.g., 1+1+1), but you can only add 2 at a time. That expression is actually ((1+1)+1)."
          }
        },
        "ArithmeticOperatorPrecedence": {
          "correct": [
            "Parentheses",
            "Exponents",
            "Multiplication, Modulo, and Division",
            "Addition, Subtraction"
          ],
          "wrong": [
            "",
            "",
            "",
            ""
          ]
        },
        "IntegerDivisionConversion": {
          "correct_exact": [
            "1.0",
            "1."
          ]
        },
        "ModuloOperator": {
          "correct_exact": [
            "6"
          ]
        },
        "Question": {
          "correct_exact": [
            "14"
          ]
        },
        "StringPlusInt": {
          "correct": "You cannot add these together.",
          "feedback": {}
        }
      }
    }
  },
  {
    "body": {
      "questions": {
        "Survey - Start - Allergies": {
          "type": "multiple_answers_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Are you allergic to any of the following?</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "Dogs",
            "Chocolate",
            "Peanuts",
            "Programming"
          ]
        },
        "Survey - Start - Animal": {
          "type": "multiple_choice_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Which of the following animals do you most prefer?</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "Dogs",
            "Cats",
            "Capybaras",
            "Snakes"
          ]
        },
        "Survey - Start - Contexts": {
          "type": "multiple_answers_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Consider these different topics that could be included in this course. Please indicate whether you WOULD prefer that they be included.</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "Processing real data sets to answer data science questions",
            "Editing photos, pictures, sounds, and movies with code",
            "Making games and animations",
            "Making websites and web applications",
            "Making scientific models of real-world phenomenon to answer questions from Biology, Chemistry, Physics, etc.",
            "Controlling robots or drones with code",
            "Making phone apps for Android or iPhone",
            "Solving cybersecurity and cryptography problems"
          ]
        },
        "Survey - Start - Demographics": {
          "type": "multiple_answers_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p><span>Please mark all of the following that you feel are true for yourself.</span></p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "I identify as a woman.",
            "I intend to take more Computer Science classes.",
            "I am not a native English speaker.",
            "I identify as a member of an underrepresented group."
          ]
        },
        "Survey - Start - Estimate Ability": {
          "type": "multiple_choice_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p><span>Which of these best describes how easily you could write a program (in any language) to find the largest number in a list?</span></p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "I wouldn\u2019t know where to start.",
            "I could struggle through by trial and error with a lot of web searches.",
            "I could do it quickly with little or no use of external help."
          ]
        },
        "Survey - Start - Gender Other": {
          "type": "essay_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>If you would prefer to more precisely explain your gender identity, please feel free to do so.</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "Survey - Start - Level": {
          "type": "multiple_choice_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>What's your current level/year?</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "Freshman",
            "Sophomore",
            "Junior",
            "Senior",
            "Grad student"
          ]
        },
        "Survey - Start - Major": {
          "type": "multiple_answers_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>What is your current major?</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "Computer Science",
            "Psychology",
            "Math",
            "University Studies/Undecided/Undeclared",
            "Other Engineering",
            "Other Arts and Sciences",
            "Other college not listed"
          ]
        },
        "Survey - Start - Name": {
          "type": "essay_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>What name do you prefer to be called?</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "Survey - Start - Open Ended": {
          "type": "essay_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p><span>Please use the space below to tell us something that you think is interesting or relevant to your life, especially if it would help us teach you better.</span></p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "Survey - Start - Previous Languages": {
          "type": "multiple_answers_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Have you ever written any code in any of the following programming languages?</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "Java",
            "Scratch or Snap",
            "C or C++",
            "MatLab",
            "Racket",
            "JavaScript"
          ]
        },
        "Survey - Start - Prior Courses": {
          "type": "multiple_answers_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Previous programming experience (choose what you feel is the best description of you, if more than one applies)</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "None",
            "AP Computer Science A (or A/B)",
            "Other non-AP High school class",
            "Other University-level class (e.g. CISC 101, 103, 106)",
            "Self-taught",
            "Summer camp, after school club, etc.",
            "On-line course(s) (code.org, coursera, CodeCademy, etc.)"
          ]
        },
        "Survey - Start - Prior Programming": {
          "type": "multiple_choice_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p><span>Which of these best describes your experience with programming in general? Remember, there are no wrong answers.</span></p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "I have none.",
            "I have written a few lines now and again.",
            "I have written programs for my own use that are a couple of pages long.",
            "I have written and maintained larger pieces of software."
          ]
        },
        "Survey - Start - Prior Python": {
          "type": "multiple_choice_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Which of these best describes your experience with programming in Python?</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "I have none.",
            "I have written a few lines now and again.",
            "I have written programs for my own use that are a couple of pages long.",
            "I have written and maintained larger pieces of software."
          ]
        },
        "Survey - Start - Why Enrolled": {
          "type": "multiple_answers_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Why are you taking this class? Mark all that apply.</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "To fill a requirement for my major",
            "To learn how to program",
            "To improve my resume/get a job",
            "It seems easy",
            "To become a Computer Scientist",
            "It seems fun",
            "I do not want to take this class, but am required to do so"
          ]
        }
      }
    },
    "checks": {
      "questions": {
        "Survey - Start - Allergies": {
          "correct": [
            "Dogs"
          ]
        },
        "Survey - Start - Animal": {
          "correct": "Dogs",
          "feedback": {}
        },
        "Survey - Start - Contexts": {
          "correct": [
            "Processing real data sets to answer data science questions"
          ]
        },
        "Survey - Start - Demographics": {
          "correct": [
            "I identify as a woman."
          ]
        },
        "Survey - Start - Estimate Ability": {
          "correct": "I wouldn\u2019t know where to start.",
          "feedback": {}
        },
        "Survey - Start - Gender Other": {},
        "Survey - Start - Level": {
          "correct": "Freshman",
          "feedback": {}
        },
        "Survey - Start - Major": {
          "correct": [
            "Computer Science"
          ]
        },
        "Survey - Start - Name": {},
        "Survey - Start - Open Ended": {},
        "Survey - Start - Previous Languages": {
          "correct": [
            "Java"
          ]
        },
        "Survey - Start - Prior Courses": {
          "correct": [
            "None"
          ]
        },
        "Survey - Start - Prior Programming": {
          "correct": "I have none.",
          "feedback": {}
        },
        "Survey - Start - Prior Python": {
          "correct": "I have none.",
          "feedback": {}
        },
        "Survey - Start - Why Enrolled": {
          "correct": [
            "To fill a requirement for my major"
          ]
        }
      }
    }
  },
  {
    "body": {
      "questions": {
        "Exam Scheduling": {
          "type": "essay_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>I have contacted the UD Testing Center, and they have resent the emails to schedule Midterm 1. If you have NOT received your email, please enter your UD email below. Please do check your Spam filter and check that you have not received any emails from the testing center as of 5pm on 3/5/2019.</p>\n<p>ONLY ENTER YOUR EMAIL IF YOU HAVE NOT RECEIVED ANY EMAILS FROM THE TESTING CENTER.</p>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        }
      }
    },
    "checks": {
      "questions": {
        "Exam Scheduling": {}
      }
    }
  },
  {
    "body": {
      "questions": {
        "Survey - Course Overall So Far": {
          "type": "multiple_answers_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">So far, has the overall course...<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "... been fun?",
            "... been useful to your long-term career?",
            "... given you opportunities to express yourself?",
            "... had an appropriate level of difficulty?",
            "... given you an opportunity to earn a satisfactory grade?",
            "... helped you learn about programming?",
            "... helped you learn about Computer Science?",
            "... helped you learn about problem solving?"
          ]
        },
        "Survey - Course Resources So Far": {
          "type": "multiple_answers_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>So far, I have frequently...</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "... watched the video lessons on Canvas.",
            "... read the video lesson PowerPoint slides.",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">... read the video lesson's transcripts on Canvas.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "... watched the Course Capture videos.",
            "... read the optional online textbook.",
            "... worked with my assigned partner.",
            "... attended class.",
            "... attended course staff office hours.",
            "... visited the Academic Enrichment Center for tutoring.",
            "... googled for help.",
            "... asked questions on the course piazza."
          ]
        },
        "Survey - Domain Identification So Far": {
          "type": "multiple_answers_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">So far, this course has...<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "... made me more interested in careers in Computer Science.",
            "... made me less likely to have a careers in Computing."
          ]
        },
        "Survey - Self-Evaluation": {
          "type": "multiple_answers_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Currently...</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "I am doing well in this course",
            "I am doing poorly compared to my classmates",
            "I am struggling to complete assignments",
            "I am overwhelmed by this class",
            "I am overwhelmed by all my classes",
            "I am expecting to do well in this course",
            "I like Python so far.",
            "I am comfortable with the instructor.",
            "I am comfortable with my classmates.",
            "I am comfortable with the TAs in my lab."
          ]
        },
        "Survey - Self-regulation": {
          "type": "multiple_answers_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>So far, I have...</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "started working on lessons in a timely fashion",
            "started working on lessons in a timely fashion",
            "worked on lessons regularly and effectively",
            "worked on projects regularly and effectively",
            "been able to submit work before most due dates",
            "been able to submit work before most lock dates",
            "been able to balance the time needed for this course"
          ]
        }
      }
    },
    "checks": {
      "questions": {
        "Survey - Course Overall So Far": {
          "correct": [
            "... been fun?",
            "... been useful to your long-term career?",
            "... given you opportunities to express yourself?",
            "... had an appropriate level of difficulty?",
            "... given you an opportunity to earn a satisfactory grade?",
            "... helped you learn about programming?",
            "... helped you learn about Computer Science?",
            "... helped you learn about problem solving?"
          ]
        },
        "Survey - Course Resources So Far": {
          "correct": [
            "... watched the video lessons on Canvas.",
            "... read the video lesson PowerPoint slides.",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">... read the video lesson's transcripts on Canvas.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "... watched the Course Capture videos.",
            "... read the optional online textbook.",
            "... worked with my assigned partner.",
            "... attended class.",
            "... attended course staff office hours.",
            "... visited the Academic Enrichment Center for tutoring.",
            "... googled for help.",
            "... asked questions on the course piazza."
          ]
        },
        "Survey - Domain Identification So Far": {
          "correct": [
            "... made me more interested in careers in Computer Science."
          ]
        },
        "Survey - Self-Evaluation": {
          "correct": [
            "I am doing well in this course"
          ]
        },
        "Survey - Self-regulation": {
          "correct": [
            "started working on lessons in a timely fashion"
          ]
        }
      }
    }
  },
  {
    "body": {
      "questions": {
        "Survey - Course Overall So Far": {
          "type": "multiple_answers_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>So far, the overall course has...</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>... been fun for me</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>... been useful to my long-term career</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>... given me opportunities to express myself</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>... had an appropriate level of difficulty</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>... given me an opportunity to earn a satisfactory grade</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>... helped me learn about programming</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>... helped me learn about Computer Science</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>... helped me learn about problem solving</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
          ]
        },
        "Survey - Course Resources So Far": {
          "type": "multiple_answers_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>So far, I have frequently...</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>... watched the video lessons on Canvas.</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>... read the video lesson PowerPoint slides.</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>... read the video lesson's transcripts on Canvas.</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>... watched the Course Capture videos.</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>... read the optional online textbook.</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>... worked with my assigned partner.</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>... attended class.</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>... attended course staff office hours.</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>... visited the Academic Enrichment Center for tutoring.</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>... googled for help.</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>... asked questions on the course piazza.</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
          ]
        },
        "Survey - Domain Identification So Far": {
          "type": "multiple_answers_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>So far, this course has...</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>... made me more interested in careers in Computer Science.</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>... made me less likely to have a careers in Computing.</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
          ]
        },
        "Survey - Self-Evaluation": {
          "type": "multiple_answers_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Currently...</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>I like Python so far.</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>I am doing well in this course</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>I am struggling to complete assignments</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>I am overwhelmed by this class</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>I am overwhelmed by all my classes</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>I am expecting to do well in this course</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>I am comfortable seeking help from the instructor.</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>I am comfortable seeking help from my classmates.</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>I am comfortable seeking help from the TAs in my lab.</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
          ]
        },
        "Survey - Self-regulation": {
          "type": "multiple_answers_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>So far, I have...</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>gotten started on assignments long before they are due</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>worked on assignments regularly and effectively</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>been able to submit work before it is due</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
          ]
        },
        "Survey - Specific Assignments": {
          "type": "multiple_answers_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Considering the assignments we have had so far, I enjoyed...</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Turtle Alphabet (drawing letters with turtles)</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Functional Magic (goblin banking program)</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Crypto Corgi Company (simple cryptography on strings)</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Monster Mash (Halloween-themed questions about nested data)</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Arcade (game development)</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Using BlockPy to complete programming problems</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Using Thonny to complete programming problems</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
          ]
        }
      }
    },
    "checks": {
      "questions": {
        "Survey - Course Overall So Far": {
          "correct": [
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>... been fun for me</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>... been useful to my long-term career</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>... given me opportunities to express myself</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>... had an appropriate level of difficulty</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>... given me an opportunity to earn a satisfactory grade</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>... helped me learn about programming</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>... helped me learn about Computer Science</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>... helped me learn about problem solving</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
          ]
        },
        "Survey - Course Resources So Far": {
          "correct": [
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>... watched the video lessons on Canvas.</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>... read the video lesson PowerPoint slides.</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>... read the video lesson's transcripts on Canvas.</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>... watched the Course Capture videos.</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>... read the optional online textbook.</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>... worked with my assigned partner.</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>... attended class.</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>... attended course staff office hours.</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>... visited the Academic Enrichment Center for tutoring.</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>... googled for help.</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>... asked questions on the course piazza.</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
          ]
        },
        "Survey - Domain Identification So Far": {
          "correct": [
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>... made me more interested in careers in Computer Science.</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>... made me less likely to have a careers in Computing.</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
          ]
        },
        "Survey - Self-Evaluation": {
          "correct": [
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>I like Python so far.</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>I am doing well in this course</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>I am struggling to complete assignments</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>I am overwhelmed by this class</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>I am overwhelmed by all my classes</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>I am expecting to do well in this course</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>I am comfortable seeking help from the instructor.</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>I am comfortable seeking help from my classmates.</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>I am comfortable seeking help from the TAs in my lab.</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
          ]
        },
        "Survey - Self-regulation": {
          "correct": [
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>gotten started on assignments long before they are due</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>worked on assignments regularly and effectively</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>been able to submit work before it is due</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
          ]
        },
        "Survey - Specific Assignments": {
          "correct": [
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Turtle Alphabet (drawing letters with turtles)</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Functional Magic (goblin banking program)</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Crypto Corgi Company (simple cryptography on strings)</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Monster Mash (Halloween-themed questions about nested data)</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Arcade (game development)</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Using BlockPy to complete programming problems</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Using Thonny to complete programming problems</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
          ]
        }
      }
    }
  },
  {
    "body": {
      "questions": {
        "Survey- Consenting": {
          "type": "multiple_choice_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p><strong>CONSENT TO PARTICIPATE IN THE RESEARCH STUDY:</strong></p>\n<p><strong>I have read and understood the information in this form and I agree to participate in the study. I am 18 years of age or older. I have been given the opportunity to ask any questions I had and those questions have been answered to my satisfaction. I understand that I will be given a copy of this form for my records.</strong></p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "I consent",
            "I do NOT consent"
          ]
        }
      }
    },
    "checks": {
      "questions": {
        "Survey- Consenting": {
          "correct": "I consent",
          "feedback": {}
        }
      }
    }
  },
  {
    "body": {
      "questions": {
        "Survey- Career Plans": {
          "type": "essay_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Write at least 200 words describing the kinds of projects, programs, or applications you would find most interesting to work on within this concentration.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "Survey- Concentration": {
          "type": "essay_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>Thinking forward, which of the concentrations sounds most interesting to you right now?</p>\n<p>You can review the concentrations in more depth here: <a href=\"https://www.cis.udel.edu/academics/undergraduate-programs/concentrations/\">https://www.cis.udel.edu/academics/undergraduate-programs/concentrations/</a></p>\n<p>It might also be helpful to review this Wikipedia page on various topics: <a href=\"https://en.wikipedia.org/wiki/Outline_of_computer_science\">https://en.wikipedia.org/wiki/Outline_of_computer_science</a></p>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "Survey- Destination": {
          "type": "multiple_choice_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Currently, which of the following sounds like the best path for your academic career?<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "Minor in CS",
            "BA in CS",
            "BS in CS",
            "No formal degree, just more courses",
            "Too unsure to say",
            "Something else that you didn't list (mention it below)"
          ]
        }
      }
    },
    "checks": {
      "questions": {
        "Survey- Career Plans": {},
        "Survey- Concentration": {},
        "Survey- Destination": {
          "correct": "BS in CS",
          "feedback": {}
        }
      }
    }
  },
  {
    "body": {
      "questions": {
        "IdentifyValidLateScenarios": {
          "type": "multiple_answers_question",
          "points": 2.5,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Which of the following circumstances are good cases for granting extensions?<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">On Friday morning at 9am, my computer exploded and I lost all the code for\nmy final project.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">I forgot that the project was due at 11:59pm; it's only 12:05am, so I'm\nemailing you my code.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "My grandmother passed away last night, and I need to go see my family.",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Here's my doctor's note. It looks like I have the flu.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">I started the course late and I'm only halfway done the project. Can\nI have an extra day to finish it?<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
          ]
        },
        "ListCourseObjectives": {
          "type": "multiple_answers_question",
          "points": 3.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Which of the following are course learning objectives?<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "Write programs that use primitive data, lists, and dictionaries.",
            "Abstract real world information into computational models.",
            "Create tests for programs to ensure their correctness.",
            "Incorporate and recognize higher order programming patterns.",
            "Create a simple website.",
            "Describe the major hardware components of a computer."
          ]
        },
        "RecallComputerIsMandatory": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\"I must bring my laptop to every lecture and lab.\"<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "RecallCourseGradeAdjustment": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\"My final course grade cannot be more than one letter grade higher than my average exam grade.\"<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "RecallLabAttendanceIsMandatory": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\"Lab attendance is optional.\"<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "RecallVideosAreOptional": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\"I must watch every Slides video.\"<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        },
        "UsingAutogradersOffcampus": {
          "type": "multiple_choice_question",
          "points": 2.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>You attempt to open BlockPy Programming Problem #22, but the page never stops loading. What is the most likely reason?</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "You are off-campus and did not install/turn on the VPN.",
            "BlockPy is broken.",
            "You are not logged into Canvas because your session timed out.",
            "Cosmic rays are interrupting your internet connection."
          ]
        },
        "WhatIsCheating": {
          "type": "multiple_answers_question",
          "points": 3.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\n<p>Which of the following are examples of cheating in this course? Assume that:</p>\n<ul>\n<li>Alice and Betty are partners</li>\n<li>Charlie and David are partners</li>\n</ul>\n<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "Alice and Betty sit down next to each other and discuss their answers to the first mastery quiz, before submitting.",
            "Charlie works on a programming problem while David observes and offers suggestions.",
            "Alice asks David what the answer to the second quiz question is.",
            "David stays up late to finish a programming problemset, and then emails Charlie the answers.",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Alice and Betty look over their individual projects' code together before submitting.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "Charlie and David think they can get done twice as fast if Charlie does the odd questions and David does the even questions."
          ]
        },
        "WhenAreDueDates": {
          "type": "multiple_answers_question",
          "points": 2.5,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><p>Which of the following assignment types are <em>always</em> locked at the end of a module (Friday 11:59pm)?</p><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
          "answers": [
            "Programming Problem Sets",
            "Mastery Quizzes",
            "Other Activities",
            "Projects",
            "Midterms/Exams"
          ]
        },
        "WhenDoYouScheduleExams": {
          "type": "true_false_question",
          "points": 1.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">\"I can take Midterm 2 any time that I want.\"<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        }
      }
    },
    "checks": {
      "questions": {
        "IdentifyValidLateScenarios": {
          "correct": [
            "My grandmother passed away last night, and I need to go see my family.",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Here's my doctor's note. It looks like I have the flu.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">I started the course late and I'm only halfway done the project. Can\nI have an extra day to finish it?<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
          ]
        },
        "ListCourseObjectives": {
          "correct": [
            "Write programs that use primitive data, lists, and dictionaries.",
            "Abstract real world information into computational models.",
            "Create tests for programs to ensure their correctness.",
            "Incorporate and recognize higher order programming patterns."
          ]
        },
        "RecallComputerIsMandatory": {
          "correct": true,
          "wrong": "No, you really do need to bring your laptop to every lecture and lab! We will often be working on course assignments in class, and sometimes we'll even do assessments there using your computer. However, you cannot have your laptop out when the professor is lecturing during the first 10-20 minutes of class. Research says that when students use laptops while the professor is lecturing, both their grades and their classmates grades are negatively affected!"
        },
        "RecallCourseGradeAdjustment": {
          "correct": true,
          "wrong": "This is part of the official course policy. Do not think you can do well on the projects and problem sets, and coast through the exams. You need to do well on those exams!"
        },
        "RecallLabAttendanceIsMandatory": {
          "correct": false,
          "wrong": "Make sure you attend every lab, even if you have completed all the assignments you know of. Sometimes we have assignments in lab! TAs do take attendance during lab."
        },
        "RecallVideosAreOptional": {
          "correct": false,
          "wrong": "Although we certainly encourage you to watch all the videos, you are not required to do so. However, you are definitely required to understand all the concepts taught in each video. If you skim them and are able to learn the same information that way, or if you already knew it, we have no issue with you skipping the videos. But that's a bold claim - how do you know if you know the material until you watch it?"
        },
        "UsingAutogradersOffcampus": {
          "correct": "You are off-campus and did not install/turn on the VPN.",
          "feedback": {}
        },
        "WhatIsCheating": {
          "correct": [
            "Alice asks David what the answer to the second quiz question is.",
            "David stays up late to finish a programming problemset, and then emails Charlie the answers.",
            "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\">Alice and Betty look over their individual projects' code together before submitting.<script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>",
            "Charlie and David think they can get done twice as fast if Charlie does the odd questions and David does the even questions."
          ]
        },
        "WhenAreDueDates": {
          "correct": [
            "Programming Problem Sets",
            "Mastery Quizzes"
          ]
        },
        "WhenDoYouScheduleExams": {
          "correct": false,
          "wrong": "Both midterms and the final exam are administered through the testing center during a select time frame. You are required to schedule your exam prior to showing up for it."
        }
      }
    }
  },
  {
    "body": {
      "questions": {
        "Project 3 Warm-up Table": {
          "type": "fill_in_multiple_blanks_question",
          "points": 5.0,
          "body": "<link rel=\"stylesheet\" href=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354153/canvas_global_app.css\"><table class=\"table\" border=\"1px\" cellpadding=\"5\">\n<tbody>\n<tr>\n<th>#</th>\n<th>Function Name</th>\n<th>Number of Parameters</th>\n<th>Takes input?</th>\n<th>Prints?</th>\n<th>Return Type</th>\n</tr>\n<tr>\n<td>1)</td>\n<td><code>main</code></td>\n<td>0</td>\n<td>No</td>\n<td>No</td>\n<td><code>None</code></td>\n</tr>\n<tr>\n<td>2)</td>\n<td><code>print_introduction</code></td>\n<td>0</td>\n<td>No</td>\n<td>Yes</td>\n<td><code>None</code></td>\n</tr>\n<tr>\n<td>3)</td>\n<td><code>input_name</code></td>\n<td>[3_params]</td>\n<td>[3_input]</td>\n<td>[3_prints]</td>\n<td>[3_return]</td>\n</tr>\n<tr>\n<td>4)</td>\n<td><code>calculate_rating</code></td>\n<td>1</td>\n<td>No</td>\n<td>No</td>\n<td><code>int</code></td>\n</tr>\n<tr>\n<td>5)</td>\n<td><code>print_rating</code></td>\n<td>[5_params]</td>\n<td>[5_input]</td>\n<td>[5_prints]</td>\n<td>[5_return]</td>\n</tr>\n<tr>\n<td>6)</td>\n<td><code>input_loan_amount</code></td>\n<td>[6_params]</td>\n<td>[6_input]</td>\n<td>[6_prints]</td>\n<td>[6_return]</td>\n</tr>\n<tr>\n<td>7)</td>\n<td><code>print_loan_availability</code></td>\n<td>[7_params]</td>\n<td>[7_input]</td>\n<td>[7_prints]</td>\n<td>[7_return]</td>\n</tr>\n<tr>\n<td>8)</td>\n<td><code>test_loan</code></td>\n<td>[8_params]</td>\n<td>[8_input]</td>\n<td>[8_prints]</td>\n<td>[8_return]</td>\n</tr>\n<tr>\n<td>9)</td>\n<td><code>print_conclusion</code></td>\n<td>[9_params]</td>\n<td>[9_input]</td>\n<td>[9_prints]</td>\n<td>[9_return]</td>\n</tr>\n</tbody>\n</table><script src=\"https://instructure-uploads.s3.amazonaws.com/account_250000000085416/attachments/79354152/canvas_global_app.js\"></script>"
        }
      }
    },
    "checks": {
      "questions": {
        "Project 3 Warm-up Table": {
          "correct": {
            "3_params": [
              "0"
            ],
            "3_input": [
              "Yes",
              "yes"
            ],
            "3_prints": [
              "Yes",
              "yes"
            ],
            "3_return": [
              "str",
              "Str",
              "String",
              "string"
            ],
            "5_params": [
              "1"
            ],
            "5_input": [
              "No",
              "no"
            ],
            "5_prints": [
              "Yes",
              "yes"
            ],
            "5_return": [
              "None",
              "none"
            ],
            "6_params": [
              "0"
            ],
            "6_input": [
              "Yes",
              "yes"
            ],
            "6_prints": [
              "Yes",
              "yes"
            ],
            "6_return": [
              "int",
              "Integer",
              "Int",
              "integer"
            ],
            "7_params": [
              "2"
            ],
            "7_input": [
              "No",
              "no"
            ],
            "7_prints": [
              "Yes",
              "yes"
            ],
            "7_return": [
              "None",
              "none"
            ],
            "8_params": [
              "2"
            ],
            "8_input": [
              "No",
              "no"
            ],
            "8_prints": [
              "No",
              "No"
            ],
            "8_return": [
              "bool",
              "Bool",
              "Boolean",
              "boolean"
            ],
            "9_params": [
              "0"
            ],
            "9_input": [
              "No",
              "no"
            ],
            "9_prints": [
              "Yes",
              "yes"
            ],
            "9_return": [
              "None",
              "none"
            ]
          }
        }
      }
    }
  }
]